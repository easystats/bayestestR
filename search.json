[{"path":[]},{"path":"https://easystats.github.io/bayestestR/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://easystats.github.io/bayestestR/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://easystats.github.io/bayestestR/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://easystats.github.io/bayestestR/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://easystats.github.io/bayestestR/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement dom.makowski@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://easystats.github.io/bayestestR/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://easystats.github.io/bayestestR/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://easystats.github.io/bayestestR/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://easystats.github.io/bayestestR/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://easystats.github.io/bayestestR/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://easystats.github.io/bayestestR/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://easystats.github.io/bayestestR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"easystats guidelines 0.1.0 people much welcome contribute code, documentation, testing suggestions. package aims beginner-friendly. Even ’re new open-source way life, new coding github stuff, encourage try submitting pull requests (PRs). “’d like help, ’m good enough programming yet” ’s alright, don’t worry! can always dig code, documentation tests. always typos fix, docs improve, details add, code lines document, tests add… Even smaller PRs appreciated. “’d like help, don’t know start” can look around issue section find features / ideas / bugs start working . can also open new issue just say ’re , interested helping . might ideas adapted skills. “’m sure suggestion idea worthwile” Enough impostor syndrom! suggestions opinions good, even ’s just thought , ’s always good receive feedback. “waste time ? get credit?” Software contributions getting valued academic world, good time collaborate us! Authors substantial contributions added within authors list. ’re also keen including eventual academic publications. Anyway, starting important! enter whole new world, new fantastic point view… fork repo, changes submit . work together make best :)","code":""},{"path":"https://easystats.github.io/bayestestR/CONTRIBUTING.html","id":"code","dir":"","previous_headings":"","what":"Code","title":"Contribution Guidelines","text":"Please document comment code, purpose step (code line) stated clear understandable way. submitting change, please read R style guide particular easystats convention code-style keep consistency code formatting. Regarding style guide, note exception: put readability clarity everything. Thus, like underscores full names (prefer model_performance modelperf interpret_odds_logistic intoddslog). start code, make sure ’re dev branch (“advanced”). , can create new branch named feature (e.g., feature_lightsaber) changes. Finally, submit branch merged dev branch. , every now , dev branch merge master, new package version.","code":""},{"path":"https://easystats.github.io/bayestestR/CONTRIBUTING.html","id":"checks-to-do-before-submission","dir":"","previous_headings":"","what":"Checks to do before submission","title":"Contribution Guidelines","text":"Make sure documentation (roxygen) good Make sure add tests new functions Run: styler::style_pkg(): Automatic style formatting lintr::lint_package(): Style checks devtools::check(): General checks","code":""},{"path":"https://easystats.github.io/bayestestR/CONTRIBUTING.html","id":"useful-materials","dir":"","previous_headings":"","what":"Useful Materials","title":"Contribution Guidelines","text":"Understanding GitHub flow","code":""},{"path":"https://easystats.github.io/bayestestR/PULL_REQUEST_TEMPLATE.html","id":null,"dir":"","previous_headings":"","what":"Description","title":"Description","text":"PR aims adding feature…","code":""},{"path":"https://easystats.github.io/bayestestR/PULL_REQUEST_TEMPLATE.html","id":"proposed-changes","dir":"","previous_headings":"","what":"Proposed Changes","title":"Description","text":"changed foo function …","code":""},{"path":"https://easystats.github.io/bayestestR/articles/bayes_factors.html","id":"the-bayes-factor","dir":"Articles","previous_headings":"","what":"The Bayes Factor","title":"Bayes Factors","text":"Bayes Factors (BFs) indices relative evidence one “model” another. role hypothesis testing index, Bayesian framework \\(p\\)-value classical/frequentist framework. significance-based testing, \\(p\\)-values used assess unlikely observed data null hypothesis true, Bayesian model selection framework, Bayes factors assess evidence different models, model corresponding specific hypothesis. According Bayes’ theorem, can update prior probabilities model \\(M\\) (\\(P(M)\\)) posterior probabilities (\\(P(M|D)\\)) observing datum \\(D\\) accounting probability observing datum given model (\\(P(D|M)\\), also known likelihood): \\[ P(M|D) = \\frac{P(D|M)\\times P(M)}{P(D)} \\] Using equation, can compare probability-odds two models: \\[ \\underbrace{\\frac{P(M_1|D)}{P(M_2|D)}}_{\\text{Posterior Odds}} =  \\underbrace{\\frac{P(D|M_1)}{P(D|M_2)}}_{\\text{Likelihood Ratio}}  \\times \\underbrace{\\frac{P(M_1)}{P(M_2)}}_{\\text{Prior Odds}} \\] likelihood ratio (middle term) Bayes factor - factor prior odds updated observing data posterior odds. Thus, Bayes factors can calculated two ways: ratio quantifying relative probability observed data two models. (contexts, probabilities also called marginal likelihoods.) \\[ BF_{12}=\\frac{P(D|M_1)}{P(D|M_2)} \\] degree shift prior beliefs relative credibility two models (since can computed dividing posterior odds prior odds). \\[ BF_{12}=\\frac{Posterior~Odds_{12}}{Prior~Odds_{12}} \\] provide functions computing Bayes factors two different contexts: testing single parameters (coefficients) within model comparing statistical models ","code":""},{"path":"https://easystats.github.io/bayestestR/articles/bayes_factors.html","id":"bayesfactor_parameters","dir":"Articles","previous_headings":"","what":"Testing Models’ Parameters with Bayes Factors","title":"Bayes Factors","text":"Bayes factor single parameter can used answer question: “Given observed data, null hypothesis absence effect become less credible?” Bayesian analysis Students’ (1908) Sleep data set. Let’s use Students’ (1908) Sleep data set (data(\"sleep\")). data comes study participants administered drug researchers assessed extra hours sleep participants slept afterwards. try answering following research question using Bayes factors: Given observed data, hypothesis drug (effect group) effect numbers hours extra sleep (variable extra) become less credible?  boxplot suggests second group higher number hours extra sleep. much? Let’s fit simple Bayesian linear model, prior \\(b_{group} \\sim N(0, 3)\\) (.e. prior follows Gaussian/normal distribution \\(mean = 0\\) \\(SD = 3\\)), using rstanarm package:","code":"set.seed(123) library(rstanarm)  model <- stan_glm(   formula = extra ~ group,   data = sleep,   prior = normal(0, 3, autoscale = FALSE),   chains = 10, iter = 5000, warmup = 1000 )"},{"path":"https://easystats.github.io/bayestestR/articles/bayes_factors.html","id":"testing-against-a-null-region","dir":"Articles","previous_headings":"Testing Models’ Parameters with Bayes Factors","what":"Testing against a null-region","title":"Bayes Factors","text":"One way operationlizing null-hypothesis setting null region, effect falls within interval practically equivalent null (Kruschke, 2010). case, means defining range effects consider equal drug effect . can compute prior probability drug’s effect falling outside null-region, prior probability drug’s effect falling within null-region get prior odds. Say effect smaller hour extra sleep practically equivalent effect , define prior odds : \\[ \\frac {P(b_{drug} \\notin [-1, 1])} {P(b_{drug} \\[-1, 1])} \\] Given prior normal distribution centered 0 hours scale (SD) 3 hours, priors look like :  prior odds 2.8. looking posterior distribution, can now compute posterior probability drug’s effect falling outside null-region, posterior probability drug’s effect falling within null-region get posterior odds: \\[ \\frac {P(b_{drug} \\notin [-1,1] | Data)} {P(b_{drug} \\[-1,1] | Data)} \\]  can see center posterior distribution shifted away 0 (~1.5). Likewise, posterior odds 2.5, seems favor effect non-null. , mean data support alternative null? Hard say, since even data observed, priors already favored alternative - need take priors account ! Let’s compute Bayes factor change prior odds posterior odds: \\(BF_{10} = Odds_{posterior} / Odds_{prior} = 0.9\\)! BF indicates data provide 1/0.9 = 1.1 times evidence effect drug practically nothing drug clinically significant effect. Thus, although center distribution shifted away 0, posterior distribution seems favor non-null effect drug, seems given observed data, probability mass overall shifted closer null interval, making values null interval probable! (see Non-overlapping Hypotheses Morey & Rouder, 2011) can achieved function bayesfactor_parameters(), computes Bayes factor model’s parameters: can also plot using see package:  Note interpretation guides Bayes factors can found effectsize package:","code":"My_first_BF <- bayesfactor_parameters(model, null = c(-1, 1)) My_first_BF > Bayes Factor (Null-Interval) >  > Parameter   |    BF > ------------------- > (Intercept) | 0.098 > group2      | 0.888 >  > * Evidence Against The Null: [-1.000, 1.000] library(see) plot(My_first_BF) effectsize::interpret_bf(exp(My_first_BF$log_BF[2]), include_value = TRUE) > [1] \"anecdotal evidence (BF = 1/1.13) against\" > (Rules: jeffreys1961)"},{"path":"https://easystats.github.io/bayestestR/articles/bayes_factors.html","id":"testing-against-the-point-null-0","dir":"Articles","previous_headings":"Testing Models’ Parameters with Bayes Factors","what":"Testing against the point-null (0)","title":"Bayes Factors","text":"don’t know region practically equivalent 0? just want null exactly zero? problem - width null region shrinks point, change prior probability posterior probability null can estimated comparing density null value two distributions.1 ratio called Savage-Dickey ratio, added benefit also approximation Bayes factor comparing estimated model model parameter interest restricted point-null: “[…] Bayes factor \\(H_0\\) versus \\(H_1\\) obtained analytically integrating model parameter \\(\\theta\\). However, Bayes factor may likewise obtained considering \\(H_1\\), dividing height posterior \\(\\theta\\) height prior \\(\\theta\\), point interest.” (Wagenmakers, Lodewyckx, Kuriyal, & Grasman, 2010)","code":"My_second_BF <- bayesfactor_parameters(model, null = 0) My_second_BF > Bayes Factor (Savage-Dickey density ratio) >  > Parameter |   BF > ---------------- > group2    | 1.26 >  > * Evidence Against The Null: 0 plot(My_second_BF)"},{"path":"https://easystats.github.io/bayestestR/articles/bayes_factors.html","id":"directional-hypotheses","dir":"Articles","previous_headings":"Testing Models’ Parameters with Bayes Factors","what":"Directional hypotheses","title":"Bayes Factors","text":"can also compute Bayes factors directional hypotheses (“one sided”), prior hypotheses direction effect. can done setting order restriction prior distribution (results order restriction posterior distribution) alternative (Morey & Wagenmakers, 2014). example, prior hypothesis drug positive effect number sleep hours, alternative restricted region right null (point interval):  can see, given priori assumption direction effect (effect positive), presence effect 2.8 times likely absence effect, given observed data (data 2.8 time probable \\(H_1\\) \\(H_0\\)). indicates , given observed data, priori hypothesis, posterior mass shifted away null value, giving evidence null (note Bayes factor 2.8 still considered quite weak evidence). Thanks flexibility Bayesian framework, also possible compute Bayes factor dividing hypotheses - , null alternative complementary, opposing one-sided hypotheses (Morey & Wagenmakers, 2014). example, compared alternative \\(H_A\\): drug positive effects null \\(H_0\\): drug effect. can also compare instead alternative complementary hypothesis: \\(H_{-}\\): drug negative effects.  can see test produces even stronger (conclusive) evidence one-sided vs. point-null test! indeed, rule thumb, specific two hypotheses , distinct one another, power Bayes factor ! 2 Thanks transitivity Bayes factors, can also use bayesfactor_parameters() compare even types hypotheses, trickery. example: \\[ \\underbrace{BF_{0<b<1\\text{ vs. }b=0}}_{\\text{range vs. point}} =  \\underbrace{BF_{b<0\\text{ vs. }b=0}}_{\\text{directional vs. point}}  / \\underbrace{BF_{b<0\\text{ vs. }0<b<1}}_{\\text{directional vs. range}}  \\] NOTE: See Testing Contrasts appendix .","code":"test_group2_right <- bayesfactor_parameters(model, direction = \">\") test_group2_right > Bayes Factor (Savage-Dickey density ratio) >  > Parameter |   BF > ---------------- > group2    | 2.42 >  > * Evidence Against The Null: 0 > *                 Direction: Right-Sided test plot(test_group2_right) test_group2_dividing <- bayesfactor_parameters(model, null = c(-Inf, 0)) test_group2_dividing > Bayes Factor (Null-Interval) >  > Parameter |    BF > ----------------- > group2    | 20.75 >  > * Evidence Against The Null: [-Inf, 0.000] plot(test_group2_dividing)"},{"path":"https://easystats.github.io/bayestestR/articles/bayes_factors.html","id":"si","dir":"Articles","previous_headings":"Testing Models’ Parameters with Bayes Factors","what":"Support intervals","title":"Bayes Factors","text":"far ’ve seen Bayes factors quantify relative support competing hypotheses. However, can also ask: Upon observing data, credibility parameter’s values increased (decreased)? example, ’ve seen point null become somewhat less credible observing data, might also ask values gained credibility given observed data?. resulting range values called support interval indicates values supported data (Wagenmakers, Gronau, Dablander, & Etz, 2018). can comparing prior posterior distributions checking posterior densities higher prior densities. bayestestR, can achieved si() function: argument BF = 1 indicates want interval contain values gained support factor least 1 (, support ). Visually, can see credibility values within interval increased (likewise credibility values outside interval decreased):  can also see support interval (just barely) excludes point null (0) - whose credibility ’ve already seen decreased observed data. emphasizes relationship support interval Bayes factor: “interpretation intervals analogous frequentist confidence interval contains parameter values rejected tested level \\(\\alpha\\). instance, BF = 1/3 support interval encloses values theta updating factor stronger 3 .” (Wagenmakers et al., 2018) Thus, choice BF (level support interval indicate) depends want interval represent: \\(BF = 1\\) contains values whose credibility merely decreased observing data. \\(BF > 1\\) contains values received impressive support data. \\(BF < 1\\) contains values whose credibility impressively decreased observing data. Testing values outside interval produce Bayes factor larger \\(1/BF\\) support alternative.","code":"my_first_si <- si(   posterior = data.frame(group2 = posterior),   prior = data.frame(group2 = prior),   BF = 1 )  print(my_first_si) > Support Interval >  > Parameter |    BF = 1 SI > ------------------------ > group2    | [0.15, 3.04] plot(my_first_si)"},{"path":"https://easystats.github.io/bayestestR/articles/bayes_factors.html","id":"bayesfactor_models","dir":"Articles","previous_headings":"","what":"Comparing Models using Bayes Factors","title":"Bayes Factors","text":"Bayes factors can also used compare statistical models. statistical context, answer following question: model observed data probable? words, model likely produced observed data? usually done comparing marginal likelihoods two models. case, Bayes factor measure relative evidence one model . Let’s use Bayes factors model comparison find model best describes length iris’ sepal using iris data set.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/bayes_factors.html","id":"for-bayesian-models-brms-and-rstanarm","dir":"Articles","previous_headings":"Comparing Models using Bayes Factors","what":"For Bayesian models (brms and rstanarm)","title":"Bayes Factors","text":"Note: order compute Bayes factors Bayesian models, non-default arguments must added upon fitting: brmsfit models must fitted save_pars = save_pars(= TRUE) stanreg models must fitted defined diagnostic_file. Let’s first fit 5 Bayesian regressions brms predict Sepal.Length: can now compare models bayesfactor_models() function, using denominator argument specify model rest models compared (case, intercept-model): can see Species + Petal.Length model best model - \\(BF=2\\times 10^{53}\\) compared null (intercept ). Due transitive property Bayes factors, can easily change reference model full Species * Petal.Length model: can see, Species + Petal.Length model also favored compared Species * Petal.Length model, though several orders magnitude less - supported 23.38 times !) can also change reference model Species model: Notice , Bayesian framework compared models need nested models, happened compared Petal.Length-model Species-model (something done frequentist framework, compared models must nested one another). can also get matrix Bayes factors pairwise model comparisons: NOTE: order correctly precisely estimate Bayes Factors, always need 4 P’s: Proper Priors 3, Plentiful Posterior 4.","code":"library(brms)  # intercept only model m0 <- brm(Sepal.Length ~ 1,   data = iris,   prior =     set_prior(\"student_t(3, 6, 6)\", class = \"Intercept\") +       set_prior(\"student_t(3, 0, 6)\", class = \"sigma\"),   chains = 10, iter = 5000, warmup = 1000,   save_pars = save_pars(all = TRUE) )  # Petal.Length only m1 <- brm(Sepal.Length ~ Petal.Length,   data = iris,   prior =     set_prior(\"student_t(3, 6, 6)\", class = \"Intercept\") +       set_prior(\"student_t(3, 0, 6)\", class = \"sigma\") +       set_prior(\"normal(0, 1)\", coef = \"Petal.Length\"),   chains = 10, iter = 5000, warmup = 1000,   save_pars = save_pars(all = TRUE) )  # Species only m2 <- brm(Sepal.Length ~ Species,   data = iris,   prior =     set_prior(\"student_t(3, 6, 6)\", class = \"Intercept\") +       set_prior(\"student_t(3, 0, 6)\", class = \"sigma\") +       set_prior(\"normal(0, 3)\", coef = c(\"Speciesversicolor\", \"Speciesvirginica\")),   chains = 10, iter = 5000, warmup = 1000,   save_pars = save_pars(all = TRUE) )  # Species + Petal.Length model m3 <- brm(Sepal.Length ~ Species + Petal.Length,   data = iris,   prior =     set_prior(\"student_t(3, 6, 6)\", class = \"Intercept\") +       set_prior(\"student_t(3, 0, 6)\", class = \"sigma\") +       set_prior(\"normal(0, 1)\", coef = \"Petal.Length\") +       set_prior(\"normal(0, 3)\", coef = c(\"Speciesversicolor\", \"Speciesvirginica\")),   chains = 10, iter = 5000, warmup = 1000,   save_pars = save_pars(all = TRUE) )  # full interactive model m4 <- brm(Sepal.Length ~ Species * Petal.Length,   data = iris,   prior =     set_prior(\"student_t(3, 6, 6)\", class = \"Intercept\") +       set_prior(\"student_t(3, 0, 6)\", class = \"sigma\") +       set_prior(\"normal(0, 1)\", coef = \"Petal.Length\") +       set_prior(\"normal(0, 3)\", coef = c(\"Speciesversicolor\", \"Speciesvirginica\")) +       set_prior(\"normal(0, 2)\", coef = c(\"Speciesversicolor:Petal.Length\", \"Speciesvirginica:Petal.Length\")),   chains = 10, iter = 5000, warmup = 1000,   save_pars = save_pars(all = TRUE) ) library(bayestestR)  comparison <- bayesfactor_models(m1, m2, m3, m4, denominator = m0) comparison > Bayes Factors for Model Comparison >  >     Model                        BF > [1] Petal.Length           1.27e+44 > [2] Species                8.34e+27 > [3] Species + Petal.Length 2.29e+53 > [4] Species * Petal.Length 9.79e+51 >  > * Against Denominator: [5] (Intercept only) > *   Bayes Factor Type: marginal likelihoods (bridgesampling) update(comparison, reference = 4) > Bayes Factors for Model Comparison >  >     Model                        BF > [1] Petal.Length           1.30e-08 > [2] Species                8.52e-25 > [3] Species + Petal.Length    23.38 > [5] (Intercept only)       1.02e-52 >  > * Against Denominator: [4] Species * Petal.Length > *   Bayes Factor Type: marginal likelihoods (bridgesampling) update(comparison, reference = 2) > Bayes Factors for Model Comparison >  >     Model                        BF > [1] Petal.Length           1.53e+16 > [3] Species + Petal.Length 2.74e+25 > [4] Species * Petal.Length 1.17e+24 > [5] (Intercept only)       1.20e-28 >  > * Against Denominator: [2] Species > *   Bayes Factor Type: marginal likelihoods (bridgesampling) as.matrix(comparison) > # Bayes Factors for Model Comparison  >  >               Numerator > Denominator >  >                 |      [1] |      [2] |      [3] |      [4] |      [5] > --------------------------------------------------------------------------------- > [1] Petal.Length           |        1 | 6.54e-17 | 1.80e+09 | 7.68e+07 | 7.85e-45 > [2] Species                | 1.53e+16 |        1 | 2.74e+25 | 1.17e+24 | 1.20e-28 > [3] Species + Petal.Length | 5.57e-10 | 3.64e-26 |        1 |    0.043 | 4.37e-54 > [4] Species * Petal.Length | 1.30e-08 | 8.52e-25 |    23.38 |        1 | 1.02e-52 > [5] (Intercept only)       | 1.27e+44 | 8.34e+27 | 2.29e+53 | 9.79e+51 |        1"},{"path":"https://easystats.github.io/bayestestR/articles/bayes_factors.html","id":"for-frequentist-models-via-the-bic-approximation","dir":"Articles","previous_headings":"Comparing Models using Bayes Factors","what":"For Frequentist models via the BIC approximation","title":"Bayes Factors","text":"also possible compute Bayes factors comparison frequentist models. done comparing BIC measures, allowing Bayesian comparison nested well non-nested frequentist models (Wagenmakers, 2007). Let’s try linear mixed-effects models:","code":"library(lme4)  # define models with increasing complexity m0 <- lmer(Sepal.Length ~ (1 | Species), data = iris) m1 <- lmer(Sepal.Length ~ Petal.Length + (1 | Species), data = iris) m2 <- lmer(Sepal.Length ~ Petal.Length + (Petal.Length | Species), data = iris) m3 <- lmer(Sepal.Length ~ Petal.Length + Petal.Width + (Petal.Length | Species), data = iris) m4 <- lmer(Sepal.Length ~ Petal.Length * Petal.Width + (Petal.Length | Species), data = iris)  # model comparison bayesfactor_models(m1, m2, m3, m4, denominator = m0) > Bayes Factors for Model Comparison >  >      Model                                                       BF > [m1] Petal.Length + (1 | Species)                          3.82e+25 > [m2] Petal.Length + (Petal.Length | Species)               4.96e+24 > [m3] Petal.Length + Petal.Width + (Petal.Length | Species) 4.03e+23 > [m4] Petal.Length * Petal.Width + (Petal.Length | Species) 9.06e+22 >  > * Against Denominator: [m0] 1 + (1 | Species) > *   Bayes Factor Type: BIC approximation"},{"path":"https://easystats.github.io/bayestestR/articles/bayes_factors.html","id":"bayesfactor_restricted","dir":"Articles","previous_headings":"Comparing Models using Bayes Factors","what":"Order restricted models","title":"Bayes Factors","text":"stated discussing one-sided hypothesis tests, can create new models imposing order restrictions given model. example, consider following model, predict length iris’ sepal length petal, well species, priors: - \\(b_{petal} \\sim N(0,2)\\) - \\(b_{versicolors}\\ \\&\\  b_{virginica} \\sim N(0,1.2)\\) priors unrestricted - , values \\(-\\infty\\) \\(\\infty\\) parameters model non-zero credibility (matter small; true prior posterior distribution). Subsequently, priori ordering parameters relating iris species can ordering, priori setosa can larger sepals virginica, also possible virginica larger sepals setosa! make sense let priors cover possibilities? depends prior knowledge hypotheses. example, even novice botanist assume unlikely petal length negatively associated sepal length - iris longer petals likely larger, thus also longer sepal. expert botanist perhaps assume setosas smaller sepals versicolors virginica. priors can formulated restricted priors (Morey, 2015; Morey & Rouder, 2011): novice botanist: \\(b_{petal} > 0\\) expert botanist: \\(b_{versicolors} > 0\\ \\&\\ b_{virginica} > 0\\) testing restrictions prior posterior samples, can see probabilities restricted distributions change observing data. can achieved bayesfactor_restricted(), compute Bayes factor restricted model vs unrestricted model. Let’s first specify restrictions logical conditions: Let’s test hypotheses: can see novice botanist’s hypothesis gets Bayes factor ~2, indicating data provides twice much evidence model petal length restricted positively associated sepal length model restriction. expert botanist? seems failed miserably, BF favoring unrestricted model many many times . possible? seems controlling petal length, versicolor virginica actually shorter sepals!  Note Bayes factors compare restricted model unrestricted model. wanted compare restricted model null model, use transitive property Bayes factors like : \\[ BF_{\\text{restricted vs. NULL}} = \\frac {BF_{\\text{restricted vs. un-restricted}}} {BF_{\\text{un-restricted vs NULL}}} \\] restrictions prior distribution, appropriate testing pre-planned (priori) hypotheses, used post hoc comparisons (Morey, 2015). NOTE: See Specifying Correct Priors Factors 2 Levels appendix .","code":"iris_model <- stan_glm(Sepal.Length ~ Species + Petal.Length,   data = iris,   prior = normal(0, c(2, 1.2, 1.2), autoscale = FALSE),   chains = 10, iter = 5000, warmup = 1000 ) botanist_hypotheses <- c(   \"Petal.Length > 0\",   \"(Speciesversicolor > 0) & (Speciesvirginica > 0)\" ) model_prior <- unupdate(iris_model)  botanist_BFs <- bayesfactor_restricted(   posterior = iris_model,   prior = model_prior,   hypothesis = botanist_hypotheses )  print(botanist_BFs) > Bayes Factor (Order-Restriction) >  > Hypothesis                                       P(Prior) P(Posterior)       BF > Petal.Length > 0                                     0.50            1     2.02 > (Speciesversicolor > 0) & (Speciesvirginica > 0)     0.24            0 0.00e+00 >  > * Bayes factors for the restricted model vs. the un-restricted model."},{"path":"https://easystats.github.io/bayestestR/articles/bayes_factors.html","id":"bayesian-model-averaging","dir":"Articles","previous_headings":"","what":"Bayesian Model Averaging","title":"Bayes Factors","text":"previous section, discussed direct comparison two models determine effect supported data. However, many cases many models consider, perhaps straightforward models compare determine effect supported data. cases, can use Bayesian model averaging (BMA) determine support provided data parameter term across many models.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/bayes_factors.html","id":"bayesfactor_inclusion","dir":"Articles","previous_headings":"Bayesian Model Averaging","what":"Inclusion Bayes factors","title":"Bayes Factors","text":"Inclusion Bayes factors answer question: observed data probable models particular predictor, models without particular predictor? words, average, models predictor \\(X\\) likely produced observed data models without predictor \\(X\\)?5 Since model prior probability, possible sum prior probability models include predictor interest (prior inclusion probability), models include predictor (prior exclusion probability). data observed, model assigned posterior probability, can similarly consider sums posterior models’ probabilities obtain posterior inclusion probability posterior exclusion probability. , change prior inclusion odds posterior inclusion odds Inclusion Bayes factor [“\\(BF_{Inclusion}\\)”; Clyde, Ghosh, & Littman (2011)]. Lets use brms example : examine interaction term’s inclusion Bayes factor, can see across 5 models, model term average (1/0.171) 5.84 times less supported model without term. Note Species, factor represented model several parameters, gets single Bayes factor - inclusion Bayes factors given per predictor! can also compare matched models - averaging done across models (1) include interactions predictor interest; (2) interaction predictors, averaging done across models contain main effects interaction predictor comprised (see explanation might want ).","code":"bayesfactor_inclusion(comparison) > Inclusion Bayes Factors (Model Averaged) >  >                      P(prior) P(posterior) Inclusion BF > Petal.Length             0.60         1.00     1.91e+25 > Species                  0.60         1.00     1.25e+09 > Petal.Length:Species     0.20         0.04        0.171 >  > * Compared among: all models > *    Priors odds: uniform-equal bayesfactor_inclusion(comparison, match_models = TRUE) > Inclusion Bayes Factors (Model Averaged) >  >                      P(prior) P(posterior) Inclusion BF > Petal.Length             0.40         0.96     2.74e+25 > Species                  0.40         0.96     1.80e+09 > Petal.Length:Species     0.20         0.04        0.043 >  > * Compared among: matched models only > *    Priors odds: uniform-equal"},{"path":"https://easystats.github.io/bayestestR/articles/bayes_factors.html","id":"comparison-with-jasp","dir":"Articles","previous_headings":"Bayesian Model Averaging","what":"Comparison with JASP","title":"Bayes Factors","text":"bayesfactor_inclusion() meant provide Bayes Factors per predictor, similar JASP’s Effects option. Let’s compare two: Across models:  Across matched models:  Nuisance Effects: ’ll add dose null model JASP, R:","code":"library(BayesFactor) data(ToothGrowth) ToothGrowth$dose <- as.factor(ToothGrowth$dose)  BF_ToothGrowth <- anovaBF(len ~ dose * supp, ToothGrowth, progress = FALSE)  bayesfactor_inclusion(BF_ToothGrowth) > Inclusion Bayes Factors (Model Averaged) >  >           P(prior) P(posterior) Inclusion BF > supp          0.60         1.00       140.99 > dose          0.60         1.00     3.21e+14 > dose:supp     0.20         0.72        10.12 >  > * Compared among: all models > *    Priors odds: uniform-equal bayesfactor_inclusion(BF_ToothGrowth, match_models = TRUE) > Inclusion Bayes Factors (Model Averaged) >  >           P(prior) P(posterior) Inclusion BF > supp          0.40         0.28        59.19 > dose          0.40         0.28     1.36e+14 > dose:supp     0.20         0.72         2.57 >  > * Compared among: matched models only > *    Priors odds: uniform-equal BF_ToothGrowth_against_dose <- BF_ToothGrowth[3:4] / BF_ToothGrowth[2] # OR: # update(bayesfactor_models(BF_ToothGrowth), #        subset = c(4, 5), #        reference = 3) BF_ToothGrowth_against_dose > Bayes factor analysis > -------------- > [1] supp + dose             : 59  ±4.5% > [2] supp + dose + supp:dose : 152 ±1.5% >  > Against denominator: >   len ~ dose  > --- > Bayes factor type: BFlinearModel, JZS bayesfactor_inclusion(BF_ToothGrowth_against_dose) > Inclusion Bayes Factors (Model Averaged) >  >           P(prior) P(posterior) Inclusion BF > dose          1.00         1.00              > supp          0.67         1.00       105.74 > dose:supp     0.33         0.72         5.06 >  > * Compared among: all models > *    Priors odds: uniform-equal"},{"path":"https://easystats.github.io/bayestestR/articles/bayes_factors.html","id":"weighted_posteriors","dir":"Articles","previous_headings":"Bayesian Model Averaging","what":"Averaging posteriors","title":"Bayes Factors","text":"Similar can average evidence predictor across models, can also average posterior estimate across models. useful situations Bayes factors seem support null effect, yet HDI alternative excludes null value (also see si() described ). example, looking Motor Trend Car Road Tests (data(mtcars)), naturally predict miles/gallon (mpg) transition type () weight (wt), number carburetors (carb)? good predictor? can determine comparing following models: seems model without carb predictor \\(1/BF=1.2\\) times likely model carb predictor. might assume latter model, HDI include point-null value 0 effect, also indicate credibility null posterior. However, case: can ? estimating HDI effect carb full model, acting assumption model correct. However, ’ve just seen, models practically tied. case limit estimation effect just one model? (Bergh, Haaf, Ly, Rouder, & Wagenmakers, 2019). Using Bayesian Model Averaging, can combine posteriors samples several models, weighted models’ marginal likelihood (done via bayesfactor_models() function). parameter part models missing others, assumed fixed 0 (can also seen method applying shrinkage estimates). results posterior distribution across several models, can now treat like posterior distribution, estimate HDI. bayestestR, can weighted_posteriors() function:  can see across models consideration, posterior carb effect almost equally weighted alternative model null model - represented half posterior mass concentrated 0 - makes sense models almost equally supported data. can also see across models, now HDI contain 0. Thus resolved conflict Bayes factor HDI (Rouder, Haaf, & Vandekerckhove, 2018)! Note: Parameters might play different roles across different models. example, parameter plays different role model Y ~ + B (main effect) model Y ~ + B + :B (simple effect). many cases centering predictors (mean subtracting continuous variables, effects coding via contr.sum orthonormal coding via contr.orthonorm factors) can cases reduce issue.","code":"mod <- stan_glm(mpg ~ wt + am,   data = mtcars,   prior = normal(0, c(10, 10), autoscale = FALSE),   chains = 10, iter = 5000, warmup = 1000,   diagnostic_file = file.path(tempdir(), \"df1.csv\"),   refresh = 0 )  mod_carb <- stan_glm(mpg ~ wt + am + carb,   data = mtcars,   prior = normal(0, c(10, 10, 20), autoscale = FALSE),   chains = 10, iter = 5000, warmup = 1000,   diagnostic_file = file.path(tempdir(), \"df0.csv\"),   refresh = 0 )  BF_carb <- bayesfactor_models(mod_carb, denominator = mod, verbose = FALSE) BF_carb > Bayes Factors for Model Comparison >  >     Model             BF > [1] wt + am + carb 0.811 >  > * Against Denominator: [2] wt + am > *   Bayes Factor Type: marginal likelihoods (bridgesampling) hdi(mod_carb, ci = .95) > Highest Density Interval >  > Parameter   |        95% HDI > ---------------------------- > (Intercept) | [28.09, 40.15] > wt          | [-5.51, -1.74] > am          | [-1.01,  5.57] > carb        | [-2.02, -0.35] BMA_draws <- weighted_posteriors(mod, mod_carb)  BMA_hdi <- hdi(BMA_draws, ci = .95) BMA_hdi > Highest Density Interval >  > Parameter   |        95% HDI > ---------------------------- > (Intercept) | [29.18, 42.48] > wt          | [-6.64, -2.15] > am          | [-2.74,  5.03] > carb        | [-1.68,  0.00] plot(BMA_hdi)"},{"path":[]},{"path":"https://easystats.github.io/bayestestR/articles/bayes_factors.html","id":"testing-contrasts-with-emmeans-modelbased","dir":"Articles","previous_headings":"Appendices","what":"Testing contrasts (with emmeans / modelbased)","title":"Bayes Factors","text":"Besides testing parameter bayesfactor_parameters() can used test estimate based prior posterior distribution estimate. One way achieve mix bayesfactor_parameters() + emmeans test Bayesian contrasts. example, sleep example , can estimate group means difference : strong evidence mean group 1 0, group 2 0, hardly evidence difference 0. Conflict? Uncertainty? Bayesian way! can also use easystats’ modelbased package compute Bayes factors contrasts: NOTE: See Specifying Correct Priors Factors 2 Levels section .","code":"library(emmeans)  (group_diff <- emmeans(model, pairwise ~ group)) > $emmeans >  group emmean lower.HPD upper.HPD >  1       0.79     -0.48       2.0 >  2       2.28      1.00       3.5 >  > Point estimate displayed: median  > HPD interval probability: 0.95  >  > $contrasts >  contrast        estimate lower.HPD upper.HPD >  group1 - group2    -1.47      -3.2     0.223 >  > Point estimate displayed: median  > HPD interval probability: 0.95 # pass the original model via prior bayesfactor_parameters(group_diff, prior = model) > Bayes Factor (Savage-Dickey density ratio) >  > Parameter       |    BF > ----------------------- > 1               | 0.287 > 2               | 19.97 > group1 - group2 |  1.26 >  > * Evidence Against The Null: 0 library(modelbased)  estimate_contrasts(model, test = \"bf\", bf_prior = model)"},{"path":"https://easystats.github.io/bayestestR/articles/bayes_factors.html","id":"contr_bayes","dir":"Articles","previous_headings":"Appendices","what":"Specifying correct priors for factors","title":"Bayes Factors","text":"section introduces biased priors obtained using common effects factor coding (contr.sum) dummy factor coding (contr.treatment), solution using orthonormal factor coding (contr.orthonorm) (outlined Rouder, Morey, Speckman, & Province, 2012, sec. 7.2). Special care taken working factors 3 levels.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/bayes_factors.html","id":"contrasts-and-marginal-means","dir":"Articles","previous_headings":"Appendices > Specifying correct priors for factors","what":"Contrasts (and marginal means)","title":"Bayes Factors","text":"effects factor coding commonly used factorial analysis carries hidden bias applies Bayesian priors. example, want test pairwise differences 3 levels factor, expect priori differences distribution, … example, test prior pairwise differences 3 species iris dataset.  Notice , though prior estimate 3 pairwise contrasts ~0, scale HDI much narrower prior setosa - versicolor contrast! happened??? caused inherent bias priors introduced effects coding (’s even worse default treatment coding, prior intercept usually drastically different effect’s parameters). since affects priors, bias also bias Bayes factors / understating evidence contrasts others! solution use orthonormal factor coding, -la contr.orthonorm, can either specify factor coding per-factor: can set globally: Let’s estimate prior differences:  can see using coding scheme, equal priors pairwise contrasts. solutions problem priors. can read Solomon Kurz’s blog post.","code":"df <- iris contrasts(df$Species) <- contr.sum  fit_sum <- stan_glm(Sepal.Length ~ Species,   data = df,   prior = normal(0, c(1, 1), autoscale = FALSE),   prior_PD = TRUE, # sample priors   family = gaussian(),   chains = 10, iter = 5000, warmup = 1000,   refresh = 0 ) (pairs_sum <- pairs(emmeans(fit_sum, ~Species))) >  contrast               estimate lower.HPD upper.HPD >  setosa - versicolor      -0.017      -2.8       2.7 >  setosa - virginica       -0.027      -4.0       4.6 >  versicolor - virginica    0.001      -4.2       4.5 >  > Point estimate displayed: median  > HPD interval probability: 0.95 ggplot(stack(insight::get_parameters(pairs_sum)), aes(x = values, fill = ind)) +   geom_density(size = 1) +   facet_grid(ind ~ .) +   labs(x = \"prior difference values\") +   theme(legend.position = \"none\") contrasts(df$Species) <- contr.orthonorm options(contrasts = c(\"contr.orthonorm\", \"contr.poly\")) fit_bayes <- stan_glm(Sepal.Length ~ Species,   data = df,   prior = normal(0, c(1, 1), autoscale = FALSE),   prior_PD = TRUE, # sample priors   family = gaussian(),   chains = 10, iter = 5000, warmup = 1000,   refresh = 0 ) (pairs_bayes <- pairs(emmeans(fit_bayes, ~Species))) >  contrast               estimate lower.HPD upper.HPD >  setosa - versicolor       0.000     -2.98      2.67 >  setosa - virginica        0.032     -2.73      2.81 >  versicolor - virginica    0.003     -2.91      2.67 >  > Point estimate displayed: median  > HPD interval probability: 0.95 ggplot(stack(insight::get_parameters(pairs_bayes)), aes(x = values, fill = ind)) +   geom_density(size = 1) +   facet_grid(ind ~ .) +   labs(x = \"prior difference values\") +   theme(legend.position = \"none\")"},{"path":"https://easystats.github.io/bayestestR/articles/bayes_factors.html","id":"order-restrictions","dir":"Articles","previous_headings":"Appendices > Specifying correct priors for factors","what":"Order restrictions","title":"Bayes Factors","text":"bias also affect order restrictions involving 3 levels. example, want test order restriction among , B, C, priori probability obtaining order > C > B 1/6 (reach back intro stats year 1), … example, interested following order restrictions iris dataset (line separate restriction): default factor coding, looks like : happened??? comparison 2 levels prior ~0.5, expected. comparison 3 levels different priors, depending order restriction - .e. orders priori likely others!!! , solved using orthonormal factor coding ().","code":"hyp <- c(   # comparing 2 levels   \"setosa < versicolor\",   \"setosa < virginica\",   \"versicolor < virginica\",    # comparing 3 (or more) levels   \"setosa    < virginica  & virginica  < versicolor\",   \"virginica < setosa     & setosa     < versicolor\",   \"setosa    < versicolor & versicolor < virginica\" ) contrasts(df$Species) <- contr.sum fit_sum <- stan_glm(Sepal.Length ~ Species,   data = df,   prior = normal(0, c(1, 1), autoscale = FALSE),   family = gaussian(),   chains = 10, iter = 5000, warmup = 1000, )  em_sum <- emmeans(fit_sum, ~Species) # the posterior marginal means  bayesfactor_restricted(em_sum, fit_sum, hypothesis = hyp) >  > SAMPLING FOR MODEL 'continuous' NOW (CHAIN 1). > Chain 1:  > Chain 1: Gradient evaluation took 2.3e-05 seconds > Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.23 seconds. > Chain 1: Adjust your expectations accordingly! > Chain 1:  > Chain 1:  > Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup) > Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup) > Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup) > Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup) > Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup) > Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup) > Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling) > Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling) > Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling) > Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling) > Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling) > Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling) > Chain 1:  > Chain 1:  Elapsed Time: 0.029013 seconds (Warm-up) > Chain 1:                0.048707 seconds (Sampling) > Chain 1:                0.07772 seconds (Total) > Chain 1:  >  > SAMPLING FOR MODEL 'continuous' NOW (CHAIN 2). > Chain 2:  > Chain 2: Gradient evaluation took 1.7e-05 seconds > Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.17 seconds. > Chain 2: Adjust your expectations accordingly! > Chain 2:  > Chain 2:  > Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup) > Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup) > Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup) > Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup) > Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup) > Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup) > Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling) > Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling) > Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling) > Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling) > Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling) > Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling) > Chain 2:  > Chain 2:  Elapsed Time: 0.02987 seconds (Warm-up) > Chain 2:                0.044241 seconds (Sampling) > Chain 2:                0.074111 seconds (Total) > Chain 2:  >  > SAMPLING FOR MODEL 'continuous' NOW (CHAIN 3). > Chain 3:  > Chain 3: Gradient evaluation took 1.4e-05 seconds > Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 0.14 seconds. > Chain 3: Adjust your expectations accordingly! > Chain 3:  > Chain 3:  > Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup) > Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup) > Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup) > Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup) > Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup) > Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup) > Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling) > Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling) > Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling) > Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling) > Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling) > Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling) > Chain 3:  > Chain 3:  Elapsed Time: 0.029366 seconds (Warm-up) > Chain 3:                0.042576 seconds (Sampling) > Chain 3:                0.071942 seconds (Total) > Chain 3:  >  > SAMPLING FOR MODEL 'continuous' NOW (CHAIN 4). > Chain 4:  > Chain 4: Gradient evaluation took 1.3e-05 seconds > Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 0.13 seconds. > Chain 4: Adjust your expectations accordingly! > Chain 4:  > Chain 4:  > Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup) > Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup) > Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup) > Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup) > Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup) > Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup) > Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling) > Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling) > Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling) > Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling) > Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling) > Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling) > Chain 4:  > Chain 4:  Elapsed Time: 0.028253 seconds (Warm-up) > Chain 4:                0.044158 seconds (Sampling) > Chain 4:                0.072411 seconds (Total) > Chain 4: > Bayes Factor (Order-Restriction) >  > Hypothesis                                       P(Prior) P(Posterior)       BF > setosa < versicolor                                  0.51            1     1.97 > setosa < virginica                                   0.49            1     2.02 > versicolor < virginica                               0.49            1     2.03 > setosa    < virginica  & virginica  < versicolor     0.11            0 0.00e+00 > virginica < setosa     & setosa     < versicolor     0.20            0 0.00e+00 > setosa    < versicolor & versicolor < virginica      0.20            1     5.09 >  > * Bayes factors for the restricted model vs. the un-restricted model. contrasts(df$Species) <- contr.orthonorm fit_bayes <- stan_glm(Sepal.Length ~ Species,   data = df,   prior = normal(0, c(1, 1), autoscale = FALSE),   family = gaussian(),   chains = 10, iter = 5000, warmup = 1000 ) em_bayes <- emmeans(fit_sum, ~Species) # the posterior marginal means bayesfactor_restricted(em_bayes, fit_sum, hypothesis = hyp) > Bayes Factor (Order-Restriction) >  > Hypothesis                                       P(Prior) P(Posterior)       BF > setosa < versicolor                                  0.49            1     2.06 > setosa < virginica                                   0.49            1     2.03 > versicolor < virginica                               0.51            1     1.96 > setosa    < virginica  & virginica  < versicolor     0.17            0 0.00e+00 > virginica < setosa     & setosa     < versicolor     0.16            0 0.00e+00 > setosa    < versicolor & versicolor < virginica      0.16            1     6.11 >  > * Bayes factors for the restricted model vs. the un-restricted model."},{"path":"https://easystats.github.io/bayestestR/articles/bayes_factors.html","id":"conclusion","dir":"Articles","previous_headings":"Appendices > Specifying correct priors for factors","what":"Conclusion","title":"Bayes Factors","text":"comparing results two factor coding schemes, find: 1. cases, estimated (posterior) means quite similar (identical). 2. priors Bayes factors differ two schemes. 3. contr.orthonorm, prior distribution difference order 3 () means balanced.","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/articles/bayestestR.html","id":"why-use-the-bayesian-framework","dir":"Articles","previous_headings":"","what":"Why use the Bayesian Framework?","title":"Get Started with Bayesian Analysis","text":"Bayesian framework statistics quickly gaining popularity among scientists, associated general shift towards open honest science. Reasons prefer approach : reliability (Etz & Vandekerckhove, 2016) accuracy (noisy data small samples) (Kruschke, Aguinis, & Joo, 2012) possibility introducing prior knowledge analysis (Andrews & Baguley, 2013; Kruschke et al., 2012) critically, intuitive nature results straightforward interpretation (Kruschke, 2010; Wagenmakers et al., 2018) general, frequentist approach associated focus null hypothesis testing, misuse p-values shown critically contribute reproducibility crisis social psychological sciences (Chambers, Feredoes, Muthukumaraswamy, & Etchells, 2014; Szucs & Ioannidis, 2016). emerging consensus generalization Bayesian approach one way overcoming issues (Benjamin et al., 2018; Etz & Vandekerckhove, 2016). agree Bayesian framework right way go, might wonder exactly framework. ’s fuss ?","code":""},{"path":"https://easystats.github.io/bayestestR/articles/bayestestR.html","id":"what-is-the-bayesian-framework","dir":"Articles","previous_headings":"","what":"What is the Bayesian Framework?","title":"Get Started with Bayesian Analysis","text":"Adopting Bayesian framework shift paradigm change methodology. Indeed, common statistical procedures (t-tests, correlations, ANOVAs, regressions, etc.) can achieved using Bayesian framework. key difference frequentist framework (“classical” approach statistics, p t values, well weird degrees freedom), effects fixed (unknown) data random. words, assumes unknown parameter unique value trying estimate/guess using sample data. hand, Bayesian framework, instead estimating “true effect”, probability different effects given observed data computed, resulting distribution possible values parameters, called posterior distribution. uncertainty Bayesian inference can summarized, instance, median distribution, well range values posterior distribution includes 95% probable values (95% credible interval). Cum grano salis, considered counterparts point-estimate confidence interval frequentist framework. illustrate difference interpretation, Bayesian framework allows say “given observed data, effect 95% probability falling within range”, frequentist (less intuitive) alternative “repeatedly computing confidence intervals data sort, 95% probability effect falls within given range”. essence, Bayesian sampling algorithms (MCMC sampling) return probability distribution (posterior) effect compatible observed data. Thus, effect can described characterizing posterior distribution relation centrality (point-estimates), uncertainty, well existence significance words, putting maths behind aside moment, can say : frequentist approach tries estimate real effect. instance, “real” value correlation x y. Hence, frequentist models return point-estimate (.e., single value distribution) “real” correlation (e.g., \\(r = 0.42\\)) estimated number obscure assumptions (minimum, considering data sampled random “parent”, usually normal distribution). Bayesian framework assumes thing. data . Based observed data (prior belief result), Bayesian sampling algorithm (MCMC sampling one example) returns probability distribution (called posterior) effect compatible observed data. correlation x y, return distribution says, example, “probable effect 0.42, data also compatible correlations 0.12 0.74 certain probabilities”. characterize statistical significance effects, need p-values, indices. simply describe posterior distribution effect. example, can report median, 89% Credible Interval indices. Accurate depiction regular Bayesian user estimating credible interval. Note: Altough purpose package advocate use Bayesian statistics, please note serious arguments supporting frequentist indices (see instance thread). always, world black white (p < .001). … work?","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/articles/bayestestR.html","id":"bayestestr-installation","dir":"Articles","previous_headings":"A simple example","what":"bayestestR installation","title":"Get Started with Bayesian Analysis","text":"can install bayestestR along whole easystats suite running following: Let’s also install load rstanarm, allows fitting Bayesian models, well bayestestR, describe .","code":"install.packages(\"remotes\") remotes::install_github(\"easystats/easystats\") install.packages(\"rstanarm\") library(rstanarm)"},{"path":"https://easystats.github.io/bayestestR/articles/bayestestR.html","id":"traditional-linear-regression","dir":"Articles","previous_headings":"A simple example","what":"Traditional linear regression","title":"Get Started with Bayesian Analysis","text":"Let’s start fitting simple frequentist linear regression (lm() function stands linear model) two numeric variables, Sepal.Length Petal.Length famous iris dataset, included default R. analysis suggests statistically significant (whatever means) positive (coefficient 0.41) linear relationship two variables. Fitting interpreting frequentist models easy obvious people use instead Bayesian framework… right? anymore.","code":"model <- lm(Sepal.Length ~ Petal.Length, data = iris) summary(model) Call: lm(formula = Sepal.Length ~ Petal.Length, data = iris)  Residuals:     Min      1Q  Median      3Q     Max  -1.2468 -0.2966 -0.0152  0.2768  1.0027   Coefficients:              Estimate Std. Error t value Pr(>|t|)     (Intercept)    4.3066     0.0784    54.9   <2e-16 *** Petal.Length   0.4089     0.0189    21.6   <2e-16 *** --- Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  Residual standard error: 0.41 on 148 degrees of freedom Multiple R-squared:  0.76,  Adjusted R-squared:  0.758  F-statistic:  469 on 1 and 148 DF,  p-value: <2e-16"},{"path":"https://easystats.github.io/bayestestR/articles/bayestestR.html","id":"bayesian-linear-regression","dir":"Articles","previous_headings":"A simple example","what":"Bayesian linear regression","title":"Get Started with Bayesian Analysis","text":"Summary Posterior Distribution ’s ! just fitted Bayesian version model simply using stan_glm() function instead lm() described posterior distributions parameters! conclusion draw, example, similar. effect (median effect’s posterior distribution) 0.41, can also considered significant Bayesian sense (later). , ready learn ? Check next tutorial! , want even , can check articles describing functionality package offer! https://easystats.github.io/bayestestR/articles/","code":"model <- stan_glm(Sepal.Length ~ Petal.Length, data = iris) posteriors <- describe_posterior(model) # for a nicer table print_md(posteriors, digits = 2)"},{"path":[]},{"path":"https://easystats.github.io/bayestestR/articles/credible_interval.html","id":"what-is-a-credible-interval","dir":"Articles","previous_headings":"","what":"What is a Credible Interval?","title":"Credible Intervals (CI)","text":"Credible intervals important concept Bayesian statistics. core purpose describe summarise uncertainty related unknown parameters trying estimate. regard, appear quite similar frequentist Confidence Intervals. However, goal similar, statistical definition meaning different. Indeed, latter obtained complex algorithm full rarely-tested assumptions approximations, credible intervals fairly straightforward compute. Bayesian inference returns distribution possible effect values (posterior), credible interval just range containing particular percentage probable values. instance, 95% credible interval simply central portion posterior distribution contains 95% values. Note drastically improve interpretability Bayesian interval compared frequentist one. Indeed, Bayesian framework allows us say “given observed data, effect 95% probability falling within range”, compared less straightforward, frequentist alternative (95% Confidence* Interval) “95% probability computing confidence interval data sort, effect falls within range”.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/credible_interval.html","id":"vs--95-ci","dir":"Articles","previous_headings":"","what":"89% vs. 95% CI","title":"Credible Intervals (CI)","text":"Using 89% another popular choice, used default long time (read story change). start? Naturally, came choosing CI level report default, people started using 95%, arbitrary convention used frequentist world. However, authors suggested 95% might appropriate Bayesian posterior distributions, potentially lacking stability enough posterior samples drawn (Kruschke, 2014). proposition use 90% instead 95%. However, recently, McElreath (2014, 2018) suggested use arbitrary thresholds first place, use 89%? Moreover, 89 highest prime number exceed already unstable 95% threshold. anything? Nothing, reminds us total arbitrariness conventions (McElreath, 2018). Thus, CIs computed 89% intervals (ci = 0.89), deemed stable , instance, 95% intervals (Kruschke, 2014). effective sample size (ESS; see ) least 10.000 recommended one wants compute precise 95% intervals (Kruschke, 2014, p. 183ff). Unfortunately, default number posterior samples Bayes packages (e.g., rstanarm brms) 4.000 (thus, might want increase fitting model). However, 95% advantages . instance, shares (case normal posterior distribution) intuitive relationship standard deviation conveys accurate image (artificial) bounds distribution. Also, wider, makes analyses conservative (.e., probability covering 0 larger 95% CI lower ranges 89%), good thing context reproducibility crisis. add mess, software use different default, instance 90%. Ultimately, user make informed decision, based needs goals, justify choice.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/credible_interval.html","id":"different-types-of-cis","dir":"Articles","previous_headings":"","what":"Different types of CIs","title":"Credible Intervals (CI)","text":"reader might notice bayestestR provides two methods compute credible intervals, Highest Density Interval (HDI) (hdi()) Equal-tailed Interval (ETI) (eti()). methods can also changed via method argument ci() function. difference? Let’s see:  exactly … also case types distributions?  difference strong one. Contrary HDI, points within interval higher probability density points outside interval, ETI equal-tailed. means 90% interval 5% distribution either side limits. indicates 5th percentile 95th percentile. symmetric distributions, two methods computing credible intervals, ETI HDI, return similar results. case skewed distributions. Indeed, possible parameter values ETI lower credibility (less probable) parameter values outside ETI. property seems undesirable summary credible values distribution. hand, ETI range change transformations applied distribution (instance, log-odds probabilities transformation): lower higher bounds transformed distribution correspond transformed lower higher bounds original distribution. contrary, applying transformations distribution change resulting HDI. Thus, instance, exponentiated credible intervals required, calculating ETI recommended.","code":"library(bayestestR) library(ggplot2)  # Generate a normal distribution posterior <- distribution_normal(1000)  # Compute HDI and ETI ci_hdi <- ci(posterior, method = \"HDI\") ci_eti <- ci(posterior, method = \"ETI\")  # Plot the distribution and add the limits of the two CIs out <- estimate_density(posterior, extend = TRUE) ggplot(out, aes(x = x, y = y)) +   geom_area(fill = \"orange\") +   theme_classic() +   # HDI in blue   geom_vline(xintercept = ci_hdi$CI_low, color = \"royalblue\", size = 3) +   geom_vline(xintercept = ci_hdi$CI_high, color = \"royalblue\", size = 3) +   # Quantile in red   geom_vline(xintercept = ci_eti$CI_low, color = \"red\", size = 1) +   geom_vline(xintercept = ci_eti$CI_high, color = \"red\", size = 1) # Generate a beta distribution posterior <- distribution_beta(1000, 6, 2)  # Compute HDI and Quantile CI ci_hdi <- ci(posterior, method = \"HDI\") ci_eti <- ci(posterior, method = \"ETI\")  # Plot the distribution and add the limits of the two CIs out <- estimate_density(posterior, extend = TRUE) ggplot(out, aes(x = x, y = y)) +   geom_area(fill = \"orange\") +   theme_classic() +   # HDI in blue   geom_vline(xintercept = ci_hdi$CI_low, color = \"royalblue\", size = 3) +   geom_vline(xintercept = ci_hdi$CI_high, color = \"royalblue\", size = 3) +   # ETI in red   geom_vline(xintercept = ci_eti$CI_low, color = \"red\", size = 1) +   geom_vline(xintercept = ci_eti$CI_high, color = \"red\", size = 1)"},{"path":"https://easystats.github.io/bayestestR/articles/credible_interval.html","id":"the-support-interval","dir":"Articles","previous_headings":"","what":"The Support Interval","title":"Credible Intervals (CI)","text":"Unlike HDI ETI, look posterior distribution, Support Interval (SI) provides information regarding change credibility values prior posterior - words, indicates values parameter gained support observed data factor greater equal k (Wagenmakers, Gronau, Dablander, & Etz, 2018).  blue lines values received support data (\\(BF = 1~SI\\)), red lines values received least moderate support (\\(BF = 3~SI\\)) data. perspective Savage-Dickey Bayes factor, testing point null hypothesis value within Support Interval yield Bayes factor smaller 1/BF.","code":"prior <- distribution_normal(40000, mean = 0, sd = 1) posterior <- distribution_normal(40000, mean = .5, sd = .3)  si_1 <- si(posterior, prior, BF = 1) si_3 <- si(posterior, prior, BF = 3)  ggplot(mapping = aes(x = x, y = y)) +   theme_classic() +   # The posterior   geom_area(     fill = \"orange\",     data = estimate_density(posterior, extend = TRUE)   ) +   # The prior   geom_area(     color = \"black\", fill = NA, size = 1, linetype = \"dashed\",     data = estimate_density(prior, extend = TRUE)   ) +   # BF = 1 SI in blue   geom_vline(xintercept = si_1$CI_low, color = \"royalblue\", size = 1) +   geom_vline(xintercept = si_1$CI_high, color = \"royalblue\", size = 1) +   # BF = 3 SI in red   geom_vline(xintercept = si_3$CI_low, color = \"red\", size = 1) +   geom_vline(xintercept = si_3$CI_high, color = \"red\", size = 1)"},{"path":[]},{"path":"https://easystats.github.io/bayestestR/articles/example1.html","id":"loading-the-packages","dir":"Articles","previous_headings":"","what":"Loading the packages","title":"1. Initiation to Bayesian models","text":"’ve installed necessary packages, can load rstanarm (fit models), bayestestR (compute useful indices), insight (access parameters).","code":"library(rstanarm) library(bayestestR) library(insight)"},{"path":"https://easystats.github.io/bayestestR/articles/example1.html","id":"simple-linear-regression-model","dir":"Articles","previous_headings":"","what":"Simple linear (regression) model","title":"1. Initiation to Bayesian models","text":"begin conducting simple linear regression test relationship Petal.Length (predictor, independent, variable) Sepal.Length (response, dependent, variable) iris dataset included default R.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/example1.html","id":"fitting-the-model","dir":"Articles","previous_headings":"Simple linear (regression) model","what":"Fitting the model","title":"1. Initiation to Bayesian models","text":"Let’s start fitting frequentist version model, just reference point: can also zoom parameters interest us: model, linear relationship Petal.Length Sepal.Length positive significant (\\(\\beta = 0.41, t(148) = 21.6, p < .001\\)). means one-unit increase Petal.Length (predictor), can expect Sepal.Length (response) increase 0.41. effect can visualized plotting predictor values x axis response values y using ggplot2 package:  Now let’s fit Bayesian version model using stan_glm function rstanarm package: can see sampling algorithm run.","code":"model <- lm(Sepal.Length ~ Petal.Length, data = iris) summary(model) >  > Call: > lm(formula = Sepal.Length ~ Petal.Length, data = iris) >  > Residuals: >     Min      1Q  Median      3Q     Max  > -1.2468 -0.2966 -0.0152  0.2768  1.0027  >  > Coefficients: >              Estimate Std. Error t value Pr(>|t|)     > (Intercept)    4.3066     0.0784    54.9   <2e-16 *** > Petal.Length   0.4089     0.0189    21.6   <2e-16 *** > --- > Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 >  > Residual standard error: 0.41 on 148 degrees of freedom > Multiple R-squared:  0.76,    Adjusted R-squared:  0.758  > F-statistic:  469 on 1 and 148 DF,  p-value: <2e-16 get_parameters(model) >      Parameter Estimate > 1  (Intercept)     4.31 > 2 Petal.Length     0.41 library(ggplot2) # Load the package  # The ggplot function takes the data as argument, and then the variables # related to aesthetic features such as the x and y axes. ggplot(iris, aes(x = Petal.Length, y = Sepal.Length)) +   geom_point() + # This adds the points   geom_smooth(method = \"lm\") # This adds a regression line model <- stan_glm(Sepal.Length ~ Petal.Length, data = iris)"},{"path":"https://easystats.github.io/bayestestR/articles/example1.html","id":"extracting-the-posterior","dir":"Articles","previous_headings":"Simple linear (regression) model","what":"Extracting the posterior","title":"1. Initiation to Bayesian models","text":"done, let us extract parameters (.e., coefficients) model. can see, parameters take form lengthy dataframe two columns, corresponding intercept effect Petal.Length. columns contain posterior distributions two parameters. simple terms, posterior distribution set different plausible values parameter. Contrast result saw frequentist linear regression mode using lm, results single values effect model, distribution values. one important differences two frameworks.","code":"posteriors <- get_parameters(model)  head(posteriors) # Show the first 6 rows >   (Intercept) Petal.Length > 1         4.4         0.39 > 2         4.4         0.40 > 3         4.3         0.41 > 4         4.3         0.40 > 5         4.3         0.40 > 6         4.3         0.41"},{"path":"https://easystats.github.io/bayestestR/articles/example1.html","id":"about-posterior-draws","dir":"Articles","previous_headings":"Simple linear (regression) model > Extracting the posterior","what":"About posterior draws","title":"1. Initiation to Bayesian models","text":"Let’s look length posteriors. size 4000, less? First , observations (rows) usually referred posterior draws. underlying idea Bayesian sampling algorithm (e.g., Monte Carlo Markov Chains - MCMC) draw hidden true posterior distribution. Thus, posterior draws can estimate underlying true posterior distribution. Therefore, draws , better estimation posterior distribution. However, increased draws also means longer computation time. look documentation (?sampling) rstanarm’s \"sampling\" algorithm used default model , can see several parameters influence number posterior draws. default, 4 chains (can see distinct sampling runs), create 2000 iter (draws). However, half iterations kept, half used warm-(convergence algorithm). Thus, total posterior draws equals 4 chains * (2000 iterations - 1000 warm-) = 4000. can change , instance: case, expected, 2 chains * (1000 iterations - 250 warm-) = 1500 posterior draws. let’s keep first model default setup (draws).","code":"nrow(posteriors) # Size (number of rows) > [1] 4000 model <- stan_glm(Sepal.Length ~ Petal.Length, data = iris, chains = 2, iter = 1000, warmup = 250)  nrow(get_parameters(model)) # Size (number of rows) [1] 1500"},{"path":"https://easystats.github.io/bayestestR/articles/example1.html","id":"visualizing-the-posterior-distribution","dir":"Articles","previous_headings":"Simple linear (regression) model > Extracting the posterior","what":"Visualizing the posterior distribution","title":"1. Initiation to Bayesian models","text":"Now ’ve understood values come , let’s look . start visualizing posterior distribution parameter interest, effect Petal.Length.  distribution represents probability (y axis) different effects (x axis). central values probable extreme values. can see, distribution ranges 0.35 0.50, bulk around 0.41. Congrats! ’ve just described first posterior distribution. heart Bayesian analysis. don’t need p-values, t-values, degrees freedom. Everything need contained within posterior distribution. description consistent values obtained frequentist regression (resulted \\(\\beta\\) 0.41). reassuring! Indeed, cases, Bayesian analysis drastically differ frequentist results interpretation. Rather, makes results interpretable intuitive, easier understand describe. can now go ahead precisely characterize posterior distribution.","code":"ggplot(posteriors, aes(x = Petal.Length)) +   geom_density(fill = \"orange\")"},{"path":"https://easystats.github.io/bayestestR/articles/example1.html","id":"describing-the-posterior","dir":"Articles","previous_headings":"Simple linear (regression) model","what":"Describing the Posterior","title":"1. Initiation to Bayesian models","text":"Unfortunately, often practical report whole posterior distributions graphs. need find concise way summarize . recommend describe posterior distribution 3 elements: point-estimate one-value summary (similar \\(beta\\) frequentist regressions). credible interval representing associated uncertainty. indices significance, giving information relative importance effect.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/example1.html","id":"point-estimate","dir":"Articles","previous_headings":"Simple linear (regression) model > Describing the Posterior","what":"Point-estimate","title":"1. Initiation to Bayesian models","text":"single value can best represent posterior distribution? Centrality indices, mean, median, mode usually used point-estimates. ’s difference ? Let’s answer first inspecting mean: close frequentist \\(\\beta\\). , know, mean quite sensitive outliers extremes values. Maybe median robust? Well, close mean (identical rounding values). Maybe take mode, , peak posterior distribution? Bayesian framework, value called Maximum Posteriori (MAP). Let’s see: close! Let’s visualize values posterior distribution:  Well, values give similar results. Thus, choose median, value direct meaning probabilistic perspective: 50% chance true effect higher 50% chance effect lower (divides distribution two equal parts).","code":"mean(posteriors$Petal.Length) > [1] 0.41 median(posteriors$Petal.Length) > [1] 0.41 map_estimate(posteriors$Petal.Length) > MAP Estimate: 0.41 ggplot(posteriors, aes(x = Petal.Length)) +   geom_density(fill = \"orange\") +   # The mean in blue   geom_vline(xintercept = mean(posteriors$Petal.Length), color = \"blue\", size = 1) +   # The median in red   geom_vline(xintercept = median(posteriors$Petal.Length), color = \"red\", size = 1) +   # The MAP in purple   geom_vline(xintercept = map_estimate(posteriors$Petal.Length), color = \"purple\", size = 1)"},{"path":"https://easystats.github.io/bayestestR/articles/example1.html","id":"uncertainty","dir":"Articles","previous_headings":"Simple linear (regression) model > Describing the Posterior","what":"Uncertainty","title":"1. Initiation to Bayesian models","text":"Now point-estimate, describe uncertainty. compute range: make sense include extreme values? Probably . Thus, compute credible interval. Long story short, ’s kind similar frequentist confidence interval, easier interpret easier compute — makes sense. compute credible interval based Highest Density Interval (HDI). give us range containing 89% probable effect values. Note use 89% CIs instead 95% CIs (frequentist framework), 89% level gives stable results (Kruschke, 2014) reminds us arbitrariness conventions (McElreath, 2018). Nice, can conclude effect 89% chance falling within [0.38, 0.44] range. just computed two important pieces information describing effects.","code":"range(posteriors$Petal.Length) > [1] 0.33 0.48 hdi(posteriors$Petal.Length, ci = 0.89) > 89% HDI: [0.38, 0.44]"},{"path":"https://easystats.github.io/bayestestR/articles/example1.html","id":"effect-significance","dir":"Articles","previous_headings":"Simple linear (regression) model > Describing the Posterior","what":"Effect significance","title":"1. Initiation to Bayesian models","text":"However, many scientific fields sufficient simply describe effects. Scientists also want know effect significance practical statistical terms, words, whether effect important. instance, effect different 0? assess significance effect. can ? Well, particular case, eloquent: possible effect values (.e., whole posterior distribution) positive 0.35, already substantial evidence effect zero. still, want objective decision criterion, say yes effect ‘significant’. One approach, similar frequentist framework, see Credible Interval contains 0. case, mean effect ‘significant’. index fine-grained, ? Can better? Yes!","code":""},{"path":"https://easystats.github.io/bayestestR/articles/example1.html","id":"a-linear-model-with-a-categorical-predictor","dir":"Articles","previous_headings":"","what":"A linear model with a categorical predictor","title":"1. Initiation to Bayesian models","text":"Imagine moment interested weight chickens varies depending two different feed types. example, start selecting chickwts dataset (available base R) two feed types interest us (peculiar interests): meat meals sunflowers.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/example1.html","id":"data-preparation-and-model-fitting","dir":"Articles","previous_headings":"A linear model with a categorical predictor","what":"Data preparation and model fitting","title":"1. Initiation to Bayesian models","text":"Let’s run another Bayesian regression predict weight two types feed type.","code":"library(datawizard)  # We keep only rows for which feed is meatmeal or sunflower data <- data_filter(chickwts, feed %in% c(\"meatmeal\", \"sunflower\")) model <- stan_glm(weight ~ feed, data = data)"},{"path":"https://easystats.github.io/bayestestR/articles/example1.html","id":"posterior-description","dir":"Articles","previous_headings":"A linear model with a categorical predictor","what":"Posterior description","title":"1. Initiation to Bayesian models","text":"represents posterior distribution difference meatmeal sunflowers. seems difference positive (since values concentrated right side 0). Eating sunflowers makes fat (least, ’re chicken). , much? Let us compute median CI: makes fat around 51 grams (median). However, uncertainty quite high: 89% chance difference two feed types 14 91. effect different 0?","code":"posteriors <- get_parameters(model)  ggplot(posteriors, aes(x = feedsunflower)) +   geom_density(fill = \"red\") median(posteriors$feedsunflower) > [1] 52 hdi(posteriors$feedsunflower) > 95% HDI: [1.55, 99.59]"},{"path":"https://easystats.github.io/bayestestR/articles/example1.html","id":"rope-percentage","dir":"Articles","previous_headings":"A linear model with a categorical predictor","what":"ROPE Percentage","title":"1. Initiation to Bayesian models","text":"Testing whether distribution different 0 doesn’t make sense, 0 single value (probability distribution different single value infinite). However, one way assess significance define area around 0, consider practically equivalent zero (.e., absence , negligible, effect). called Region Practical Equivalence (ROPE), one way testing significance parameters. can define region? Driing driiiing – easystats team speaking. can help? – Prof. Sanders. expert chicks… mean chickens. Just calling let know based expert knowledge, effect -20 20 negligible. Bye. Well, ’s convenient. Now know can define ROPE [-20, 20] range. effects within range considered null (negligible). can now compute proportion 89% probable values (89% CI) null, .e., outside range. 5% 89% CI can considered null. lot? Based guidelines, yes, much. Based particular definition ROPE, conclude effect significant (probability negligible high). said, honest, doubts Prof. Sanders. don’t really trust definition ROPE. objective way defining ? Prof. Sanders giving default values define Region Practical Equivalence (ROPE). Yes! One practice instance use tenth (1/10 = 0.1) standard deviation (SD) response variable, can considered “negligible” effect size (Cohen, 1988). Let’s redefine ROPE region within [-6.2, 6.2] range. Note can directly obtained rope_range function :) Let’s recompute percentage ROPE: reasonable definition ROPE, observe 89% posterior distribution effect overlap ROPE. Thus, can conclude effect significant (sense important enough noted).","code":"rope(posteriors$feedsunflower, range = c(-20, 20), ci = 0.89) > # Proportion of samples inside the ROPE [-20.00, 20.00]: >  > inside ROPE > ----------- > 4.57 % rope_value <- 0.1 * sd(data$weight) rope_range <- c(-rope_value, rope_value) rope_range > [1] -6.2  6.2 rope_value <- rope_range(model) rope_value > [1] -6.2  6.2 rope(posteriors$feedsunflower, range = rope_range, ci = 0.89) > # Proportion of samples inside the ROPE [-6.17, 6.17]: >  > inside ROPE > ----------- > 0.00 %"},{"path":"https://easystats.github.io/bayestestR/articles/example1.html","id":"probability-of-direction-pd","dir":"Articles","previous_headings":"A linear model with a categorical predictor","what":"Probability of Direction (pd)","title":"1. Initiation to Bayesian models","text":"Maybe interested whether effect non-negligible. Maybe just want know effect positive negative. case, can simply compute proportion posterior positive, matter “size” effect. can conclude effect positive probability 98%. call index Probability Direction (pd). can, fact, computed easily following: Interestingly, happens index usually highly correlated frequentist p-value. almost roughly infer corresponding p-value simple transformation: ran model frequentist framework, approximately observe effect p-value 0.04. true?","code":"# select only positive values n_positive <- nrow(data_filter(posteriors, feedsunflower > 0))  n_positive / nrow(posteriors) * 100 > [1] 98 p_direction(posteriors$feedsunflower) > Probability of Direction: 0.98 pd <- 97.82 onesided_p <- 1 - pd / 100 twosided_p <- onesided_p * 2 twosided_p > [1] 0.044"},{"path":"https://easystats.github.io/bayestestR/articles/example1.html","id":"comparison-to-frequentist","dir":"Articles","previous_headings":"A linear model with a categorical predictor > Probability of Direction (pd)","what":"Comparison to frequentist","title":"1. Initiation to Bayesian models","text":"frequentist model tells us difference positive significant (\\(\\beta = 52, p = 0.04\\)). Although arrived similar conclusion, Bayesian framework allowed us develop profound intuitive understanding effect, uncertainty estimation.","code":"summary(lm(weight ~ feed, data = data)) >  > Call: > lm(formula = weight ~ feed, data = data) >  > Residuals: >     Min      1Q  Median      3Q     Max  > -123.91  -25.91   -6.92   32.09  103.09  >  > Coefficients: >               Estimate Std. Error t value Pr(>|t|)     > (Intercept)      276.9       17.2   16.10  2.7e-13 *** > feedsunflower     52.0       23.8    2.18     0.04 *   > --- > Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 >  > Residual standard error: 57 on 21 degrees of freedom > Multiple R-squared:  0.185,   Adjusted R-squared:  0.146  > F-statistic: 4.77 on 1 and 21 DF,  p-value: 0.0405"},{"path":"https://easystats.github.io/bayestestR/articles/example1.html","id":"all-with-one-function","dir":"Articles","previous_headings":"","what":"All with one function","title":"1. Initiation to Bayesian models","text":"yet, agree, bit tedious extract compute indices. told can , , one function? Behold, describe_posterior! function computes adored mentioned indices, can run directly model: Tada! ! median, CI, pd ROPE percentage! Understanding describing posterior distributions just one aspect Bayesian modelling. ready ?! Click see next example.","code":"describe_posterior(model, test = c(\"p_direction\", \"rope\", \"bayesfactor\")) > Summary of Posterior Distribution >  > Parameter     | Median |           95% CI |     pd |          ROPE | % in ROPE |  Rhat |      ESS |       BF > ------------------------------------------------------------------------------------------------------------ > (Intercept)   | 276.84 | [241.50, 312.32] |   100% | [-0.10, 0.10] |        0% | 1.000 | 35566.00 | 2.27e+14 > feedsunflower |  52.03 | [  2.38, 100.48] | 97.99% | [-0.10, 0.10] |        0% | 1.000 | 34922.00 |    0.758"},{"path":[]},{"path":[]},{"path":"https://easystats.github.io/bayestestR/articles/example2.html","id":"frequentist-version","dir":"Articles","previous_headings":"Correlations","what":"Frequentist version","title":"2. Confirmation of Bayesian skills","text":", let us begin frequentist correlation two continuous variables, width length sepals flowers. data available R iris dataset (used previous tutorial). compute Pearson’s correlation test, store results object called result, display : can see output, test actually compared two hypotheses: - null hypothesis (h0; correlation), - alternative hypothesis (h1; non-null correlation). Based p-value, null hypothesis rejected: correlation two variables negative non-significant (\\(r = -.12, p > .05\\)).","code":"result <- cor.test(iris$Sepal.Width, iris$Sepal.Length) result >  >   Pearson's product-moment correlation >  > data:  iris$Sepal.Width and iris$Sepal.Length > t = -1, df = 148, p-value = 0.2 > alternative hypothesis: true correlation is not equal to 0 > 95 percent confidence interval: >  -0.273  0.044 > sample estimates: >   cor  > -0.12"},{"path":"https://easystats.github.io/bayestestR/articles/example2.html","id":"bayesian-correlation","dir":"Articles","previous_headings":"Correlations","what":"Bayesian correlation","title":"2. Confirmation of Bayesian skills","text":"compute Bayesian correlation test, need BayesFactor package (can install running install.packages(\"BayesFactor\")). can load package, compute correlation using correlationBF() function, store result. Now, let us run describe_posterior() function : see many things , important indices now median posterior distribution, -.11. () quite close frequentist correlation. , previously, describe credible interval, pd ROPE percentage, focus another index provided Bayesian framework, Bayes Factor (BF).","code":"library(BayesFactor) result <- correlationBF(iris$Sepal.Width, iris$Sepal.Length) describe_posterior(result) > Summary of Posterior Distribution >  > Parameter | Median |        95% CI |     pd |          ROPE | % in ROPE |    BF |         Prior > ----------------------------------------------------------------------------------------------- > rho       |  -0.11 | [-0.27, 0.04] | 92.25% | [-0.05, 0.05] |    20.42% | 0.509 | Beta (3 +- 3)"},{"path":"https://easystats.github.io/bayestestR/articles/example2.html","id":"bayes-factor-bf","dir":"Articles","previous_headings":"Correlations","what":"Bayes Factor (BF)","title":"2. Confirmation of Bayesian skills","text":"said previously correlation test actually compares two hypotheses, null (absence effect) alternative one (presence effect). Bayes factor (BF) allows comparison determines two models observed data probable: model effect interest, null model without effect interest. , context correlation example, null hypothesis correlation two variables (\\(h0: \\rho = 0\\); \\(\\rho\\) stands Bayesian correlation coefficient), alternative hypothesis correlation different 0 - positive negative (\\(h1: \\rho \\neq 0\\)). can use bayesfactor_models() specifically compute Bayes factor comparing models: got BF 0.51. mean? Bayes factors continuous measures relative evidence, Bayes factor greater 1 giving evidence favour one models (often referred numerator), Bayes factor smaller 1 giving evidence favour model (denominator). Yes, heard right, evidence favour null! ’s one reason Bayesian framework sometimes considered superior frequentist framework. Remember stats lessons, p-value can used reject h0, accept . Bayes factor, can measure evidence - favour - null. words, frequentist framework, p-value significant, can conclude evidence effect absent, evidence absence effect. Bayesian framework, can latter. important since sometimes hypotheses effect. BFs representing evidence alternative null can reversed using \\(BF_{01}=1/BF_{10}\\) (01 10 correspond h0 h1 h1 h0, respectively) provide evidence null alternative. improves human readability1 cases BF alternative null smaller 1 (.e., support null). case, BF = 1/0.51 = 2, indicates data 2 times probable null compared alternative hypothesis, , though favouring null, considered anecdotal evidence null. can thus conclude anecdotal evidence favour absence correlation two variables (rmedian = 0.11, BF = 0.51), much informative statement can frequentist statistics. ’s !","code":"bayesfactor_models(result) > Bayes Factors for Model Comparison >  >     Model         BF > [2] (rho != 0) 0.509 >  > * Against Denominator: [1] (rho = 0) > *   Bayes Factor Type: JZS (BayesFactor)"},{"path":"https://easystats.github.io/bayestestR/articles/example2.html","id":"visualise-the-bayes-factor","dir":"Articles","previous_headings":"Correlations","what":"Visualise the Bayes factor","title":"2. Confirmation of Bayesian skills","text":"general, pie charts absolute -go data visualisation, brain’s perceptive system heavily distorts information presented way2. Nevertheless, one exception: pizza charts. intuitive way interpreting strength evidence provided BFs amount surprise. Wagenmakers’ pizza poking analogy. great <www.bayesianspectacles.org> blog. “pizza plots” can directly created see visualisation companion package easystats (can install running install.packages(\"see\")):  , seeing pizza, much surprised outcome blinded poke?","code":"library(see)  plot(bayesfactor_models(result)) +   scale_fill_pizza()"},{"path":"https://easystats.github.io/bayestestR/articles/example2.html","id":"t-tests","dir":"Articles","previous_headings":"","what":"t-tests","title":"2. Confirmation of Bayesian skills","text":"“know know nothing, especially versicolor virginica differ terms Sepal.Width” - Socrates. Time finally answer crucial question!","code":""},{"path":"https://easystats.github.io/bayestestR/articles/example2.html","id":"versicolor-vs--virginica","dir":"Articles","previous_headings":"t-tests","what":"Versicolor vs. virginica","title":"2. Confirmation of Bayesian skills","text":"Bayesian t-tests can performed similar way correlations. particularly interested two levels Species factor, versicolor virginica. start filtering iris non-relevant observations corresponding setosa specie, visualise observations distribution Sepal.Width variable.  seems (visually) virgnica flowers , average, slightly higer width sepals. Let’s assess difference statistically using ttestBF() function BayesFactor package.","code":"library(datawizard) library(ggplot2)  # Select only two relevant species data <- droplevels(data_filter(iris, Species != \"setosa\"))  # Visualise distributions and observations ggplot(data, aes(x = Species, y = Sepal.Width, fill = Species)) +   geom_violindot(fill_dots = \"black\", size_dots = 1) +   scale_fill_material() +   theme_modern()"},{"path":"https://easystats.github.io/bayestestR/articles/example2.html","id":"compute-the-bayesian-t-test","dir":"Articles","previous_headings":"t-tests","what":"Compute the Bayesian t-test","title":"2. Confirmation of Bayesian skills","text":"indices, can say difference Sepal.Width virginica versicolor probability 100% negative [pd sign median] (median = -0.19, 89% CI [-0.29, -0.092]). data provides strong evidence null hypothesis (BF = 18). Keep mind see another way investigating question.","code":"result <- BayesFactor::ttestBF(formula = Sepal.Width ~ Species, data = data) describe_posterior(result) > Summary of Posterior Distribution >  > Parameter  | Median |         95% CI |     pd |          ROPE | % in ROPE |    BF |              Prior > ------------------------------------------------------------------------------------------------------ > Difference |  -0.19 | [-0.32, -0.06] | 99.75% | [-0.03, 0.03] |        0% | 17.72 | Cauchy (0 +- 0.71)"},{"path":"https://easystats.github.io/bayestestR/articles/example2.html","id":"logistic-model","dir":"Articles","previous_headings":"","what":"Logistic Model","title":"2. Confirmation of Bayesian skills","text":"hypothesis one uses t-test can also tested using binomial model (e.g., logistic model). Indeed, possible reformulate following hypothesis, “important difference variable two groups” hypothesis “variable able discriminate (classify) two groups”. However, models much powerful t-test. case difference Sepal.Width virginica versicolor, question becomes, well can classify two species using Sepal.Width.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/example2.html","id":"fit-the-model","dir":"Articles","previous_headings":"Logistic Model","what":"Fit the model","title":"2. Confirmation of Bayesian skills","text":"","code":"library(rstanarm)  model <- stan_glm(Species ~ Sepal.Width,   data = data, family = \"binomial\",   chains = 10, iter = 5000, warmup = 1000,   refresh = 0 )"},{"path":"https://easystats.github.io/bayestestR/articles/example2.html","id":"visualise-the-model","dir":"Articles","previous_headings":"Logistic Model","what":"Visualise the model","title":"2. Confirmation of Bayesian skills","text":"Using modelbased package.","code":"library(modelbased)  vizdata <- estimate_relation(model)  ggplot(vizdata, aes(x = Sepal.Width, y = Predicted)) +   geom_ribbon(aes(ymin = CI_low, ymax = CI_high), alpha = 0.5) +   geom_line() +   ylab(\"Probability of being virginica\") +   theme_modern()"},{"path":"https://easystats.github.io/bayestestR/articles/example2.html","id":"performance-and-parameters","dir":"Articles","previous_headings":"Logistic Model","what":"Performance and Parameters","title":"2. Confirmation of Bayesian skills","text":", can extract indices interest posterior distribution using old pal describe_posterior().","code":"describe_posterior(model, test = c(\"pd\", \"ROPE\", \"BF\")) > Summary of Posterior Distribution >  > Parameter   | Median |          95% CI |     pd |          ROPE | % in ROPE |  Rhat |      ESS |    BF > ------------------------------------------------------------------------------------------------------ > (Intercept) |  -6.12 | [-10.45, -2.25] | 99.92% | [-0.10, 0.10] |        0% | 1.000 | 26540.00 | 12.99 > Sepal.Width |   2.13 | [  0.79,  3.63] | 99.94% | [-0.10, 0.10] |        0% | 1.000 | 26693.00 | 13.98 library(performance)  model_performance(model) > # Indices of model performance >  > ELPD    | ELPD_SE |   LOOIC | LOOIC_SE |    WAIC |    R2 |  RMSE | Sigma | Log_loss | Score_log | Score_spherical > ----------------------------------------------------------------------------------------------------------------- > -66.284 |   3.052 | 132.568 |    6.104 | 132.562 | 0.099 | 0.477 | 1.000 |    0.643 |   -35.436 |           0.014"},{"path":"https://easystats.github.io/bayestestR/articles/example2.html","id":"visualise-the-indices","dir":"Articles","previous_headings":"Logistic Model","what":"Visualise the indices","title":"2. Confirmation of Bayesian skills","text":".","code":"library(see)  plot(rope(result))"},{"path":"https://easystats.github.io/bayestestR/articles/example2.html","id":"diagnostic-indices","dir":"Articles","previous_headings":"Logistic Model","what":"Diagnostic Indices","title":"2. Confirmation of Bayesian skills","text":"diagnostic indices Rhat ESS.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/example3.html","id":"mixed-models","dir":"Articles","previous_headings":"","what":"Mixed Models","title":"3. Become a Bayesian master","text":"CONTINUED.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/example3.html","id":"priors","dir":"Articles","previous_headings":"Mixed Models","what":"Priors","title":"3. Become a Bayesian master","text":"CONTINUED.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/example3.html","id":"whats-next","dir":"Articles","previous_headings":"","what":"What’s next?","title":"3. Become a Bayesian master","text":"journey become true Bayesian master yet . merely beginning. now time leave bayestestR universe apply Bayesian framework variety statistical contexts: Marginal means Contrast analysis Testing Contrasts Bayesian Models ‘emmeans’ ‘bayestestR’","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/articles/guidelines.html","id":"how-to-describe-and-report-the-parameters-of-a-model","dir":"Articles","previous_headings":"Reporting Guidelines","what":"How to describe and report the parameters of a model","title":"Reporting Guidelines","text":"Bayesian analysis returns posterior distribution parameter (effect). minimally describe distributions, recommend reporting point-estimate centrality well information characterizing estimation uncertainty (dispersion). Additionally, one can also report indices effect existence /significance. Based previous comparison point-estimates indices effect existence, can draw following recommendations.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/guidelines.html","id":"centrality","dir":"Articles","previous_headings":"Reporting Guidelines > How to describe and report the parameters of a model","what":"Centrality","title":"Reporting Guidelines","text":"suggest reporting median index centrality, robust compared mean MAP estimate. However, case severely skewed posterior distribution, MAP estimate good alternative.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/guidelines.html","id":"uncertainty","dir":"Articles","previous_headings":"Reporting Guidelines > How to describe and report the parameters of a model","what":"Uncertainty","title":"Reporting Guidelines","text":"95% 89% Credible Intervals (CI) two reasonable ranges characterize uncertainty related estimation (see discussion differences two values). also recommend computing CIs based HDI rather quantiles, favouring probable central values. Note CI based quantile (equal-tailed interval) might appropriate case transformations (instance transforming log-odds probabilities). Otherwise, intervals originally cover null might cover transformation (see ).","code":""},{"path":"https://easystats.github.io/bayestestR/articles/guidelines.html","id":"existence","dir":"Articles","previous_headings":"Reporting Guidelines > How to describe and report the parameters of a model","what":"Existence","title":"Reporting Guidelines","text":"Reviewer 2 (circa long time ago galaxy far away). Bayesian framework can neatly delineate quantify different aspects hypothesis testing, effect existence significance. straightforward index describe existence effect Probability Direction (pd), representing certainty associated probable direction (positive negative) effect. index easy understand, simple interpret, straightforward compute, robust model characteristics, independent scale data. Moreover, strongly correlated frequentist p-value, can thus used draw parallels give reference readers non-familiar Bayesian statistics. two-sided p-value respectively .1, .05, .01 .001 correspond approximately pd* 95%, 97.5%, 99.5% 99.95%. Thus, convenience, suggest following reference values interpretation helpers: pd <= 95% ~ p > .1: uncertain pd > 95% ~ p < .1: possibly existing pd > 97%: likely existing pd > 99%: probably existing pd > 99.9%: certainly existing","code":""},{"path":"https://easystats.github.io/bayestestR/articles/guidelines.html","id":"significance","dir":"Articles","previous_headings":"Reporting Guidelines > How to describe and report the parameters of a model","what":"Significance","title":"Reporting Guidelines","text":"percentage ROPE index significance (primary meaning), informing us whether parameter related non-negligible change (terms magnitude) outcome. suggest reporting percentage full posterior distribution (full ROPE) instead given proportion CI ROPE, appears sensitive (especially delineate highly significant effects). Rather using binary, --nothing decision criterion, suggested original equivalence test, recommend using percentage continuous index significance. However, based simulation data, suggest following reference values interpretation helpers: > 99% ROPE: negligible (can accept null hypothesis) > 97.5% ROPE: probably negligible <= 97.5% & >= 2.5% ROPE: undecided significance < 2.5% ROPE: probably significant < 1% ROPE: significant (can reject null hypothesis) Note extra caution required interpretation highly depends parameters sample size ROPE range (see ).","code":""},{"path":"https://easystats.github.io/bayestestR/articles/guidelines.html","id":"template-sentence","dir":"Articles","previous_headings":"Reporting Guidelines > How to describe and report the parameters of a model","what":"Template Sentence","title":"Reporting Guidelines","text":"Based suggestions, template sentence minimal reporting parameter based posterior distribution : “effect X probability pd negative (Median = median, 89% CI [ HDIlow , HDIhigh ] can considered significant [ROPE% ROPE]).”","code":""},{"path":"https://easystats.github.io/bayestestR/articles/guidelines.html","id":"how-to-compare-different-models","dir":"Articles","previous_headings":"Reporting Guidelines","what":"How to compare different models","title":"Reporting Guidelines","text":"Although can also used assess effect existence significance, Bayes factor (BF) versatile index can used directly compare different models (data generation processes). Bayes factor ratio informs us much (less) likely observed data two compared models - usually model versus model without effect. Depending specifications null model (whether point-estimate (e.g., 0) interval), Bayes factor used context effect existence significance. general, Bayes factor greater 1 taken evidence favour one model (nominator), Bayes factor smaller 1 taken evidence favour model (denominator). Several rules thumb exist help interpretation (see ), > 3 one common threshold categorize non-anecdotal evidence.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/guidelines.html","id":"template-sentence-1","dir":"Articles","previous_headings":"Reporting Guidelines > How to compare different models","what":"Template Sentence","title":"Reporting Guidelines","text":"reporting Bayes factors (BF), one can use following sentence: “moderate evidence favour absence effect x (BF = BF).”","code":""},{"path":"https://easystats.github.io/bayestestR/articles/guidelines.html","id":"suggestions","dir":"Articles","previous_headings":"","what":"Suggestions","title":"Reporting Guidelines","text":"advice, opinion , encourage let us know opening discussion thread making pull request.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/indicesExistenceComparison.html","id":"indices-of-effect-existence-and-significance-in-the-bayesian-framework","dir":"Articles","previous_headings":"","what":"Indices of Effect Existence and Significance in the Bayesian Framework","title":"In-Depth 2: Comparison of Indices of Effect Existence and Significance","text":"comparison different Bayesian indices (pd, BFs, ROPE etc.) accessible . , case don’t wish read full article, following table summarizes key takeaways!","code":""},{"path":"https://easystats.github.io/bayestestR/articles/indicesExistenceComparison.html","id":"suggestions","dir":"Articles","previous_headings":"","what":"Suggestions","title":"In-Depth 2: Comparison of Indices of Effect Existence and Significance","text":"advice, opinion , encourage let us know opening discussion thread making pull request.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/mediation.html","id":"mediation-analysis-in-brms-and-rstanarm","dir":"Articles","previous_headings":"","what":"Mediation Analysis in brms and rstanarm","title":"Mediation Analysis using Bayesian Regression Models","text":"mediation() summary function, especially mediation analysis, .e. multivariate response models casual mediation effects. models m2 m3, treat treatment effect job_seek mediator effect. brms model (m2), f1 describes mediator model f2 describes outcome model. similar rstanarm model. mediation() returns data frame information direct effect (median value posterior samples treatment outcome model), mediator effect (median value posterior samples mediator outcome model), indirect effect (median value multiplication posterior samples mediator outcome model posterior samples treatment mediation model) total effect (median value sums posterior samples used direct indirect effect). proportion mediated indirect effect divided total effect. simplest call just needs model-object. Typically, mediation() finds treatment mediator variables automatically. work, use treatment mediator arguments specify related variable names. values, 89% credible intervals calculated default. Use ci calculate different interval.","code":"library(bayestestR) library(mediation) library(brms) library(rstanarm)  # load sample data data(jobs)  set.seed(123) # linear models, for mediation analysis b1 <- lm(job_seek ~ treat + econ_hard + sex + age, data = jobs) b2 <- lm(depress2 ~ treat + job_seek + econ_hard + sex + age, data = jobs)  # mediation analysis, for comparison with brms m1 <- mediate(b1, b2, sims = 1000, treat = \"treat\", mediator = \"job_seek\") # Fit Bayesian mediation model in brms f1 <- bf(job_seek ~ treat + econ_hard + sex + age) f2 <- bf(depress2 ~ treat + job_seek + econ_hard + sex + age) m2 <- brm(f1 + f2 + set_rescor(FALSE), data = jobs, cores = 4) # Fit Bayesian mediation model in rstanarm m3 <- stan_mvmer(   list(     job_seek ~ treat + econ_hard + sex + age + (1 | occp),     depress2 ~ treat + job_seek + econ_hard + sex + age + (1 | occp)   ),   data = jobs,   cores = 4,   refresh = 0 ) # for brms mediation(m2) #> # Causal Mediation Analysis for Stan Model #>  #>   Treatment: treat #>   Mediator : job_seek #>   Response : depress2 #>  #> Effect                 | Estimate |          95% ETI #> ---------------------------------------------------- #> Direct Effect (ADE)    |   -0.040 | [-0.124,  0.046] #> Indirect Effect (ACME) |   -0.015 | [-0.041,  0.008] #> Mediator Effect        |   -0.240 | [-0.294, -0.185] #> Total Effect           |   -0.055 | [-0.145,  0.034] #>  #> Proportion mediated: 28.14% [-181.46%, 237.75%]  # for rstanarm mediation(m3) #> # Causal Mediation Analysis for Stan Model #>  #>   Treatment: treat #>   Mediator : job_seek #>   Response : depress2 #>  #> Effect                 | Estimate |          95% ETI #> ---------------------------------------------------- #> Direct Effect (ADE)    |   -0.040 | [-0.129,  0.048] #> Indirect Effect (ACME) |   -0.018 | [-0.042,  0.006] #> Mediator Effect        |   -0.241 | [-0.296, -0.187] #> Total Effect           |   -0.057 | [-0.151,  0.033] #>  #> Proportion mediated: 30.59% [-221.09%, 282.26%]"},{"path":"https://easystats.github.io/bayestestR/articles/mediation.html","id":"comparison-to-the-mediation-package","dir":"Articles","previous_headings":"","what":"Comparison to the mediation package","title":"Mediation Analysis using Bayesian Regression Models","text":"comparison mediation package. Note summary()-output mediation package shows indirect effect first, followed direct effect. want calculate mean instead median values posterior samples, use centrality-argument. Furthermore, print()-method, allows print digits. can see, results similar mediation package produces non-Bayesian models.","code":"summary(m1) #>  #> Causal Mediation Analysis  #>  #> Quasi-Bayesian Confidence Intervals #>  #>                Estimate 95% CI Lower 95% CI Upper p-value #> ACME            -0.0157      -0.0387         0.01    0.19 #> ADE             -0.0438      -0.1315         0.04    0.35 #> Total Effect    -0.0595      -0.1530         0.02    0.21 #> Prop. Mediated   0.2137      -2.0277         2.70    0.32 #>  #> Sample Size Used: 899  #>  #>  #> Simulations: 1000  mediation(m2, ci = .95) #> # Causal Mediation Analysis for Stan Model #>  #>   Treatment: treat #>   Mediator : job_seek #>   Response : depress2 #>  #> Effect                 | Estimate |          95% ETI #> ---------------------------------------------------- #> Direct Effect (ADE)    |   -0.040 | [-0.124,  0.046] #> Indirect Effect (ACME) |   -0.015 | [-0.041,  0.008] #> Mediator Effect        |   -0.240 | [-0.294, -0.185] #> Total Effect           |   -0.055 | [-0.145,  0.034] #>  #> Proportion mediated: 28.14% [-181.46%, 237.75%]  mediation(m3, ci = .95) #> # Causal Mediation Analysis for Stan Model #>  #>   Treatment: treat #>   Mediator : job_seek #>   Response : depress2 #>  #> Effect                 | Estimate |          95% ETI #> ---------------------------------------------------- #> Direct Effect (ADE)    |   -0.040 | [-0.129,  0.048] #> Indirect Effect (ACME) |   -0.018 | [-0.042,  0.006] #> Mediator Effect        |   -0.241 | [-0.296, -0.187] #> Total Effect           |   -0.057 | [-0.151,  0.033] #>  #> Proportion mediated: 30.59% [-221.09%, 282.26%] m <- mediation(m2, centrality = \"mean\", ci = .95) print(m, digits = 4) #> # Causal Mediation Analysis for Stan Model #>  #>   Treatment: treat #>   Mediator : job_seek #>   Response : depress2 #>  #> Effect                 | Estimate |            95% ETI #> ------------------------------------------------------ #> Direct Effect (ADE)    |  -0.0395 | [-0.1237,  0.0456] #> Indirect Effect (ACME) |  -0.0158 | [-0.0405,  0.0083] #> Mediator Effect        |  -0.2401 | [-0.2944, -0.1846] #> Total Effect           |  -0.0553 | [-0.1454,  0.0341] #>  #> Proportion mediated: 28.60% [-181.01%, 238.20%]"},{"path":"https://easystats.github.io/bayestestR/articles/mediation.html","id":"comparison-to-sem-from-the-lavaan-package","dir":"Articles","previous_headings":"","what":"Comparison to SEM from the lavaan package","title":"Mediation Analysis using Bayesian Regression Models","text":"Finally, also compare results SEM model, using lavaan. example demonstrate “translate” model different packages modeling approached. summary output lavaan longer, can find related numbers quite easily: direct effect treatment treat (c1), -0.040 indirect effect treatment indirect_treat, -0.016 mediator effect job_seek job_seek (b), -0.240 total effect total_treat, -0.056","code":"library(lavaan) data(jobs) set.seed(1234)  model <- \" # direct effects              depress2 ~ c1*treat + c2*econ_hard + c3*sex + c4*age + b*job_seek             # mediation              job_seek ~ a1*treat + a2*econ_hard + a3*sex + a4*age             # indirect effects (a*b)              indirect_treat := a1*b              indirect_econ_hard := a2*b              indirect_sex := a3*b              indirect_age := a4*b             # total effects              total_treat := c1 + (a1*b)              total_econ_hard := c2 + (a2*b)              total_sex := c3 + (a3*b)              total_age := c4 + (a4*b)          \" m4 <- sem(model, data = jobs) summary(m4) #> lavaan 0.6-12 ended normally after 1 iterations #>  #>   Estimator                                         ML #>   Optimization method                           NLMINB #>   Number of model parameters                        11 #>  #>   Number of observations                           899 #>  #> Model Test User Model: #>                                                        #>   Test statistic                                 0.000 #>   Degrees of freedom                                 0 #>  #> Parameter Estimates: #>  #>   Standard errors                             Standard #>   Information                                 Expected #>   Information saturated (h1) model          Structured #>  #> Regressions: #>                    Estimate  Std.Err  z-value  P(>|z|) #>   depress2 ~                                           #>     treat     (c1)   -0.040    0.043   -0.929    0.353 #>     econ_hard (c2)    0.149    0.021    7.156    0.000 #>     sex       (c3)    0.107    0.041    2.604    0.009 #>     age       (c4)    0.001    0.002    0.332    0.740 #>     job_seek   (b)   -0.240    0.028   -8.524    0.000 #>   job_seek ~                                           #>     treat     (a1)    0.066    0.051    1.278    0.201 #>     econ_hard (a2)    0.053    0.025    2.167    0.030 #>     sex       (a3)   -0.008    0.049   -0.157    0.875 #>     age       (a4)    0.005    0.002    1.983    0.047 #>  #> Variances: #>                    Estimate  Std.Err  z-value  P(>|z|) #>    .depress2          0.373    0.018   21.201    0.000 #>    .job_seek          0.524    0.025   21.201    0.000 #>  #> Defined Parameters: #>                    Estimate  Std.Err  z-value  P(>|z|) #>     indirect_treat   -0.016    0.012   -1.264    0.206 #>     indirct_cn_hrd   -0.013    0.006   -2.100    0.036 #>     indirect_sex      0.002    0.012    0.157    0.875 #>     indirect_age     -0.001    0.001   -1.932    0.053 #>     total_treat      -0.056    0.045   -1.244    0.214 #>     total_econ_hrd    0.136    0.022    6.309    0.000 #>     total_sex         0.109    0.043    2.548    0.011 #>     total_age        -0.000    0.002   -0.223    0.824  # just to have the numbers right at hand and you don't need to scroll up mediation(m2, ci = .95) #> # Causal Mediation Analysis for Stan Model #>  #>   Treatment: treat #>   Mediator : job_seek #>   Response : depress2 #>  #> Effect                 | Estimate |          95% ETI #> ---------------------------------------------------- #> Direct Effect (ADE)    |   -0.040 | [-0.124,  0.046] #> Indirect Effect (ACME) |   -0.015 | [-0.041,  0.008] #> Mediator Effect        |   -0.240 | [-0.294, -0.185] #> Total Effect           |   -0.055 | [-0.145,  0.034] #>  #> Proportion mediated: 28.14% [-181.46%, 237.75%]"},{"path":"https://easystats.github.io/bayestestR/articles/overview_of_vignettes.html","id":"function-overview","dir":"Articles","previous_headings":"","what":"Function Overview","title":"Overview of Vignettes","text":"Function Reference","code":""},{"path":"https://easystats.github.io/bayestestR/articles/overview_of_vignettes.html","id":"get-started","dir":"Articles","previous_headings":"","what":"Get Started","title":"Overview of Vignettes","text":"Get Started Bayesian Analysis","code":""},{"path":"https://easystats.github.io/bayestestR/articles/overview_of_vignettes.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Overview of Vignettes","text":"Initiation Bayesian models Confirmation Bayesian skills Become Bayesian master","code":""},{"path":"https://easystats.github.io/bayestestR/articles/overview_of_vignettes.html","id":"articles","dir":"Articles","previous_headings":"","what":"Articles","title":"Overview of Vignettes","text":"Credible Intervals (CI)) Region Practical Equivalence (ROPE) Probability Direction (pd) Bayes Factors","code":""},{"path":"https://easystats.github.io/bayestestR/articles/overview_of_vignettes.html","id":"in-depths","dir":"Articles","previous_headings":"","what":"In-Depths","title":"Overview of Vignettes","text":"Comparison Point-Estimates Indices Effect Existence Significance Bayesian Framework Mediation Analysis using Bayesian Regression Models","code":""},{"path":"https://easystats.github.io/bayestestR/articles/overview_of_vignettes.html","id":"guidelines","dir":"Articles","previous_headings":"","what":"Guidelines","title":"Overview of Vignettes","text":"Reporting Guidelines","code":""},{"path":"https://easystats.github.io/bayestestR/articles/probability_of_direction.html","id":"what-is-the-pd","dir":"Articles","previous_headings":"","what":"What is the pd?","title":"Probability of Direction (pd)","text":"Probability Direction (pd) index effect existence, ranging 50% 100%, representing certainty effect goes particular direction (.e., positive negative). Beyond simplicity interpretation, understanding computation, index also presents interesting properties: independent model: solely based posterior distributions require additional information data model. robust scale response variable predictors. strongly correlated frequentist p-value, can thus used draw parallels give reference readers non-familiar Bayesian statistics. However, index relevant assess magnitude importance effect (meaning “significance”), better achieved indices ROPE percentage. fact, indices significance existence totally independent. can effect pd 99.99%, whole posterior distribution concentrated within [0.0001, 0.0002] range. case, effect positive high certainty, also significant (.e., small). Indices effect existence, pd, particularly useful exploratory research clinical studies, focus make sure effect interest opposite direction (clinical studies, treatment harmful). However, effect’s direction confirmed, focus shift toward significance, including precise estimation magnitude, relevance importance.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/probability_of_direction.html","id":"relationship-with-the-p-value","dir":"Articles","previous_headings":"","what":"Relationship with the p-value","title":"Probability of Direction (pd)","text":"cases, seems pd direct correspondence frequentist one-sided p-value formula: \\[p_{one-sided} = 1-p_d\\] Similarly, two-sided p-value (commonly reported one) equivalent formula: \\[p_{two-sided} = 2*(1-p_d)\\] Thus, two-sided p-value respectively .1, .05, .01 .001 correspond approximately pd 95%, 97.5%, 99.5% 99.95% . Correlation frequentist p-value probability direction (pd) ’s like p-value, must bad p-value bad [insert reference reproducibility crisis]. fact, aspect reproducibility crisis might misunderstood. Indeed, p-value intrinsically bad wrong. Instead, misuse, misunderstanding misinterpretation fuels decay situation. instance, fact pd highly correlated p-value suggests latter index effect existence significance (.e., “worth interest”). Bayesian version, pd, intuitive meaning makes obvious fact thresholds arbitrary. Additionally, mathematical interpretative transparency pd, reconceptualisation index effect existence, offers valuable insight characterization Bayesian results. Moreover, concomitant proximity frequentist p-value makes perfect metric ease transition psychological research adoption Bayesian framework.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/probability_of_direction.html","id":"methods-of-computation","dir":"Articles","previous_headings":"","what":"Methods of computation","title":"Probability of Direction (pd)","text":"simple direct way compute pd 1) look median’s sign, 2) select portion posterior sign 3) compute percentage portion represents. “simple” method straightforward, precision directly tied number posterior draws. second approach relies density estimation. starts estimating density function (many methods available), computing area curve (AUC) density curve side 0. density-based method hypothetically considered precise, strongly depends method used estimate density function.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/probability_of_direction.html","id":"methods-comparison","dir":"Articles","previous_headings":"","what":"Methods comparison","title":"Probability of Direction (pd)","text":"Let’s compare 4 available methods, direct method 3 density-based methods differing density estimation algorithm (see estimate_density).","code":""},{"path":"https://easystats.github.io/bayestestR/articles/probability_of_direction.html","id":"correlation","dir":"Articles","previous_headings":"Methods comparison","what":"Correlation","title":"Probability of Direction (pd)","text":"Let’s start testing proximity similarity results obtained different methods. methods give highly correlated give similar results. means method choice drastic game changer used tweak results much.","code":"library(bayestestR) library(logspline) library(KernSmooth)  # Compute the correlations data <- data.frame() for (the_mean in runif(25, 0, 4)) {   for (the_sd in runif(25, 0.5, 4)) {     x <- rnorm(100, the_mean, abs(the_sd))     data <- rbind(       data,       data.frame(         \"direct\" = pd(x),         \"kernel\" = pd(x, method = \"kernel\"),         \"logspline\" = pd(x, method = \"logspline\"),         \"KernSmooth\" = pd(x, method = \"KernSmooth\")       )     )   } } data <- as.data.frame(sapply(data, as.numeric))  # Visualize the correlations bayesplot::mcmc_pairs(data) +   theme_classic() > NULL"},{"path":"https://easystats.github.io/bayestestR/articles/probability_of_direction.html","id":"accuracy","dir":"Articles","previous_headings":"Methods comparison","what":"Accuracy","title":"Probability of Direction (pd)","text":"test accuracy methods, start computing direct pd dense distribution (large amount observations). baseline, “true” pd. , iteratively draw smaller samples parent distribution, compute pd different methods. closer estimate reference one, better.  “Kernel” based density methods seems consistently underestimate pd. Interestingly, “direct” method appears reliable, even case small number posterior draws.","code":"data <- data.frame() for (i in 1:25) {   the_mean <- runif(1, 0, 4)   the_sd <- abs(runif(1, 0.5, 4))   parent_distribution <- rnorm(100000, the_mean, the_sd)   true_pd <- pd(parent_distribution)    for (j in 1:25) {     sample_size <- round(runif(1, 25, 5000))     subsample <- sample(parent_distribution, sample_size)     data <- rbind(       data,       data.frame(         \"sample_size\" = sample_size,         \"true\" = true_pd,         \"direct\" = pd(subsample) - true_pd,         \"kernel\" = pd(subsample, method = \"kernel\") - true_pd,         \"logspline\" = pd(subsample, method = \"logspline\") - true_pd,         \"KernSmooth\" = pd(subsample, method = \"KernSmooth\") - true_pd       )     )   } } data <- as.data.frame(sapply(data, as.numeric)) library(datawizard) # for reshape_longer  data <- reshape_longer(data, cols = 3:6, colnames_to = \"Method\", values_to = \"Distance\")  ggplot(data, aes(x = sample_size, y = Distance, color = Method, fill = Method)) +   geom_point(alpha = 0.3, stroke = 0, shape = 16) +   geom_smooth(alpha = 0.2) +   geom_hline(yintercept = 0) +   theme_classic() +   xlab(\"\\nDistribution Size\")"},{"path":"https://easystats.github.io/bayestestR/articles/probability_of_direction.html","id":"can-the-pd-be-100","dir":"Articles","previous_headings":"Methods comparison","what":"Can the pd be 100%?","title":"Probability of Direction (pd)","text":"p = 0.000 coined one term avoid reporting results (Lilienfeld et al., 2015), even often displayed statistical software. rationale every probability distribution, value probability exactly 0. always infinitesimal probability associated data point, p = 0.000 returned software due approximations related, among , finite memory hardware. One apply rationale pd: since data points non-null probability density, pd (particular portion probability density) can never 100%. entirely valid point, people using direct method might argue pd based posterior draws, rather theoretical, hidden, true posterior distribution (approximated posterior draws). posterior draws represent finite sample pd = 100% valid statement.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/region_of_practical_equivalence.html","id":"what-is-the-rope","dir":"Articles","previous_headings":"","what":"What is the ROPE?","title":"Region of Practical Equivalence (ROPE)","text":"Unlike frequentist approach, Bayesian inference based statistical significance, effects tested “zero”. Indeed, Bayesian framework offers probabilistic view parameters, allowing assessment uncertainty related . Thus, rather concluding effect present simply differs zero, conclude probability outside specific range can considered “practically effect” (.e., negligible magnitude) sufficient. range called region practical equivalence (ROPE). Indeed, statistically, probability posterior distribution different 0 make much sense (probability different single point infinite). Therefore, idea underlining ROPE let user define area around null value enclosing values equivalent null value practical purposes (J. Kruschke, 2014; J. K. Kruschke, 2010; J. K. Kruschke, Aguinis, & Joo, 2012).","code":""},{"path":"https://easystats.github.io/bayestestR/articles/region_of_practical_equivalence.html","id":"equivalence-test","dir":"Articles","previous_headings":"","what":"Equivalence Test","title":"Region of Practical Equivalence (ROPE)","text":"ROPE, region corresponding “null” hypothesis, used equivalence test, test whether parameter significant (sense important enough cared ). test usually based “HDI+ROPE decision rule” (J. Kruschke, 2014; J. K. Kruschke & Liddell, 2018) check whether parameter values accepted rejected explicitly formulated “null hypothesis” (.e., ROPE). words, checks percentage Credible Interval (CI) null region (ROPE). percentage sufficiently low, null hypothesis rejected. percentage sufficiently high, null hypothesis accepted.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/region_of_practical_equivalence.html","id":"credible-interval-in-rope-vs-full-posterior-in-rope","dir":"Articles","previous_headings":"","what":"Credible interval in ROPE vs full posterior in ROPE","title":"Region of Practical Equivalence (ROPE)","text":"Using ROPE HDI Credible Interval, Kruschke (2018) suggests using percentage 95% HDI falls within ROPE decision rule. However, 89% HDI considered better choice (J. Kruschke, 2014; R. McElreath, 2014; Richard McElreath, 2018), bayestestR provides default percentage 89% HDI falls within ROPE. However, simulation studies data suggest using percentage full posterior distribution, instead CI, might sensitive (especially delineate highly significant effects). Thus, recommend user considers using full ROPE percentage (setting ci = 1), return portion entire posterior distribution ROPE.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/region_of_practical_equivalence.html","id":"what-percentage-in-rope-to-accept-or-to-reject","dir":"Articles","previous_headings":"","what":"What percentage in ROPE to accept or to reject?","title":"Region of Practical Equivalence (ROPE)","text":"HDI completely outside ROPE, “null hypothesis” parameter “rejected”. ROPE completely covers HDI, .e., credible values parameter inside region practical equivalence, null hypothesis accepted. Else, ’s unclear whether null hypothesis accepted rejected. full ROPE used (.e., 100% HDI), null hypothesis rejected accepted percentage posterior within ROPE smaller 2.5% greater 97.5%. Desirable results low proportions inside ROPE (closer zero better).","code":""},{"path":"https://easystats.github.io/bayestestR/articles/region_of_practical_equivalence.html","id":"how-to-define-the-rope-range","dir":"Articles","previous_headings":"","what":"How to define the ROPE range?","title":"Region of Practical Equivalence (ROPE)","text":"Kruschke (2018) suggests ROPE set, default, range -0.1 0.1 standardized parameter (negligible effect size according Cohen, 1988). linear models (lm), can generalised : \\[[-0.1*SD_{y}, 0.1*SD_{y}]\\]. logistic models, parameters expressed log odds ratio can converted standardized difference formula: \\[\\pi/\\sqrt{3}\\] (see effectsize package, resulting range -0.18 -0.18. models binary outcome, strongly recommended manually specify rope argument. Currently, default applied logistic models. t-tests, standard deviation response used, similarly linear models (see ). correlations, -0.05, 0.05 used, .e., half value negligible correlation suggested Cohen’s (1988) rules thumb. models, -0.1, 0.1 used determine ROPE limits, strongly advised specify manually.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/region_of_practical_equivalence.html","id":"sensitivity-to-parameters-scale","dir":"Articles","previous_headings":"","what":"Sensitivity to parameter’s scale","title":"Region of Practical Equivalence (ROPE)","text":"important consider unit (.e., scale) predictors using index based ROPE, correct interpretation ROPE representing region practical equivalence zero dependent scale predictors. Indeed, unlike indices (pd), percentage ROPE depend unit parameter. words, ROPE represents fixed portion response’s scale, proximity coefficient depends scale coefficient . instance, consider simple regression growth ~ time, modelling development Wookies babies, negligible change (ROPE) less 54 cm. time variable expressed days, find coefficient (representing growth day) 10 cm (median posterior coefficient 10). consider negligible. However, decide express time variable years, coefficient scaled transformation (now represent growth year). coefficient now around 3550 cm (10 * 355), now consider significant.   can see pd percentage ROPE linear relationship Sepal.Length Sepal.Width respectively 92.95% 15.95%, corresponding uncertain significant effect. happen scale predictor?   can see, simply dividing predictor 100, drastically changed conclusion related percentage ROPE (became close 0): effect now interpreted significant. Thus, recommend paying close attention unit predictors selecting ROPE range (e.g., coefficient correspond small effect?), reporting reading ROPE results.","code":"library(rstanarm) library(bayestestR) library(see)  data <- iris # Use the iris data model <- stan_glm(Sepal.Length ~ Sepal.Width, data = data) # Fit model # Compute indices pd <- p_direction(model) percentage_in_rope <- rope(model, ci = 1)  # Visualise the pd plot(pd) pd > Probability of Direction >  > Parameter   |     pd > -------------------- > (Intercept) |   100% > Sepal.Width | 91.65% # Visualise the percentage in ROPE plot(percentage_in_rope) percentage_in_rope > # Proportion of samples inside the ROPE [-0.08, 0.08]: >  > Parameter   | inside ROPE > ------------------------- > (Intercept) |      0.00 % > Sepal.Width |     16.28 % data$Sepal.Width_scaled <- data$Sepal.Width / 100 # Divide predictor by 100 model <- stan_glm(Sepal.Length ~ Sepal.Width_scaled, data = data) # Fit model # Compute indices pd <- p_direction(model) percentage_in_rope <- rope(model, ci = 1)  # Visualise the pd plot(pd) pd > Probability of Direction >  > Parameter          |     pd > --------------------------- > (Intercept)        |   100% > Sepal.Width_scaled | 91.65% # Visualise the percentage in ROPE plot(percentage_in_rope) percentage_in_rope > # Proportion of samples inside the ROPE [-0.08, 0.08]: >  > Parameter          | inside ROPE > -------------------------------- > (Intercept)        |      0.00 % > Sepal.Width_scaled |      0.10 %"},{"path":"https://easystats.github.io/bayestestR/articles/region_of_practical_equivalence.html","id":"multicollinearity-non-independent-covariates","dir":"Articles","previous_headings":"","what":"Multicollinearity: Non-independent covariates","title":"Region of Practical Equivalence (ROPE)","text":"parameters show strong correlations, .e., covariates independent, joint parameter distributions may shift towards away ROPE. Collinearity invalidates ROPE hypothesis testing based univariate marginals, probabilities conditional independence. problematic parameters partial overlap ROPE region. case collinearity, (joint) distributions parameters may either get increased decreased ROPE, means inferences based ROPE inappropriate (J. Kruschke, 2014). equivalence_test() rope() functions perform simple check pairwise correlations parameters, can collinearity two variables, first step check assumptions hypothesis testing look different pair plots. even sophisticated check projection predictive variable selection (Piironen & Vehtari, 2017).","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/articles/web_only/indicesEstimationComparison.html","id":"introduction","dir":"Articles > Web_only","previous_headings":"Effect Point-Estimates in the Bayesian Framework","what":"Introduction","title":"In-Depth 1: Comparison of Point-Estimates","text":"One main difference Bayesian frequentist frameworks former returns probability distribution effect (.e., model parameter interest, regression slope) instead single value. However, still need demand - reporting use analysis - single value (point-estimate) best characterises underlying posterior distribution. three main indices used literature effect estimation: - mean - median - MAP (Maximum Posteriori) estimate (roughly corresponding mode - “peak” - distribution) Unfortunately, consensus one use, systematic comparison ever done. present work, compare three point-estimates effect , well widely known beta, extracted comparable frequentist model. comparisons can help us draw bridges relationships two influential statistical frameworks.","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/articles/web_only/indicesEstimationComparison.html","id":"methods","dir":"Articles > Web_only","previous_headings":"Effect Point-Estimates in the Bayesian Framework > Experiment 1: Relationship with Error (Noise) and Sample Size","what":"Methods","title":"In-Depth 1: Comparison of Point-Estimates","text":"carrying simulation aimed modulating following characteristics: Model type: linear logistic. “True” effect (known parameters values data drawn): Can 1 0 (effect). Sample size: 20 100 steps 10. Error: Gaussian noise applied predictor SD uniformly spread 0.33 6.66 (1000 different values). generated dataset combination characteristics, resulting total 2 * 2 * 9 * 1000 = 36000 Bayesian frequentist models. code used generation available (please note takes usually several days/weeks complete).","code":"library(ggplot2) library(datawizard) library(see) library(parameters)  df <- read.csv(\"https://raw.github.com/easystats/circus/master/data/bayesSim_study1.csv\")"},{"path":[]},{"path":"https://easystats.github.io/bayestestR/articles/web_only/indicesEstimationComparison.html","id":"sensitivity-to-noise","dir":"Articles > Web_only","previous_headings":"Effect Point-Estimates in the Bayesian Framework > Experiment 1: Relationship with Error (Noise) and Sample Size > Results","what":"Sensitivity to Noise","title":"In-Depth 1: Comparison of Point-Estimates","text":"","code":"dat <- df dat <- data_select(dat, select = c(\"error\", \"true_effect\", \"outcome_type\", \"Coefficient\", \"Median\", \"Mean\", \"MAP\")) dat <- reshape_longer(   dat,   select = -c(\"error\", \"true_effect\", \"outcome_type\"),   names_to = \"estimate\",   values_to = \"value\" ) dat$temp <- as.factor(cut(dat$error, 10, labels = FALSE))  tmp <- lapply(split(dat, dat$temp), function(x) {   x$error_group <- rep(round(mean(x$error), 1), times = nrow(x))   return(x) })  dat <- do.call(rbind, tmp) dat <- data_filter(dat, value < 6)  ggplot(dat, aes(x = error_group, y = value, fill = estimate, group = interaction(estimate, error_group))) +   # geom_hline(yintercept = 0) +   # geom_point(alpha=0.05, size=2, stroke = 0, shape=16) +   # geom_smooth(method=\"loess\") +   geom_boxplot(outlier.shape = NA) +   theme_modern() +   scale_fill_manual(     values = c(\"Coefficient\" = \"#607D8B\", \"MAP\" = \"#795548\", \"Mean\" = \"#FF9800\", \"Median\" = \"#FFEB3B\"),     name = \"Index\"   ) +   ylab(\"Point-estimate\") +   xlab(\"Noise\") +   facet_wrap(~ outcome_type * true_effect, scales = \"free\")"},{"path":"https://easystats.github.io/bayestestR/articles/web_only/indicesEstimationComparison.html","id":"sensitivity-to-sample-size","dir":"Articles > Web_only","previous_headings":"Effect Point-Estimates in the Bayesian Framework > Experiment 1: Relationship with Error (Noise) and Sample Size > Results","what":"Sensitivity to Sample Size","title":"In-Depth 1: Comparison of Point-Estimates","text":"","code":"dat <- df dat <- data_select(dat, select = c(\"sample_size\", \"true_effect\", \"outcome_type\", \"Coefficient\", \"Median\", \"Mean\", \"MAP\")) dat <- reshape_longer(   dat,   select = -c(\"sample_size\", \"true_effect\", \"outcome_type\"),   names_to = \"estimate\",   values_to = \"value\" ) dat$temp <- as.factor(cut(dat$sample_size, 10, labels = FALSE))  tmp <- lapply(split(dat, dat$temp), function(x) {   x$size_group <- rep(round(mean(x$sample_size), 1), times = nrow(x))   return(x) })  dat <- do.call(rbind, tmp) dat <- data_filter(dat, value < 6)  ggplot(dat, aes(x = size_group, y = value, fill = estimate, group = interaction(estimate, size_group))) +   # geom_hline(yintercept = 0) +   # geom_point(alpha=0.05, size=2, stroke = 0, shape=16) +   # geom_smooth(method=\"loess\") +   geom_boxplot(outlier.shape = NA) +   theme_modern() +   scale_fill_manual(     values = c(\"Coefficient\" = \"#607D8B\", \"MAP\" = \"#795548\", \"Mean\" = \"#FF9800\", \"Median\" = \"#FFEB3B\"),     name = \"Index\"   ) +   ylab(\"Point-estimate\") +   xlab(\"Sample size\") +   facet_wrap(~ outcome_type * true_effect, scales = \"free\")"},{"path":"https://easystats.github.io/bayestestR/articles/web_only/indicesEstimationComparison.html","id":"statistical-modelling","dir":"Articles > Web_only","previous_headings":"Effect Point-Estimates in the Bayesian Framework > Experiment 1: Relationship with Error (Noise) and Sample Size > Results","what":"Statistical Modelling","title":"In-Depth 1: Comparison of Point-Estimates","text":"fitted (frequentist) multiple linear regression statistically test predict presence absence effect estimates well interaction noise sample size. suggests , order delineate presence absence effect, compared frequentist’s beta coefficient: linear models, Mean better predictor, closely followed Median, MAP frequentist Coefficient. logistic models, MAP better predictor, followed Median, Mean , behind, frequentist Coefficient. Overall, median appears safe choice, maintaining high performance across different types models.","code":"dat <- df dat <- data_select(dat, select = c(\"sample_size\", \"true_effect\", \"outcome_type\", \"Coefficient\", \"Median\", \"Mean\", \"MAP\")) dat <- reshape_longer(   dat,   select = -c(\"sample_size\", \"error\", \"true_effect\", \"outcome_type\"),   names_to = \"estimate\",   values_to = \"value\" )  out <- glm(true_effect ~ outcome_type / estimate / value, data = dat, family = \"binomial\") out <- parameters(out, df_method = \"wald\") out <- data_select(out, c(\"Parameter\", \"Coefficient\", \"p\")) out <- data_filter(out, grep(\"^outcome_type(.*):value$\", x = out$Parameter)) out <- out[order(out$Coefficient, decreasing = TRUE), ] knitr::kable(out, digits = 2)"},{"path":[]},{"path":"https://easystats.github.io/bayestestR/articles/web_only/indicesEstimationComparison.html","id":"methods-1","dir":"Articles > Web_only","previous_headings":"Effect Point-Estimates in the Bayesian Framework > Experiment 2: Relationship with Sampling Characteristics","what":"Methods","title":"In-Depth 1: Comparison of Point-Estimates","text":"carrying another simulation aimed modulating following characteristics: Model type: linear logistic. “True” effect (original regression coefficient data drawn): Can 1 0 (effect). draws: 10 5000 step 5 (1000 iterations). warmup: Ratio warmup iterations. 1/10 9/10 step 0.1 (9 iterations). generated 3 datasets combination characteristics, resulting total 2 * 2 * 8 * 40 * 9 * 3 = 34560 Bayesian frequentist models. code used generation avaible (please note takes usually several days/weeks complete).","code":"df <- read.csv(\"https://raw.github.com/easystats/circus/master/data/bayesSim_study2.csv\")"},{"path":[]},{"path":"https://easystats.github.io/bayestestR/articles/web_only/indicesEstimationComparison.html","id":"sensitivity-to-number-of-iterations","dir":"Articles > Web_only","previous_headings":"Effect Point-Estimates in the Bayesian Framework > Experiment 2: Relationship with Sampling Characteristics > Results","what":"Sensitivity to number of iterations","title":"In-Depth 1: Comparison of Point-Estimates","text":"","code":"dat <- df dat <- data_select(dat, select = c(\"iterations\", \"true_effect\", \"outcome_type\", \"beta\", \"Median\", \"Mean\", \"MAP\")) dat <- reshape_longer(   dat,   select = -c(\"iterations\", \"true_effect\", \"outcome_type\"),   names_to = \"estimate\",   values_to = \"value\" ) dat$temp <- as.factor(cut(dat$iterations, 5, labels = FALSE))  tmp <- lapply(split(dat, dat$temp), function(x) {   x$iterations_group <- rep(round(mean(x$iterations), 1), times = nrow(x))   return(x) })  dat <- do.call(rbind, tmp) dat <- data_filter(dat, value < 6)  ggplot(dat, aes(x = iterations_group, y = value, fill = estimate, group = interaction(estimate, iterations_group))) +   geom_boxplot(outlier.shape = NA) +   theme_classic() +   scale_fill_manual(     values = c(\"beta\" = \"#607D8B\", \"MAP\" = \"#795548\", \"Mean\" = \"#FF9800\", \"Median\" = \"#FFEB3B\"),     name = \"Index\"   ) +   ylab(\"Point-estimate of the true value 0\\n\") +   xlab(\"\\nNumber of Iterations\") +   facet_wrap(~ outcome_type * true_effect, scales = \"free\")"},{"path":"https://easystats.github.io/bayestestR/articles/web_only/indicesEstimationComparison.html","id":"sensitivity-to-warmup-ratio","dir":"Articles > Web_only","previous_headings":"Effect Point-Estimates in the Bayesian Framework > Experiment 2: Relationship with Sampling Characteristics > Results","what":"Sensitivity to warmup ratio","title":"In-Depth 1: Comparison of Point-Estimates","text":"","code":"dat <- df dat$warmup <- dat$warmup / dat$iterations dat <- data_select(dat, select = c(\"warmup\", \"true_effect\", \"outcome_type\", \"beta\", \"Median\", \"Mean\", \"MAP\")) dat <- reshape_longer(   dat,   select = -c(\"warmup\", \"true_effect\", \"outcome_type\"),   names_to = \"estimate\",   values_to = \"value\" ) dat$temp <- as.factor(cut(dat$warmup, 3, labels = FALSE))  tmp <- lapply(split(dat, dat$temp), function(x) {   x$warmup_group <- rep(round(mean(x$warmup), 1), times = nrow(x))   return(x) })  dat <- do.call(rbind, tmp) dat <- data_filter(dat, value < 6)  ggplot(dat, aes(x = warmup_group, y = value, fill = estimate, group = interaction(estimate, warmup_group))) +   geom_boxplot(outlier.shape = NA) +   theme_classic() +   scale_fill_manual(     values = c(\"beta\" = \"#607D8B\", \"MAP\" = \"#795548\", \"Mean\" = \"#FF9800\", \"Median\" = \"#FFEB3B\"),     name = \"Index\"   ) +   ylab(\"Point-estimate of the true value 0\\n\") +   xlab(\"\\nNumber of Iterations\") +   facet_wrap(~ outcome_type * true_effect, scales = \"free\")"},{"path":"https://easystats.github.io/bayestestR/articles/web_only/indicesEstimationComparison.html","id":"discussion","dir":"Articles > Web_only","previous_headings":"Effect Point-Estimates in the Bayesian Framework","what":"Discussion","title":"In-Depth 1: Comparison of Point-Estimates","text":"Conclusions can found guidelines section article.","code":""},{"path":"https://easystats.github.io/bayestestR/articles/web_only/indicesEstimationComparison.html","id":"suggestions","dir":"Articles > Web_only","previous_headings":"","what":"Suggestions","title":"In-Depth 1: Comparison of Point-Estimates","text":"advice, opinion , encourage let us know opening discussion thread making pull request.","code":""},{"path":"https://easystats.github.io/bayestestR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dominique Makowski. Author, maintainer.            @Dom_Makowski Daniel Lüdecke. Author.            @strengejacke Mattan S. Ben-Shachar. Author.            @mattansb Indrajeet Patil. Author.            @patilindrajeets Michael D. Wilson. Author. Brenton M. Wiernik. Author.            @bmwiernik Paul-Christian Bürkner. Reviewer. Tristan Mahr. Reviewer. Henrik Singmann. Contributor. Quentin F. Gronau. Contributor. Sam Crawley. Contributor.","code":""},{"path":"https://easystats.github.io/bayestestR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Makowski, D., Ben-Shachar, M., & Lüdecke, D. (2019). bayestestR: Describing Effects Uncertainty, Existence Significance within Bayesian Framework. Journal Open Source Software, 4(40), 1541. doi:10.21105/joss.01541","code":"@Article{,   title = {bayestestR: Describing Effects and their Uncertainty, Existence and Significance within the Bayesian Framework.},   author = {Dominique Makowski and Mattan S. Ben-Shachar and Daniel Lüdecke},   journal = {Journal of Open Source Software},   doi = {10.21105/joss.01541},   year = {2019},   number = {40},   volume = {4},   pages = {1541},   url = {https://joss.theoj.org/papers/10.21105/joss.01541}, }"},{"path":"https://easystats.github.io/bayestestR/index.html","id":"bayestestr-","dir":"","previous_headings":"","what":"Understand and Describe Bayesian Models and Posterior Distributions","title":"Understand and Describe Bayesian Models and Posterior Distributions","text":"Become Bayesian master ⚠️ changed default CI width! Please make informed decision set explicitly (ci = 0.89, ci = 0.95 anything else decide) ⚠️ Existing R packages allow users easily fit large variety models extract visualize posterior draws. However, packages return limited set indices (e.g., point-estimates CIs). bayestestR provides comprehensive consistent set functions analyze describe posterior distributions generated variety models objects, including popular modeling packages rstanarm, brms BayesFactor. can reference package documentation follows: Makowski, D., Ben-Shachar, M. S., & Lüdecke, D. (2019). bayestestR: Describing Effects Uncertainty, Existence Significance within Bayesian Framework. Journal Open Source Software, 4(40), 1541. 10.21105/joss.01541 Makowski, D., Ben-Shachar, M. S., Chen, S. H. ., & Lüdecke, D. (2019). Indices Effect Existence Significance Bayesian Framework. Frontiers Psychology 2019;10:2767. 10.3389/fpsyg.2019.02767","code":""},{"path":"https://easystats.github.io/bayestestR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Understand and Describe Bayesian Models and Posterior Distributions","text":"bayestestR package available CRAN, latest development version available R-universe (rOpenSci). downloaded package, can load using:","code":"library(\"bayestestR\")"},{"path":"https://easystats.github.io/bayestestR/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Understand and Describe Bayesian Models and Posterior Distributions","text":"Click buttons access package documentation easystats blog, check-vignettes:","code":""},{"path":"https://easystats.github.io/bayestestR/index.html","id":"tutorials","dir":"","previous_headings":"Documentation","what":"Tutorials","title":"Understand and Describe Bayesian Models and Posterior Distributions","text":"Get Started Bayesian Analysis Example 1: Initiation Bayesian models Example 2: Confirmation Bayesian skills Example 3: Become Bayesian master","code":""},{"path":"https://easystats.github.io/bayestestR/index.html","id":"articles","dir":"","previous_headings":"Documentation","what":"Articles","title":"Understand and Describe Bayesian Models and Posterior Distributions","text":"Credible Intervals (CI) Probability Direction (pd) Region Practical Equivalence (ROPE) Bayes Factors (BF) Comparison Point-Estimates Comparison Indices Effect Existence Reporting Guidelines","code":""},{"path":"https://easystats.github.io/bayestestR/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Understand and Describe Bayesian Models and Posterior Distributions","text":"Bayesian framework, parameters estimated probabilistic fashion distributions. distributions can summarised described reporting four types indices: mean(), median() map_estimate() estimation mode. point_estimate() can used get can run directly models. hdi() Highest Density Intervals (HDI), spi() Shortest Probability Intervals (SPI) eti() Equal-Tailed Intervals (ETI). ci() can used general method Confidence Credible Intervals (CI). p_direction() Bayesian equivalent frequentist p-value (see Makowski et al., 2019) p_pointnull() represents odds null hypothesis (h0 = 0) compared likely hypothesis (MAP). bf_pointnull() classic Bayes Factor (BF) assessing likelihood effect presence absence (h0 = 0). p_rope() probability effect falling inside Region Practical Equivalence (ROPE). bf_rope() computes Bayes factor null defined region (ROPE). p_significance() combines region equivalence probability direction. describe_posterior() master function can compute indices cited . describe_posterior() works many objects, including complex brmsfit-models. better readability, output separated model components: bayestestR also includes many features useful Bayesian analsyes. examples:","code":"describe_posterior(   rnorm(10000),   centrality = \"median\",   test = c(\"p_direction\", \"p_significance\") ) ## Summary of Posterior Distribution ##  ## Parameter | Median |        95% CI |     pd |   ps ## -------------------------------------------------- ## Posterior |  -0.02 | [-1.94, 1.92] | 50.66% | 0.47 zinb <- read.csv(\"http://stats.idre.ucla.edu/stat/data/fish.csv\") set.seed(123) model <- brm(   bf(     count ~ child + camper + (1 | persons),      zi ~ child + camper + (1 | persons)   ),   data = zinb,   family = zero_inflated_poisson(),   chains = 1,   iter = 500 )  describe_posterior(   model,   effects = \"all\",   component = \"all\",   test = c(\"p_direction\", \"p_significance\"),   centrality = \"all\" ) ## Summary of Posterior Distribution ##  ## Parameter   | Median |  Mean |   MAP |         95% CI |     pd |   ps |  Rhat |    ESS ## -------------------------------------------------------------------------------------- ## (Intercept) |   0.96 |  0.96 |  0.96 | [-0.81,  2.51] | 90.00% | 0.88 | 1.011 | 110.00 ## child       |  -1.16 | -1.16 | -1.16 | [-1.36, -0.94] |   100% | 1.00 | 0.996 | 278.00 ## camper      |   0.73 |  0.72 |  0.73 | [ 0.54,  0.91] |   100% | 1.00 | 0.996 | 271.00 ##  ## # Fixed effects (zero-inflated) ##  ## Parameter   | Median |  Mean |   MAP |         95% CI |     pd |   ps |  Rhat |    ESS ## -------------------------------------------------------------------------------------- ## (Intercept) |  -0.48 | -0.51 | -0.22 | [-2.03,  0.89] | 78.00% | 0.73 | 0.997 | 138.00 ## child       |   1.85 |  1.86 |  1.81 | [ 1.19,  2.54] |   100% | 1.00 | 0.996 | 303.00 ## camper      |  -0.88 | -0.86 | -0.99 | [-1.61, -0.07] | 98.40% | 0.96 | 0.996 | 292.00 ##  ## # Random effects (conditional) Intercept: persons ##  ## Parameter |    Median |  Mean |   MAP |         95% CI |     pd |   ps |  Rhat |    ESS ## --------------------------------------------------------------------------------------- ## persons.1 |     -0.99 | -1.01 | -0.84 | [-2.68,  0.80] | 92.00% | 0.90 | 1.007 | 106.00 ## persons.2 | -4.65e-03 | -0.04 |  0.03 | [-1.63,  1.66] | 50.00% | 0.45 | 1.013 | 109.00 ## persons.3 |      0.69 |  0.66 |  0.69 | [-0.95,  2.34] | 79.60% | 0.78 | 1.010 | 114.00 ## persons.4 |      1.57 |  1.56 |  1.56 | [-0.05,  3.29] | 96.80% | 0.96 | 1.009 | 114.00 ##  ## # Random effects (zero-inflated) Intercept: persons ##  ## Parameter | Median |  Mean |   MAP |         95% CI |     pd |   ps |  Rhat |    ESS ## ------------------------------------------------------------------------------------ ## persons.1 |   1.10 |  1.11 |  1.08 | [-0.23,  2.72] | 94.80% | 0.93 | 0.997 | 166.00 ## persons.2 |   0.18 |  0.18 |  0.22 | [-0.94,  1.58] | 63.20% | 0.54 | 0.996 | 154.00 ## persons.3 |  -0.30 | -0.31 | -0.54 | [-1.79,  1.02] | 64.00% | 0.59 | 0.997 | 154.00 ## persons.4 |  -1.45 | -1.46 | -1.44 | [-2.90, -0.10] | 98.00% | 0.97 | 1.000 | 189.00 ##  ## # Random effects (conditional) SD/Cor: persons ##  ## Parameter   | Median | Mean |  MAP |         95% CI |   pd |   ps |  Rhat |    ESS ## ---------------------------------------------------------------------------------- ## (Intercept) |   1.42 | 1.58 | 1.07 | [ 0.71,  3.58] | 100% | 1.00 | 1.010 | 126.00 ##  ## # Random effects (zero-inflated) SD/Cor: persons ##  ## Parameter   | Median | Mean |  MAP |         95% CI |   pd |   ps |  Rhat |    ESS ## ---------------------------------------------------------------------------------- ## (Intercept) |   1.30 | 1.49 | 0.99 | [ 0.63,  3.41] | 100% | 1.00 | 0.996 | 129.00"},{"path":"https://easystats.github.io/bayestestR/index.html","id":"point-estimates","dir":"","previous_headings":"","what":"Point-estimates","title":"Understand and Describe Bayesian Models and Posterior Distributions","text":"easystats packages, plot() methods available see package many functions:  median mean available base R functions, map_estimate() bayestestR can used directly find Highest Maximum Posteriori (MAP) estimate posterior, .e., value associated highest probability density (“peak” posterior distribution). words, estimation mode continuous parameters.","code":"library(bayestestR)  posterior <- distribution_gamma(10000, 1.5)  # Generate a skewed distribution centrality <- point_estimate(posterior)  # Get indices of centrality centrality ## Point Estimate ##  ## Median | Mean |  MAP ## -------------------- ## 1.18   | 1.50 | 0.51"},{"path":"https://easystats.github.io/bayestestR/index.html","id":"uncertainty-ci","dir":"","previous_headings":"","what":"Uncertainty (CI)","title":"Understand and Describe Bayesian Models and Posterior Distributions","text":"hdi() computes Highest Density Interval (HDI) posterior distribution, .e., interval contains points within interval higher probability density points outside interval. HDI can used context Bayesian posterior characterization Credible Interval (CI). Unlike equal-tailed intervals (see eti()) typically exclude 2.5% tail distribution, HDI equal-tailed therefore always includes mode(s) posterior distributions.","code":"posterior <- distribution_chisquared(10000, 4)  hdi(posterior, ci = .89) ## 89% HDI: [0.18, 7.63]  eti(posterior, ci = .89) ## 89% ETI: [0.75, 9.25]"},{"path":[]},{"path":"https://easystats.github.io/bayestestR/index.html","id":"probability-of-direction-pd","dir":"","previous_headings":"Existence and Significance Testing","what":"Probability of Direction (pd)","title":"Understand and Describe Bayesian Models and Posterior Distributions","text":"p_direction() computes Probability Direction (pd, also known Maximum Probability Effect - MPE). varies 50% 100% (.e., 0.5 1) can interpreted probability (expressed percentage) parameter (described posterior distribution) strictly positive negative (whichever probable). mathematically defined proportion posterior distribution median’s sign. Although differently expressed, index fairly similar (.e., strongly correlated) frequentist p-value. Relationship p-value: cases, seems pd corresponds frequentist one-sided p-value formula p-value = (1-pd/100) two-sided p-value (commonly reported) formula p-value = 2*(1-pd/100). Thus, pd 95%, 97.5% 99.5% 99.95% corresponds approximately two-sided p-value respectively .1, .05, .01 .001. See reporting guidelines.","code":"posterior <- distribution_normal(10000, 0.4, 0.2) p_direction(posterior) ## Probability of Direction: 0.98"},{"path":"https://easystats.github.io/bayestestR/index.html","id":"rope","dir":"","previous_headings":"Existence and Significance Testing","what":"ROPE","title":"Understand and Describe Bayesian Models and Posterior Distributions","text":"rope() computes proportion (percentage) HDI (default 89% HDI) posterior distribution lies within region practical equivalence. Statistically, probability posterior distribution different 0 make much sense (probability different single point infinite). Therefore, idea underlining ROPE let user define area around null value enclosing values equivalent null value practical purposes Kruschke (2018). Kruschke suggests null value set, default, -0.1 0.1 range standardized parameter (negligible effect size according Cohen, 1988). generalized: instance, linear models, ROPE set 0 +/- .1 * sd(y). ROPE range can automatically computed models using rope_range function. Kruschke suggests using proportion 95% (90%, considered stable) HDI falls within ROPE index “null-hypothesis” testing (understood Bayesian framework, see equivalence_test).","code":"posterior <- distribution_normal(10000, 0.4, 0.2) rope(posterior, range = c(-0.1, 0.1)) ## # Proportion of samples inside the ROPE [-0.10, 0.10]: ##  ## inside ROPE ## ----------- ## 4.40 %"},{"path":"https://easystats.github.io/bayestestR/index.html","id":"bayes-factor","dir":"","previous_headings":"Existence and Significance Testing","what":"Bayes Factor","title":"Understand and Describe Bayesian Models and Posterior Distributions","text":"bayesfactor_parameters() computes Bayes factors null (either point interval), bases prior posterior samples single parameter. Bayes factor indicates degree mass posterior distribution shifted away closer null value(s) (relative prior distribution), thus indicating null value become less likely given observed data. null interval, Bayes factor computed comparing prior posterior odds parameter falling within outside null; null point, Savage-Dickey density ratio computed, also approximation Bayes factor comparing marginal likelihoods model model tested parameter restricted point null (Wagenmakers, Lodewyckx, Kuriyal, & Grasman, 2010).  lollipops represent density point-null prior distribution (blue lollipop dotted distribution) posterior distribution (red lollipop yellow distribution). ratio two - Savage-Dickey ratio - indicates degree mass parameter distribution shifted away closer null. info, see Bayes factors vignette.","code":"prior <- distribution_normal(10000, mean = 0, sd = 1) posterior <- distribution_normal(10000, mean = 1, sd = 0.7)  bayesfactor_parameters(posterior, prior, direction = \"two-sided\", null = 0) ## Bayes Factor (Savage-Dickey density ratio) ##  ## BF   ## ---- ## 1.94 ##  ## * Evidence Against The Null: 0"},{"path":[]},{"path":"https://easystats.github.io/bayestestR/index.html","id":"find-ropes-appropriate-range","dir":"","previous_headings":"Utilities","what":"Find ROPE’s appropriate range","title":"Understand and Describe Bayesian Models and Posterior Distributions","text":"rope_range(): function attempts automatically finding suitable “default” values Region Practical Equivalence (ROPE). Kruschke (2018) suggests null value set, default, range -0.1 0.1 standardized parameter (negligible effect size according Cohen, 1988), can generalised linear models -0.1 * sd(y), 0.1 * sd(y). logistic models, parameters expressed log odds ratio can converted standardized difference formula sqrt(3)/pi, resulting range -0.05 0.05.","code":"rope_range(model)"},{"path":"https://easystats.github.io/bayestestR/index.html","id":"density-estimation","dir":"","previous_headings":"Utilities","what":"Density Estimation","title":"Understand and Describe Bayesian Models and Posterior Distributions","text":"estimate_density(): function wrapper different methods density estimation. default, uses base R density default uses different smoothing bandwidth (\"SJ\") legacy default implemented base R density function (\"nrd0\"). However, Deng & Wickham suggest method = \"KernSmooth\" fastest accurate.","code":""},{"path":"https://easystats.github.io/bayestestR/index.html","id":"perfect-distributions","dir":"","previous_headings":"Utilities","what":"Perfect Distributions","title":"Understand and Describe Bayesian Models and Posterior Distributions","text":"distribution(): Generate sample size n near-perfect distributions.","code":"distribution(n = 10) ##  [1] -1.55 -1.00 -0.66 -0.38 -0.12  0.12  0.38  0.66  1.00  1.55"},{"path":"https://easystats.github.io/bayestestR/index.html","id":"probability-of-a-value","dir":"","previous_headings":"Utilities","what":"Probability of a Value","title":"Understand and Describe Bayesian Models and Posterior Distributions","text":"density_at(): Compute density given point distribution.","code":"density_at(rnorm(1000, 1, 1), 1) ## [1] 0.36"},{"path":"https://easystats.github.io/bayestestR/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Understand and Describe Bayesian Models and Posterior Distributions","text":"Please note bayestestR project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/reference/area_under_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Area under the Curve (AUC) — area_under_curve","title":"Area under the Curve (AUC) — area_under_curve","text":"Based DescTools AUC function. can calculate area curve naive algorithm elaborated spline approach. curve must given vectors xy-coordinates. function can handle unsorted x values (sorting x) ties x values (ignoring duplicates).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/area_under_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Area under the Curve (AUC) — area_under_curve","text":"","code":"area_under_curve(x, y, method = c(\"trapezoid\", \"step\", \"spline\"), ...)  auc(x, y, method = c(\"trapezoid\", \"step\", \"spline\"), ...)"},{"path":"https://easystats.github.io/bayestestR/reference/area_under_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Area under the Curve (AUC) — area_under_curve","text":"x Vector x values. y Vector y values. method Method compute Area Curve (AUC). Can \"trapezoid\" (default), \"step\" \"spline\". \"trapezoid\", curve formed connecting points direct line (composite trapezoid rule). \"step\" chosen stepwise connection two points used. calculating area spline interpolation splinefun function used combination integrate. ... Arguments passed methods.","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/reference/area_under_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Area under the Curve (AUC) — area_under_curve","text":"","code":"library(bayestestR) posterior <- distribution_normal(1000)  dens <- estimate_density(posterior) dens <- dens[dens$x > 0, ] x <- dens$x y <- dens$y  area_under_curve(x, y, method = \"trapezoid\") #> [1] 0.498307 area_under_curve(x, y, method = \"step\") #> [1] 0.499534 area_under_curve(x, y, method = \"spline\") #> [1] 0.498307"},{"path":"https://easystats.github.io/bayestestR/reference/as.data.frame.density.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to a Data Frame — as.data.frame.density","title":"Coerce to a Data Frame — as.data.frame.density","text":"Coerce Data Frame","code":""},{"path":"https://easystats.github.io/bayestestR/reference/as.data.frame.density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to a Data Frame — as.data.frame.density","text":"","code":"# S3 method for density as.data.frame(x, ...)"},{"path":"https://easystats.github.io/bayestestR/reference/as.data.frame.density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to a Data Frame — as.data.frame.density","text":"x R object. ... additional arguments passed methods.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/as.numeric.p_direction.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to Numeric — as.numeric.map_estimate","title":"Convert to Numeric — as.numeric.map_estimate","text":"Convert Numeric","code":""},{"path":"https://easystats.github.io/bayestestR/reference/as.numeric.p_direction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to Numeric — as.numeric.map_estimate","text":"","code":"# S3 method for map_estimate as.numeric(x, ...)  # S3 method for p_direction as.numeric(x, ...)  # S3 method for p_map as.numeric(x, ...)  # S3 method for p_significance as.numeric(x, ...)"},{"path":"https://easystats.github.io/bayestestR/reference/as.numeric.p_direction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to Numeric — as.numeric.map_estimate","text":"x object coerced tested. ... arguments passed methods.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayes Factors (BF) — bayesfactor","title":"Bayes Factors (BF) — bayesfactor","text":"function compte Bayes factors (BFs) appropriate input. vectors single models, compute BFs single parameters(), hypothesis specified, BFs restricted models(). multiple models, return BF corresponding comparison models() model comparison passed, compute inclusion BF().  complete overview functions, read Bayes factor vignette.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayes Factors (BF) — bayesfactor","text":"","code":"bayesfactor(   ...,   prior = NULL,   direction = \"two-sided\",   null = 0,   hypothesis = NULL,   effects = c(\"fixed\", \"random\", \"all\"),   verbose = TRUE,   denominator = 1,   match_models = FALSE,   prior_odds = NULL )"},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayes Factors (BF) — bayesfactor","text":"... numeric vector, model object(s), output bayesfactor_models. prior object representing prior distribution (see 'Details'). direction Test type (see 'Details'). One 0, \"two-sided\" (default, two tailed), -1, \"left\" (left tailed) 1, \"right\" (right tailed). null Value null, either scalar (point-null) range (interval-null). hypothesis character vector specifying restrictions logical conditions (see examples ). effects results fixed effects, random effects returned? applies mixed models. May abbreviated. verbose Toggle warnings. denominator Either integer indicating models use denominator, model used denominator. Ignored BFBayesFactor. match_models See details. prior_odds Optional vector prior odds models. See BayesFactor::priorOdds<-.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayes Factors (BF) — bayesfactor","text":"type Bayes factor, depending input. See bayesfactor_parameters(), bayesfactor_models() bayesfactor_inclusion()","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Bayes Factors (BF) — bayesfactor","text":"also plot()-method implemented see-package.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayes Factors (BF) — bayesfactor","text":"","code":"library(bayestestR)  if (require(\"logspline\")) {   prior <- distribution_normal(1000, mean = 0, sd = 1)   posterior <- distribution_normal(1000, mean = .5, sd = .3)    bayesfactor(posterior, prior = prior) } #> Loading required package: logspline #> Warning: Bayes factors might not be precise. #> For precise Bayes factors, sampling at least 40,000 posterior samples is recommended. #> Bayes Factor (Savage-Dickey density ratio) #>  #> BF   #> ---- #> 1.21 #>  #> * Evidence Against The Null: 0 if (FALSE) { # rstanarm models # --------------- if (require(\"rstanarm\")) {   model <- stan_lmer(extra ~ group + (1 | ID), data = sleep)   bayesfactor(model) } }  if (require(\"logspline\")) {   # Frequentist models   # ---------------   m0 <- lm(extra ~ 1, data = sleep)   m1 <- lm(extra ~ group, data = sleep)   m2 <- lm(extra ~ group + ID, data = sleep)    comparison <- bayesfactor(m0, m1, m2)   comparison    bayesfactor(comparison) } #> Inclusion Bayes Factors (Model Averaged) #>  #>       P(prior) P(posterior) Inclusion BF #> group     0.67         1.00     5.61e+03 #> ID        0.33         1.00     9.77e+03 #>  #> * Compared among: all models #> *    Priors odds: uniform-equal"},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_inclusion.html","id":null,"dir":"Reference","previous_headings":"","what":"Inclusion Bayes Factors for testing predictors across Bayesian models — bayesfactor_inclusion","title":"Inclusion Bayes Factors for testing predictors across Bayesian models — bayesfactor_inclusion","text":"bf_* function alias main function.  info, see Bayes factors vignette.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_inclusion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inclusion Bayes Factors for testing predictors across Bayesian models — bayesfactor_inclusion","text":"","code":"bayesfactor_inclusion(models, match_models = FALSE, prior_odds = NULL, ...)  bf_inclusion(models, match_models = FALSE, prior_odds = NULL, ...)"},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_inclusion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inclusion Bayes Factors for testing predictors across Bayesian models — bayesfactor_inclusion","text":"models object class bayesfactor_models() BFBayesFactor. match_models See details. prior_odds Optional vector prior odds models. See BayesFactor::priorOdds<-. ... Arguments passed methods.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_inclusion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inclusion Bayes Factors for testing predictors across Bayesian models — bayesfactor_inclusion","text":"data frame containing prior posterior probabilities, log(BF) effect (Use .numeric() extract non-log Bayes factors; see examples).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_inclusion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inclusion Bayes Factors for testing predictors across Bayesian models — bayesfactor_inclusion","text":"Inclusion Bayes factors answer question: observed data probable models particular effect, models without particular effect? words, average - models effect \\(X\\) likely produced observed data models without effect \\(X\\)?","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_inclusion.html","id":"match-models","dir":"Reference","previous_headings":"","what":"Match Models","title":"Inclusion Bayes Factors for testing predictors across Bayesian models — bayesfactor_inclusion","text":"match_models=FALSE (default), Inclusion BFs computed comparing models term models without term. TRUE, comparison restricted models (1) include interactions term interest; (2) interaction terms, averaging done across models containe main effect terms interaction term comprised.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_inclusion.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Inclusion Bayes Factors for testing predictors across Bayesian models — bayesfactor_inclusion","text":"Random effects lmer style converted interaction terms: .e., (X|G) become terms 1:G X:G.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_inclusion.html","id":"interpreting-bayes-factors","dir":"Reference","previous_headings":"","what":"Interpreting Bayes Factors","title":"Inclusion Bayes Factors for testing predictors across Bayesian models — bayesfactor_inclusion","text":"Bayes factor greater 1 can interpreted evidence null, one convention Bayes factor greater 3 can considered \"substantial\" evidence null (vice versa, Bayes factor smaller 1/3 indicates substantial evidence favor null-model) (Wetzels et al. 2011).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_inclusion.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Inclusion Bayes Factors for testing predictors across Bayesian models — bayesfactor_inclusion","text":"Hinne, M., Gronau, Q. F., van den Bergh, D., Wagenmakers, E. (2019, March 25). conceptual introduction Bayesian Model Averaging. doi:10.31234/osf.io/wgb64 Clyde, M. ., Ghosh, J., & Littman, M. L. (2011). Bayesian adaptive sampling variable selection model averaging. Journal Computational Graphical Statistics, 20(1), 80-101. Mathot, S. (2017). Bayes like Baws: Interpreting Bayesian Repeated Measures JASP Blog post.","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_inclusion.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Inclusion Bayes Factors for testing predictors across Bayesian models — bayesfactor_inclusion","text":"Mattan S. Ben-Shachar","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_inclusion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inclusion Bayes Factors for testing predictors across Bayesian models — bayesfactor_inclusion","text":"","code":"library(bayestestR)  # Using bayesfactor_models: # ------------------------------ mo0 <- lm(Sepal.Length ~ 1, data = iris) mo1 <- lm(Sepal.Length ~ Species, data = iris) mo2 <- lm(Sepal.Length ~ Species + Petal.Length, data = iris) mo3 <- lm(Sepal.Length ~ Species * Petal.Length, data = iris)  BFmodels <- bayesfactor_models(mo1, mo2, mo3, denominator = mo0) (bf_inc <- bayesfactor_inclusion(BFmodels)) #> Inclusion Bayes Factors (Model Averaged) #>  #>                      P(prior) P(posterior) Inclusion BF #> Species                  0.75         1.00     2.02e+55 #> Petal.Length             0.50         1.00     3.58e+26 #> Petal.Length:Species     0.25         0.04        0.113 #>  #> * Compared among: all models #> *    Priors odds: uniform-equal  as.numeric(bf_inc) #> [1] 2.021143e+55 3.575448e+26 1.131202e-01  if (FALSE) { # BayesFactor # ------------------------------- library(BayesFactor)  BF <- generalTestBF(len ~ supp * dose, ToothGrowth, progress = FALSE)  bayesfactor_inclusion(BF)  # compare only matched models: bayesfactor_inclusion(BF, match_models = TRUE) }"},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayes Factors (BF) for model comparison — bayesfactor_models","title":"Bayes Factors (BF) for model comparison — bayesfactor_models","text":"function computes extracts Bayes factors fitted models.  bf_* function alias main function.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayes Factors (BF) for model comparison — bayesfactor_models","text":"","code":"bayesfactor_models(..., denominator = 1, verbose = TRUE)  bf_models(..., denominator = 1, verbose = TRUE)  # S3 method for default bayesfactor_models(..., denominator = 1, verbose = TRUE)  # S3 method for bayesfactor_models update(object, subset = NULL, reference = NULL, ...)  # S3 method for bayesfactor_models as.matrix(x, ...)"},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayes Factors (BF) for model comparison — bayesfactor_models","text":"... Fitted models (see details), fit data, single BFBayesFactor object (see 'Details'). Ignored .matrix(), update(). following named arguments present, passed insight::get_loglikelihood (see details): estimator (defaults \"ML\") check_response  (defaults FALSE) denominator Either integer indicating models use denominator, model used denominator. Ignored BFBayesFactor. verbose Toggle warnings. object, x bayesfactor_models() object. subset Vector model indices keep remove. reference Index model reference , \"top\" reference best model, \"bottom\" reference worst model.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayes Factors (BF) for model comparison — bayesfactor_models","text":"data frame containing models' formulas (reconstructed fixed random effects) log(BF)s  (Use .numeric() extract non-log Bayes factors; see examples), prints nicely.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_models.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayes Factors (BF) for model comparison — bayesfactor_models","text":"passed models supported insight DV models tested equality (else assumed true), models' terms extracted (allowing follow-analysis bayesfactor_inclusion). brmsfit stanreg models, Bayes factors computed using bridgesampling package. brmsfit models must fitted save_pars = save_pars(= TRUE). stanreg models must fitted defined diagnostic_file. BFBayesFactor, bayesfactor_models() mostly wraparound BayesFactor::extractBF(). model types, Bayes factors computed using BIC approximation. Note BICs extracted using insight::get_loglikelihood, see documentation options dealing transformed responses REML estimation. order correctly precisely estimate Bayes factors, rule thumb 4 P's: Proper Priors Plentiful Posteriors. many? number posterior samples needed testing substantially larger estimation (default 4000 samples may enough many cases). conservative rule thumb obtain 10 times samples required estimation (Gronau, Singmann, & Wagenmakers, 2017). less 40,000 samples detected, bayesfactor_models() gives warning.  See also Bayes factors vignette.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_models.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Bayes Factors (BF) for model comparison — bayesfactor_models","text":"also plot()-method implemented see-package.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_models.html","id":"interpreting-bayes-factors","dir":"Reference","previous_headings":"","what":"Interpreting Bayes Factors","title":"Bayes Factors (BF) for model comparison — bayesfactor_models","text":"Bayes factor greater 1 can interpreted evidence null, one convention Bayes factor greater 3 can considered \"substantial\" evidence null (vice versa, Bayes factor smaller 1/3 indicates substantial evidence favor null-model) (Wetzels et al. 2011).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_models.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayes Factors (BF) for model comparison — bayesfactor_models","text":"Gronau, Q. F., Singmann, H., & Wagenmakers, E. J. (2017). Bridgesampling: R package estimating normalizing constants. arXiv preprint arXiv:1710.08162. Kass, R. E., Raftery, . E. (1995). Bayes Factors. Journal American Statistical Association, 90(430), 773-795. Robert, C. P. (2016). expected demise Bayes factor. Journal Mathematical Psychology, 72, 33–37. Wagenmakers, E. J. (2007). practical solution pervasive problems p values. Psychonomic bulletin & review, 14(5), 779-804. Wetzels, R., Matzke, D., Lee, M. D., Rouder, J. N., Iverson, G. J., Wagenmakers, E.-J. (2011). Statistical Evidence Experimental Psychology: Empirical Comparison Using 855 t Tests. Perspectives Psychological Science, 6(3), 291–298. doi:10.1177/1745691611406923","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_models.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayes Factors (BF) for model comparison — bayesfactor_models","text":"Mattan S. Ben-Shachar","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayes Factors (BF) for model comparison — bayesfactor_models","text":"","code":"# With lm objects: # ---------------- lm1 <- lm(mpg ~ 1, data = mtcars) lm2 <- lm(mpg ~ hp, data = mtcars) lm3 <- lm(mpg ~ hp + drat, data = mtcars) lm4 <- lm(mpg ~ hp * drat, data = mtcars) (BFM <- bayesfactor_models(lm1, lm2, lm3, lm4, denominator = 1)) #> Bayes Factors for Model Comparison #>  #>       Model           BF #> [lm2] hp        4.54e+05 #> [lm3] hp + drat 7.70e+07 #> [lm4] hp * drat 1.59e+07 #>  #> * Against Denominator: [lm1] (Intercept only) #> *   Bayes Factor Type: BIC approximation # bayesfactor_models(lm2, lm3, lm4, denominator = lm1) # same result # bayesfactor_models(lm1, lm2, lm3, lm4, denominator = lm1) # same result   update(BFM, reference = \"bottom\") #> Bayes Factors for Model Comparison #>  #>       Model           BF #> [lm2] hp        4.54e+05 #> [lm3] hp + drat 7.70e+07 #> [lm4] hp * drat 1.59e+07 #>  #> * Against Denominator: [lm1] (Intercept only) #> *   Bayes Factor Type: BIC approximation as.matrix(BFM) #> # Bayes Factors for Model Comparison  #>  #>            Numerator #> Denominator #>  #>           |      [1] |      [2] |      [3] |      [4] #> ---------------------------------------------------------------- #> [1] (Intercept only) |        1 | 4.54e+05 | 7.70e+07 | 1.59e+07 #> [2] hp               | 2.20e-06 |        1 |   169.72 |    35.09 #> [3] hp + drat        | 1.30e-08 |    0.006 |        1 |    0.207 #> [4] hp * drat        | 6.28e-08 |    0.028 |     4.84 |        1 as.numeric(BFM) #> [1]        1.0   453874.3 77029881.3 15925712.4   lm2b <- lm(sqrt(mpg) ~ hp, data = mtcars) # Set check_response = TRUE for transformed responses bayesfactor_models(lm2b, denominator = lm2, check_response = TRUE) #> Bayes Factors for Model Comparison #>  #>        Model   BF #> [lm2b] hp    6.94 #>  #> * Against Denominator: [lm2] hp #> *   Bayes Factor Type: BIC approximation  if (FALSE) { # With lmerMod objects: # --------------------- if (require(\"lme4\")) {   lmer1 <- lmer(Sepal.Length ~ Petal.Length + (1 | Species), data = iris)   lmer2 <- lmer(Sepal.Length ~ Petal.Length + (Petal.Length | Species), data = iris)   lmer3 <- lmer(Sepal.Length ~ Petal.Length + (Petal.Length | Species) + (1 | Petal.Width),     data = iris   )   bayesfactor_models(lmer1, lmer2, lmer3,     denominator = 1,     estimator = \"REML\"   ) }  # rstanarm models # --------------------- # (note that a unique diagnostic_file MUST be specified in order to work) if (require(\"rstanarm\")) {   stan_m0 <- stan_glm(Sepal.Length ~ 1,     data = iris,     family = gaussian(),     diagnostic_file = file.path(tempdir(), \"df0.csv\")   )   stan_m1 <- stan_glm(Sepal.Length ~ Species,     data = iris,     family = gaussian(),     diagnostic_file = file.path(tempdir(), \"df1.csv\")   )   stan_m2 <- stan_glm(Sepal.Length ~ Species + Petal.Length,     data = iris,     family = gaussian(),     diagnostic_file = file.path(tempdir(), \"df2.csv\")   )   bayesfactor_models(stan_m1, stan_m2, denominator = stan_m0) }   # brms models # -------------------- # (note the save_pars MUST be set to save_pars(all = TRUE) in order to work) if (require(\"brms\")) {   brm1 <- brm(Sepal.Length ~ 1, data = iris, save_all_pars = TRUE)   brm2 <- brm(Sepal.Length ~ Species, data = iris, save_all_pars = TRUE)   brm3 <- brm(     Sepal.Length ~ Species + Petal.Length,     data = iris,     save_pars = save_pars(all = TRUE)   )    bayesfactor_models(brm1, brm2, brm3, denominator = 1) }   # BayesFactor # --------------------------- if (require(\"BayesFactor\")) {   data(puzzles)   BF <- anovaBF(RT ~ shape * color + ID,     data = puzzles,     whichRandom = \"ID\", progress = FALSE   )   BF   bayesfactor_models(BF) # basically the same } }"},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayes Factors (BF) for a Single Parameter — bayesfactor_parameters","title":"Bayes Factors (BF) for a Single Parameter — bayesfactor_parameters","text":"method computes Bayes factors null (either point interval), based prior posterior samples single parameter. Bayes factor indicates degree mass posterior distribution shifted away closer null value(s) (relative prior distribution), thus indicating null value become less likely given observed data.  null interval, Bayes factor computed comparing prior posterior odds parameter falling within outside null interval (Morey & Rouder, 2011; Liao et al., 2020); null point, Savage-Dickey density ratio computed, also approximation Bayes factor comparing marginal likelihoods model model tested parameter restricted point null (Wagenmakers et al., 2010; Heck, 2019).  Note logspline package used estimating densities probabilities, must installed function work. bayesfactor_pointnull() bayesfactor_rope() wrappers around bayesfactor_parameters different defaults null tested (point range, respectively). Aliases main functions prefixed bf_*, like bf_parameters() bf_pointnull(). info, particular specifying correct priors factors 2 levels, see Bayes factors vignette.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayes Factors (BF) for a Single Parameter — bayesfactor_parameters","text":"","code":"bayesfactor_parameters(   posterior,   prior = NULL,   direction = \"two-sided\",   null = 0,   verbose = TRUE,   ... )  bayesfactor_pointnull(   posterior,   prior = NULL,   direction = \"two-sided\",   null = 0,   verbose = TRUE,   ... )  bayesfactor_rope(   posterior,   prior = NULL,   direction = \"two-sided\",   null = rope_range(posterior),   verbose = TRUE,   ... )  bf_parameters(   posterior,   prior = NULL,   direction = \"two-sided\",   null = 0,   verbose = TRUE,   ... )  bf_pointnull(   posterior,   prior = NULL,   direction = \"two-sided\",   null = 0,   verbose = TRUE,   ... )  bf_rope(   posterior,   prior = NULL,   direction = \"two-sided\",   null = rope_range(posterior),   verbose = TRUE,   ... )  # S3 method for numeric bayesfactor_parameters(   posterior,   prior = NULL,   direction = \"two-sided\",   null = 0,   verbose = TRUE,   ... )  # S3 method for stanreg bayesfactor_parameters(   posterior,   prior = NULL,   direction = \"two-sided\",   null = 0,   verbose = TRUE,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"location\", \"smooth_terms\", \"sigma\", \"zi\",     \"zero_inflated\", \"all\"),   parameters = NULL,   ... )  # S3 method for brmsfit bayesfactor_parameters(   posterior,   prior = NULL,   direction = \"two-sided\",   null = 0,   verbose = TRUE,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"location\", \"smooth_terms\", \"sigma\", \"zi\",     \"zero_inflated\", \"all\"),   parameters = NULL,   ... )  # S3 method for blavaan bayesfactor_parameters(   posterior,   prior = NULL,   direction = \"two-sided\",   null = 0,   verbose = TRUE,   ... )  # S3 method for data.frame bayesfactor_parameters(   posterior,   prior = NULL,   direction = \"two-sided\",   null = 0,   verbose = TRUE,   ... )"},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayes Factors (BF) for a Single Parameter — bayesfactor_parameters","text":"posterior numerical vector, stanreg / brmsfit object, emmGrid data frame - representing posterior distribution(s) (see 'Details'). prior object representing prior distribution (see 'Details'). direction Test type (see 'Details'). One 0, \"two-sided\" (default, two tailed), -1, \"left\" (left tailed) 1, \"right\" (right tailed). null Value null, either scalar (point-null) range (interval-null). verbose Toggle warnings. ... Arguments passed methods. (Can used pass arguments internal logspline::logspline().) effects results fixed effects, random effects returned? applies mixed models. May abbreviated. component results parameters, parameters conditional model zero-inflated part model returned? May abbreviated. applies brms-models. parameters Regular expression pattern describes parameters returned. Meta-parameters (like lp__ prior_) filtered default, parameters typically appear summary() returned. Use parameters select specific parameters output.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayes Factors (BF) for a Single Parameter — bayesfactor_parameters","text":"data frame containing (log) Bayes factor representing evidence null  (Use .numeric() extract non-log Bayes factors; see examples).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_parameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayes Factors (BF) for a Single Parameter — bayesfactor_parameters","text":"method used compute Bayes factors based prior posterior distributions.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_parameters.html","id":"one-sided-amp-dividing-tests-setting-an-order-restriction-","dir":"Reference","previous_headings":"","what":"One-sided & Dividing Tests (setting an order restriction)","title":"Bayes Factors (BF) for a Single Parameter — bayesfactor_parameters","text":"One sided tests (controlled direction) conducted restricting prior posterior non-null values (\"alternative\") one side null (Morey & Wagenmakers, 2014). example, prior hypothesis parameter positive, alternative restricted region right null (point interval). example, Bayes factor comparing \"null\" 0-0.1 alternative >0.1, set bayesfactor_parameters(null = c(0, 0.1), direction = \">\").  also possible compute Bayes factor dividing hypotheses - , null alternative complementary, opposing one-sided hypotheses (Morey & Wagenmakers, 2014). example, Bayes factor comparing \"null\" <0 alternative >0, set bayesfactor_parameters(null = c(-Inf, 0)).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_parameters.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Bayes Factors (BF) for a Single Parameter — bayesfactor_parameters","text":"also plot()-method implemented see-package.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_parameters.html","id":"setting-the-correct-prior","dir":"Reference","previous_headings":"","what":"Setting the correct prior","title":"Bayes Factors (BF) for a Single Parameter — bayesfactor_parameters","text":"computation Bayes factors, model priors must proper priors (least flat, preferable informative); priors alternative get wider, likelihood null value(s) increases, extreme completely flat priors null infinitely favorable alternative (called Jeffreys-Lindley-Bartlett paradox). Thus, ever try (want) compute Bayes factor informed prior.  (Note default, brms::brm() uses flat priors fixed-effects; See example .)  important provide correct prior meaningful results. posterior numerical vector, prior also numerical vector. posterior data.frame, prior also data.frame, matching column order. posterior stanreg, brmsfit supported Bayesian model: prior can set NULL, case prior samples drawn internally. prior can also model equivalent posterior samples priors . See unupdate(). Note: posterior brmsfit_multiple model, prior must provided. posterior emmGrid / emm_list object: prior also emmGrid / emm_list object equivalent posterior created model priors samples . See unupdate(). prior can also original (posterior) model. , function try update emmGrid / emm_list use unupdate()d prior-model. (done brmsfit models.) Note: emmGrid undergone transformations (\"log\", \"response\", etc.), regriding, prior must emmGrid object, stated .","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_parameters.html","id":"interpreting-bayes-factors","dir":"Reference","previous_headings":"","what":"Interpreting Bayes Factors","title":"Bayes Factors (BF) for a Single Parameter — bayesfactor_parameters","text":"Bayes factor greater 1 can interpreted evidence null, one convention Bayes factor greater 3 can considered \"substantial\" evidence null (vice versa, Bayes factor smaller 1/3 indicates substantial evidence favor null-model) (Wetzels et al. 2011).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_parameters.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayes Factors (BF) for a Single Parameter — bayesfactor_parameters","text":"Wagenmakers, E. J., Lodewyckx, T., Kuriyal, H., Grasman, R. (2010). Bayesian hypothesis testing psychologists: tutorial Savage-Dickey method. Cognitive psychology, 60(3), 158-189. Heck, D. W. (2019). caveat Savage–Dickey density ratio: case computing Bayes factors regression parameters. British Journal Mathematical Statistical Psychology, 72(2), 316-333. Morey, R. D., & Wagenmakers, E. J. (2014). Simple relation Bayesian order-restricted point-null hypothesis tests. Statistics & Probability Letters, 92, 121-124. Morey, R. D., & Rouder, J. N. (2011). Bayes factor approaches testing interval null hypotheses. Psychological methods, 16(4), 406. Liao, J. G., Midya, V., & Berg, . (2020). Connecting contrasting Bayes factor modified ROPE procedure testing interval null hypotheses. American Statistician, 1-19. Wetzels, R., Matzke, D., Lee, M. D., Rouder, J. N., Iverson, G. J., Wagenmakers, E.-J. (2011). Statistical Evidence Experimental Psychology: Empirical Comparison Using 855 t Tests. Perspectives Psychological Science, 6(3), 291–298. doi:10.1177/1745691611406923","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_parameters.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayes Factors (BF) for a Single Parameter — bayesfactor_parameters","text":"Mattan S. Ben-Shachar","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayes Factors (BF) for a Single Parameter — bayesfactor_parameters","text":"","code":"library(bayestestR) if (require(\"logspline\")) {   prior <- distribution_normal(1000, mean = 0, sd = 1)   posterior <- distribution_normal(1000, mean = .5, sd = .3)   (BF_pars <- bayesfactor_parameters(posterior, prior))    as.numeric(BF_pars) } #> Warning: Bayes factors might not be precise. #> For precise Bayes factors, sampling at least 40,000 posterior samples is recommended. #> [1] 1.212843 if (FALSE) { # rstanarm models # --------------- if (require(\"rstanarm\") && require(\"emmeans\") && require(\"logspline\")) {   contrasts(sleep$group) <- contr.orthonorm # see vingette   stan_model <- stan_lmer(extra ~ group + (1 | ID), data = sleep)   bayesfactor_parameters(stan_model)   bayesfactor_parameters(stan_model, null = rope_range(stan_model))    # emmGrid objects   # ---------------   group_diff <- pairs(emmeans(stan_model, ~group))   bayesfactor_parameters(group_diff, prior = stan_model)    # Or   group_diff_prior <- pairs(emmeans(unupdate(stan_model), ~group))   bayesfactor_parameters(group_diff, prior = group_diff_prior) }  # brms models # ----------- if (require(\"brms\")) {   contrasts(sleep$group) <- contr.orthonorm # see vingette   my_custom_priors <-     set_prior(\"student_t(3, 0, 1)\", class = \"b\") +     set_prior(\"student_t(3, 0, 1)\", class = \"sd\", group = \"ID\")    brms_model <- brm(extra ~ group + (1 | ID),     data = sleep,     prior = my_custom_priors   )   bayesfactor_parameters(brms_model) } }"},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_restricted.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayes Factors (BF) for Order Restricted Models — bayesfactor_restricted","title":"Bayes Factors (BF) for Order Restricted Models — bayesfactor_restricted","text":"method computes Bayes factors comparing model order restrictions parameters fully unrestricted model. Note method used confirmatory analyses.  bf_* function alias main function. info, particular specifying correct priors factors 2 levels, see Bayes factors vignette.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_restricted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayes Factors (BF) for Order Restricted Models — bayesfactor_restricted","text":"","code":"bayesfactor_restricted(   posterior,   hypothesis,   prior = NULL,   verbose = TRUE,   ... )  bf_restricted(posterior, hypothesis, prior = NULL, verbose = TRUE, ...)  # S3 method for stanreg bayesfactor_restricted(   posterior,   hypothesis,   prior = NULL,   verbose = TRUE,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\"),   ... )  # S3 method for brmsfit bayesfactor_restricted(   posterior,   hypothesis,   prior = NULL,   verbose = TRUE,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\"),   ... )  # S3 method for blavaan bayesfactor_restricted(   posterior,   hypothesis,   prior = NULL,   verbose = TRUE,   ... )  # S3 method for emmGrid bayesfactor_restricted(   posterior,   hypothesis,   prior = NULL,   verbose = TRUE,   ... )"},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_restricted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayes Factors (BF) for Order Restricted Models — bayesfactor_restricted","text":"posterior stanreg / brmsfit object, emmGrid data frame - representing posterior distribution(s) (see Details). hypothesis character vector specifying restrictions logical conditions (see examples ). prior object representing prior distribution (see Details). verbose Toggle warnings. ... Currently used. effects results fixed effects, random effects returned? applies mixed models. May abbreviated. component results parameters, parameters conditional model zero-inflated part model returned? May abbreviated. applies brms-models.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_restricted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayes Factors (BF) for Order Restricted Models — bayesfactor_restricted","text":"data frame containing (log) Bayes factor representing evidence un-restricted model (Use .numeric() extract non-log Bayes factors; see examples). (bool_results attribute contains results sample, indicating included hypothesized restriction.)","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_restricted.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayes Factors (BF) for Order Restricted Models — bayesfactor_restricted","text":"method used compute Bayes factors order-restricted models vs un-restricted models setting order restriction prior posterior distributions (Morey & Wagenmakers, 2013).  (Though possible use bayesfactor_restricted() test interval restrictions, suitable testing order restrictions; see examples).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_restricted.html","id":"setting-the-correct-prior","dir":"Reference","previous_headings":"","what":"Setting the correct prior","title":"Bayes Factors (BF) for Order Restricted Models — bayesfactor_restricted","text":"computation Bayes factors, model priors must proper priors (least flat, preferable informative); priors alternative get wider, likelihood null value(s) increases, extreme completely flat priors null infinitely favorable alternative (called Jeffreys-Lindley-Bartlett paradox). Thus, ever try (want) compute Bayes factor informed prior.  (Note default, brms::brm() uses flat priors fixed-effects; See example .)  important provide correct prior meaningful results. posterior numerical vector, prior also numerical vector. posterior data.frame, prior also data.frame, matching column order. posterior stanreg, brmsfit supported Bayesian model: prior can set NULL, case prior samples drawn internally. prior can also model equivalent posterior samples priors . See unupdate(). Note: posterior brmsfit_multiple model, prior must provided. posterior emmGrid / emm_list object: prior also emmGrid / emm_list object equivalent posterior created model priors samples . See unupdate(). prior can also original (posterior) model. , function try update emmGrid / emm_list use unupdate()d prior-model. (done brmsfit models.) Note: emmGrid undergone transformations (\"log\", \"response\", etc.), regriding, prior must emmGrid object, stated .","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_restricted.html","id":"interpreting-bayes-factors","dir":"Reference","previous_headings":"","what":"Interpreting Bayes Factors","title":"Bayes Factors (BF) for Order Restricted Models — bayesfactor_restricted","text":"Bayes factor greater 1 can interpreted evidence null, one convention Bayes factor greater 3 can considered \"substantial\" evidence null (vice versa, Bayes factor smaller 1/3 indicates substantial evidence favor null-model) (Wetzels et al. 2011).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_restricted.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayes Factors (BF) for Order Restricted Models — bayesfactor_restricted","text":"Morey, R. D., & Wagenmakers, E. J. (2014). Simple relation Bayesian order-restricted point-null hypothesis tests. Statistics & Probability Letters, 92, 121-124. Morey, R. D., & Rouder, J. N. (2011). Bayes factor approaches testing interval null hypotheses. Psychological methods, 16(4), 406. Morey, R. D. (Jan, 2015). Multiple Comparisons BayesFactor, Part 2 – order restrictions. Retrieved https://richarddmorey.org/category/order-restrictions/.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bayesfactor_restricted.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayes Factors (BF) for Order Restricted Models — bayesfactor_restricted","text":"","code":"set.seed(444) library(bayestestR) prior <- data.frame(   A = rnorm(1000),   B = rnorm(1000),   C = rnorm(1000) )  posterior <- data.frame(   A = rnorm(1000, .4, 0.7),   B = rnorm(1000, -.2, 0.4),   C = rnorm(1000, 0, 0.5) )  hyps <- c(   \"A > B & B > C\",   \"A > B & A > C\",   \"C > A\" )  if (getRversion() > \"3.5.0\") {   (b <- bayesfactor_restricted(posterior, hypothesis = hyps, prior = prior))    as.numeric(b)    if (require(\"see\") && require(\"patchwork\")) {     i <- attr(b, \"bool_results\")[[\"posterior\"]]      see::plots(       plot(estimate_density(posterior)),       # distribution **conditional** on the restrictions       plot(estimate_density(posterior[i[[hyps[1]]], ])) + ggplot2::ggtitle(hyps[1]),       plot(estimate_density(posterior[i[[hyps[2]]], ])) + ggplot2::ggtitle(hyps[2]),       plot(estimate_density(posterior[i[[hyps[3]]], ])) + ggplot2::ggtitle(hyps[3]),       guides = \"collect\"     )   } } #> Loading required package: see #> Loading required package: patchwork   if (FALSE) { # rstanarm models # --------------- if (require(\"rstanarm\") && require(\"emmeans\")) {   fit_stan <- stan_glm(mpg ~ wt + cyl + am,     data = mtcars, refresh = 0   )   hyps <- c(     \"am > 0 & cyl < 0\",     \"cyl < 0\",     \"wt - cyl > 0\"   )   bayesfactor_restricted(fit_stan, hypothesis = hyps)    # emmGrid objects   # ---------------   # replicating http://bayesfactor.blogspot.com/2015/01/multiple-comparisons-with-bayesfactor-2.html   disgust_data <- read.table(url(\"http://www.learnbayes.org/disgust_example.txt\"), header = TRUE)    contrasts(disgust_data$condition) <- contr.orthonorm # see vignette   fit_model <- stan_glm(score ~ condition, data = disgust_data, family = gaussian())    em_condition <- emmeans(fit_model, ~condition)   hyps <- c(\"lemon < control & control < sulfur\")    bayesfactor_restricted(em_condition, prior = fit_model, hypothesis = hyps)   # > # Bayes Factor (Order-Restriction)   # >   # >                          Hypothesis P(Prior) P(Posterior)   BF   # >  lemon < control & control < sulfur     0.17         0.75 4.49   # > ---   # > Bayes factors for the restricted model vs. the un-restricted model. } }"},{"path":"https://easystats.github.io/bayestestR/reference/bci.html","id":null,"dir":"Reference","previous_headings":"","what":"Bias Corrected and Accelerated Interval (BCa) — bci","title":"Bias Corrected and Accelerated Interval (BCa) — bci","text":"Compute Bias Corrected Accelerated Interval (BCa) posterior distributions.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bias Corrected and Accelerated Interval (BCa) — bci","text":"","code":"bci(x, ...)  bcai(x, ...)  # S3 method for numeric bci(x, ci = 0.95, verbose = TRUE, ...)  # S3 method for data.frame bci(x, ci = 0.95, verbose = TRUE, ...)  # S3 method for MCMCglmm bci(x, ci = 0.95, verbose = TRUE, ...)  # S3 method for sim.merMod bci(   x,   ci = 0.95,   effects = c(\"fixed\", \"random\", \"all\"),   parameters = NULL,   verbose = TRUE,   ... )  # S3 method for sim bci(x, ci = 0.95, parameters = NULL, verbose = TRUE, ...)  # S3 method for emmGrid bci(x, ci = 0.95, verbose = TRUE, ...)  # S3 method for stanreg bci(   x,   ci = 0.95,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"location\", \"all\", \"conditional\", \"smooth_terms\", \"sigma\",     \"distributional\", \"auxiliary\"),   parameters = NULL,   verbose = TRUE,   ... )  # S3 method for brmsfit bci(   x,   ci = 0.95,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\"),   parameters = NULL,   verbose = TRUE,   ... )  # S3 method for BFBayesFactor bci(x, ci = 0.95, verbose = TRUE, ...)"},{"path":"https://easystats.github.io/bayestestR/reference/bci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bias Corrected and Accelerated Interval (BCa) — bci","text":"x Vector representing posterior distribution, data frame vectors. Can also Bayesian model. bayestestR supports wide range models (see, example, methods(\"hdi\")) documented 'Usage' section, methods classes mostly resemble arguments .numeric .data.framemethods. ... Currently used. ci Value vector probability (credible) interval - CI (0 1) estimated. Default .95 (95%). verbose Toggle warnings. effects results fixed effects, random effects returned? applies mixed models. May abbreviated. parameters Regular expression pattern describes parameters returned. Meta-parameters (like lp__ prior_) filtered default, parameters typically appear summary() returned. Use parameters select specific parameters output. component results parameters, parameters conditional model zero-inflated part model returned? May abbreviated. applies brms-models.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bias Corrected and Accelerated Interval (BCa) — bci","text":"data frame following columns: Parameter model parameter(s), x model-object. x vector, column missing. CI probability credible interval. CI_low, CI_high lower upper credible interval limits parameters.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bci.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bias Corrected and Accelerated Interval (BCa) — bci","text":"Unlike equal-tailed intervals (see eti()) typically exclude 2.5% tail distribution always include median, HDI equal-tailed therefore always includes mode(s) posterior distributions. can useful better represent credibility mass distribution, HDI also limitations. See spi() details.  95% 89% Credible Intervals (CI) two reasonable ranges characterize uncertainty related estimation (see discussion differences two values).  89% intervals (ci = 0.89) deemed stable , instance, 95% intervals (Kruschke, 2014). effective sample size least 10.000 recommended one wants estimate 95% intervals high precision (Kruschke, 2014, p. 183ff). Unfortunately, default number posterior samples Bayes packages (e.g., rstanarm brms) 4.000 (thus, might want increase fitting model). Moreover, 89 indicates arbitrariness interval limits - remarkable property highest prime number exceed already unstable 95% threshold (McElreath, 2015).  However, 95% advantages . instance, shares (case normal posterior distribution) intuitive relationship standard deviation conveys accurate image (artificial) bounds distribution. Also, wider, makes analyses conservative (.e., probability covering 0 larger 95% CI lower ranges 89%), good thing context reproducibility crisis.  95% equal-tailed interval (ETI) 2.5% distribution either side limits. indicates 2.5th percentile 97.5h percentile. symmetric distributions, two methods computing credible intervals, ETI HDI, return similar results.  case skewed distributions. Indeed, possible parameter values ETI lower credibility (less probable) parameter values outside ETI. property seems undesirable summary credible values distribution.  hand, ETI range change transformations applied distribution (instance, log odds scale probabilities): lower higher bounds transformed distribution correspond transformed lower higher bounds original distribution. contrary, applying transformations distribution change resulting HDI.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bci.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bias Corrected and Accelerated Interval (BCa) — bci","text":"DiCiccio, T. J. B. Efron. (1996). Bootstrap Confidence Intervals. Statistical Science. 11(3): 189–212. 10.1214/ss/1032280214","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/reference/bci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bias Corrected and Accelerated Interval (BCa) — bci","text":"","code":"posterior <- rnorm(1000) bci(posterior) #> 95% ETI: [-1.92, 2.10] bci(posterior, ci = c(.80, .89, .95)) #> Equal-Tailed Interval #>  #> 80% ETI       |       89% ETI |       95% ETI #> --------------------------------------------- #> [-1.22, 1.35] | [-1.50, 1.63] | [-1.92, 2.10]"},{"path":"https://easystats.github.io/bayestestR/reference/bic_to_bf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert BIC indices to Bayes Factors via the BIC-approximation method. — bic_to_bf","title":"Convert BIC indices to Bayes Factors via the BIC-approximation method. — bic_to_bf","text":"difference two Bayesian information criterion (BIC) indices two models can used approximate Bayes factors via:  $$BF_{10} = e^{(BIC_0 - BIC_1)/2}$$","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bic_to_bf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert BIC indices to Bayes Factors via the BIC-approximation method. — bic_to_bf","text":"","code":"bic_to_bf(bic, denominator, log = FALSE)"},{"path":"https://easystats.github.io/bayestestR/reference/bic_to_bf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert BIC indices to Bayes Factors via the BIC-approximation method. — bic_to_bf","text":"bic vector BIC values. denominator BIC value use denominator (test ). log TRUE, return log(BF).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bic_to_bf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert BIC indices to Bayes Factors via the BIC-approximation method. — bic_to_bf","text":"Bayes Factors corresponding BIC values denominator.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bic_to_bf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert BIC indices to Bayes Factors via the BIC-approximation method. — bic_to_bf","text":"Wagenmakers, E. J. (2007). practical solution pervasive problems p values. Psychonomic bulletin & review, 14(5), 779-804","code":""},{"path":"https://easystats.github.io/bayestestR/reference/bic_to_bf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert BIC indices to Bayes Factors via the BIC-approximation method. — bic_to_bf","text":"","code":"bic1 <- BIC(lm(Sepal.Length ~ 1, data = iris)) bic2 <- BIC(lm(Sepal.Length ~ Species, data = iris)) bic3 <- BIC(lm(Sepal.Length ~ Species + Petal.Length, data = iris)) bic4 <- BIC(lm(Sepal.Length ~ Species * Petal.Length, data = iris))  bic_to_bf(c(bic1, bic2, bic3, bic4), denominator = bic1) #> [1] 1.000000e+00 1.695852e+29 5.843105e+55 2.203243e+54"},{"path":"https://easystats.github.io/bayestestR/reference/check_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Prior is Informative — check_prior","title":"Check if Prior is Informative — check_prior","text":"Performs simple test check whether prior informative posterior. idea, accompanying heuristics, discussed blogpost.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/check_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Prior is Informative — check_prior","text":"","code":"check_prior(model, method = \"gelman\", simulate_priors = TRUE, ...)"},{"path":"https://easystats.github.io/bayestestR/reference/check_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if Prior is Informative — check_prior","text":"model stanreg, stanfit, brmsfit, blavaan, MCMCglmm object. method Can \"gelman\" \"lakeland\". \"gelman\" method, SD posterior 0.1 times SD prior, prior considered informative. \"lakeland\" method, prior considered informative posterior falls within 95% HDI prior. simulate_priors prior distributions simulated using simulate_prior() (default; faster) sampled via unupdate() (slower, accurate). ... Currently used.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/check_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Prior is Informative — check_prior","text":"data frame two columns: parameter names quality prior (might \"informative\", \"uninformative\") \"determinable\" prior distribution determined).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/check_prior.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Check if Prior is Informative — check_prior","text":"https://statmodeling.stat.columbia.edu/2019/08/10/","code":""},{"path":"https://easystats.github.io/bayestestR/reference/check_prior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if Prior is Informative — check_prior","text":"","code":"if (FALSE) { library(bayestestR) if (require(\"rstanarm\")) {   model <- stan_glm(mpg ~ wt + am, data = mtcars, chains = 1, refresh = 0)   check_prior(model, method = \"gelman\")   check_prior(model, method = \"lakeland\")    # An extreme example where both methods diverge:   model <- stan_glm(mpg ~ wt,     data = mtcars[1:3, ],     prior = normal(-3.3, 1, FALSE),     prior_intercept = normal(0, 1000, FALSE),     refresh = 0   )   check_prior(model, method = \"gelman\")   check_prior(model, method = \"lakeland\")   plot(si(model)) # can provide visual confirmation to the Lakeland method } }"},{"path":"https://easystats.github.io/bayestestR/reference/ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence/Credible/Compatibility Interval (CI) — ci","title":"Confidence/Credible/Compatibility Interval (CI) — ci","text":"Compute Confidence/Credible/Compatibility Intervals (CI) Support Intervals (SI) Bayesian frequentist models. Documentation accessible :","code":""},{"path":"https://easystats.github.io/bayestestR/reference/ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence/Credible/Compatibility Interval (CI) — ci","text":"","code":"ci(x, ...)  # S3 method for numeric ci(x, ci = 0.95, method = \"ETI\", verbose = TRUE, BF = 1, ...)  # S3 method for data.frame ci(x, ci = 0.95, method = \"ETI\", verbose = TRUE, BF = 1, ...)  # S3 method for sim.merMod ci(   x,   ci = 0.95,   method = \"ETI\",   effects = c(\"fixed\", \"random\", \"all\"),   parameters = NULL,   verbose = TRUE,   ... )  # S3 method for sim ci(x, ci = 0.95, method = \"ETI\", parameters = NULL, verbose = TRUE, ...)  # S3 method for stanreg ci(   x,   ci = 0.95,   method = \"ETI\",   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"location\", \"all\", \"conditional\", \"smooth_terms\", \"sigma\",     \"distributional\", \"auxiliary\"),   parameters = NULL,   verbose = TRUE,   BF = 1,   ... )  # S3 method for brmsfit ci(   x,   ci = 0.95,   method = \"ETI\",   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\"),   parameters = NULL,   verbose = TRUE,   BF = 1,   ... )  # S3 method for BFBayesFactor ci(x, ci = 0.95, method = \"ETI\", verbose = TRUE, BF = 1, ...)  # S3 method for MCMCglmm ci(x, ci = 0.95, method = \"ETI\", verbose = TRUE, ...)"},{"path":"https://easystats.github.io/bayestestR/reference/ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence/Credible/Compatibility Interval (CI) — ci","text":"x stanreg brmsfit model, vector representing posterior distribution. ... Currently used. ci Value vector probability CI (0 1) estimated. Default .95 (95%). method Can 'ETI' (default), 'HDI', 'BCI', 'SPI' 'SI'. verbose Toggle warnings. BF amount support required included support interval. effects results fixed effects, random effects returned? applies mixed models. May abbreviated. parameters Regular expression pattern describes parameters returned. Meta-parameters (like lp__ prior_) filtered default, parameters typically appear summary() returned. Use parameters select specific parameters output. component results parameters, parameters conditional model zero-inflated part model returned? May abbreviated. applies brms-models.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence/Credible/Compatibility Interval (CI) — ci","text":"data frame following columns: Parameter model parameter(s), x model-object. x vector, column missing. CI probability credible interval. CI_low, CI_high lower upper credible interval limits parameters.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/ci.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence/Credible/Compatibility Interval (CI) — ci","text":"Bayesian models Frequentist models","code":""},{"path":"https://easystats.github.io/bayestestR/reference/ci.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Confidence/Credible/Compatibility Interval (CI) — ci","text":"comes interpretation, recommend thinking CI terms \"uncertainty\" \"compatibility\" interval, latter defined “Given value interval background assumptions, data seem surprising” (Gelman & Greenland 2019).  also plot()-method implemented see-package.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/ci.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence/Credible/Compatibility Interval (CI) — ci","text":"Gelman , Greenland S. confidence intervals better termed \"uncertainty intervals\"? BMJ 2019;l5381. 10.1136/bmj.l5381","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/reference/ci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence/Credible/Compatibility Interval (CI) — ci","text":"","code":"library(bayestestR)  posterior <- rnorm(1000) ci(posterior, method = \"ETI\") #> 95% ETI: [-2.06, 2.04] ci(posterior, method = \"HDI\") #> 95% HDI: [-1.90, 2.14]  df <- data.frame(replicate(4, rnorm(100))) ci(df, method = \"ETI\", ci = c(.80, .89, .95)) #> Equal-Tailed Interval #>  #> Parameter |       80% ETI |       89% ETI |       95% ETI #> --------------------------------------------------------- #> X1        | [-1.37, 1.29] | [-1.62, 1.55] | [-2.15, 1.84] #> X2        | [-1.03, 1.18] | [-1.34, 1.40] | [-1.61, 1.94] #> X3        | [-1.41, 1.40] | [-1.69, 1.59] | [-1.80, 1.91] #> X4        | [-1.23, 1.21] | [-1.64, 1.49] | [-2.43, 1.85] ci(df, method = \"HDI\", ci = c(.80, .89, .95)) #> Highest Density Interval #>  #> Parameter |       80% HDI |       89% HDI |       95% HDI #> --------------------------------------------------------- #> X1        | [-1.04, 1.56] | [-1.48, 1.64] | [-1.79, 2.32] #> X2        | [-1.13, 1.04] | [-1.28, 1.53] | [-1.64, 1.96] #> X3        | [-1.87, 0.70] | [-1.74, 1.51] | [-1.87, 1.66] #> X4        | [-1.04, 1.39] | [-1.53, 1.65] | [-2.11, 1.97] if (FALSE) { if (require(\"rstanarm\")) {   model <- stan_glm(mpg ~ wt, data = mtcars, chains = 2, iter = 200, refresh = 0)   ci(model, method = \"ETI\", ci = c(.80, .89))   ci(model, method = \"HDI\", ci = c(.80, .89))   ci(model, method = \"SI\") }  if (require(\"brms\")) {   model <- brms::brm(mpg ~ wt + cyl, data = mtcars)   ci(model, method = \"ETI\")   ci(model, method = \"HDI\")   ci(model, method = \"SI\") }  if (require(\"BayesFactor\")) {   bf <- ttestBF(x = rnorm(100, 1, 1))   ci(bf, method = \"ETI\")   ci(bf, method = \"HDI\") }  if (require(\"emmeans\")) {   model <- emtrends(model, ~1, \"wt\")   ci(model, method = \"ETI\")   ci(model, method = \"HDI\")   ci(model, method = \"SI\") } }"},{"path":"https://easystats.github.io/bayestestR/reference/contr.orthonorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Orthonormal Contrast Matrices for Bayesian Estimation — contr.orthonorm","title":"Orthonormal Contrast Matrices for Bayesian Estimation — contr.orthonorm","text":"Returns design model matrix orthonormal contrasts marginal prior effects identical (see 'Details'). Implementation Singmann & Gronau's bfrms, following description Rouder, Morey, Speckman, & Province (2012, p. 363).  Though using factor coding scheme might obscure interpretation parameters, essential correct estimation Bayes factors contrasts order restrictions multi-level factors (k>2). See info specifying correct priors factors 2 levels Bayes factors vignette.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/contr.orthonorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Orthonormal Contrast Matrices for Bayesian Estimation — contr.orthonorm","text":"","code":"contr.orthonorm(n, contrasts = TRUE, sparse = FALSE)"},{"path":"https://easystats.github.io/bayestestR/reference/contr.orthonorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Orthonormal Contrast Matrices for Bayesian Estimation — contr.orthonorm","text":"n vector levels factor, number levels. contrasts logical indicating whether contrasts     computed. sparse logical indicating result sparse     (class dgCMatrix), using     package Matrix.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/contr.orthonorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Orthonormal Contrast Matrices for Bayesian Estimation — contr.orthonorm","text":"matrix n rows k columns, k=n-1 contrasts TRUE k=n contrasts FALSE.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/contr.orthonorm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Orthonormal Contrast Matrices for Bayesian Estimation — contr.orthonorm","text":"contrasts = FALSE, returned contrasts equivalent contr.treatment(, contrasts = FALSE), suggested McElreath (also known one-hot encoding).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/contr.orthonorm.html","id":"setting-priors","dir":"Reference","previous_headings":"","what":"Setting Priors","title":"Orthonormal Contrast Matrices for Bayesian Estimation — contr.orthonorm","text":"recommended set 0-centered, identically-scaled priors dummy coded variables produced method. priors represent distance mean one levels might overall mean.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/contr.orthonorm.html","id":"contrasts","dir":"Reference","previous_headings":"","what":"Contrasts","title":"Orthonormal Contrast Matrices for Bayesian Estimation — contr.orthonorm","text":"method guarantees set contrasts k groups multivariate prior regardless level order; However, different contrasts within set contrasts can different univariate prior shapes/scales.  example contrasts - B prior B - C, (+ C) - B (B + ) - C, - B (+ C) - B differ.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/contr.orthonorm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Orthonormal Contrast Matrices for Bayesian Estimation — contr.orthonorm","text":"McElreath, R. (2020). Statistical rethinking: Bayesian course examples R Stan. CRC press. Rouder, J. N., Morey, R. D., Speckman, P. L., & Province, J. M. (2012). Default Bayes factors ANOVA designs. Journal Mathematical Psychology, 56(5), 356-374. https://doi.org/10.1016/j.jmp.2012.08.001","code":""},{"path":"https://easystats.github.io/bayestestR/reference/contr.orthonorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Orthonormal Contrast Matrices for Bayesian Estimation — contr.orthonorm","text":"","code":"contr.orthonorm(2) # Q_2 in Rouder et al. (2012, p. 363) #>            [,1] #> [1,] -0.7071068 #> [2,]  0.7071068  contr.orthonorm(5) # equivalent to Q_5 in Rouder et al. (2012, p. 363) #>            [,1]       [,2]       [,3]       [,4] #> [1,]  0.0000000  0.8944272  0.0000000  0.0000000 #> [2,]  0.0000000 -0.2236068 -0.5000000  0.7071068 #> [3,]  0.7071068 -0.2236068 -0.1666667 -0.4714045 #> [4,] -0.7071068 -0.2236068 -0.1666667 -0.4714045 #> [5,]  0.0000000 -0.2236068  0.8333333  0.2357023  ## check decomposition Q3 <- contr.orthonorm(3) Q3 %*% t(Q3) ## 2/3 on diagonal and -1/3 on off-diagonal elements #>            [,1]       [,2]       [,3] #> [1,]  0.6666667 -0.3333333 -0.3333333 #> [2,] -0.3333333  0.6666667 -0.3333333 #> [3,] -0.3333333 -0.3333333  0.6666667"},{"path":"https://easystats.github.io/bayestestR/reference/convert_bayesian_as_frequentist.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert (refit) a Bayesian model to frequentist — convert_bayesian_as_frequentist","title":"Convert (refit) a Bayesian model to frequentist — convert_bayesian_as_frequentist","text":"Refit Bayesian model frequentist. Can useful comparisons.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/convert_bayesian_as_frequentist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert (refit) a Bayesian model to frequentist — convert_bayesian_as_frequentist","text":"","code":"convert_bayesian_as_frequentist(model, data = NULL, REML = TRUE)  bayesian_as_frequentist(model, data = NULL, REML = TRUE)"},{"path":"https://easystats.github.io/bayestestR/reference/convert_bayesian_as_frequentist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert (refit) a Bayesian model to frequentist — convert_bayesian_as_frequentist","text":"model Bayesian model. data Data used model. NULL, try extract model. REML mixed effects, models estimated using restricted maximum likelihood (REML) (TRUE, default) maximum likelihood (FALSE)?","code":""},{"path":"https://easystats.github.io/bayestestR/reference/convert_bayesian_as_frequentist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert (refit) a Bayesian model to frequentist — convert_bayesian_as_frequentist","text":"","code":"# \\donttest{ # Rstanarm ---------------------- if (require(\"rstanarm\")) {   # Simple regressions   model <- stan_glm(Sepal.Length ~ Species,     data = iris, chains = 2, refresh = 0   )   bayesian_as_frequentist(model) } #> Loading required package: rstanarm #> Loading required package: Rcpp #> This is rstanarm version 2.21.3 #> - See https://mc-stan.org/rstanarm/articles/priors for changes to default priors! #> - Default priors may change, so it's safest to specify priors, even if equivalent to the defaults. #> - For execution on a local, multicore CPU with excess RAM we recommend calling #>   options(mc.cores = parallel::detectCores()) #>  #> Call: #> stats::lm(formula = formula$conditional, data = data) #>  #> Coefficients: #>       (Intercept)  Speciesversicolor   Speciesvirginica   #>             5.006              0.930              1.582   #>  # }  if (FALSE) { if (require(\"rstanarm\")) {   model <- stan_glm(vs ~ mpg,     family = \"binomial\",     data = mtcars, chains = 2, refresh = 0   )   bayesian_as_frequentist(model)    # Mixed models   model <- stan_glmer(Sepal.Length ~ Petal.Length + (1 | Species),     data = iris, chains = 2, refresh = 0   )   bayesian_as_frequentist(model)    model <- stan_glmer(vs ~ mpg + (1 | cyl),     family = \"binomial\",     data = mtcars, chains = 2, refresh = 0   )   bayesian_as_frequentist(model) } }"},{"path":"https://easystats.github.io/bayestestR/reference/cwi.html","id":null,"dir":"Reference","previous_headings":"","what":"Curvewise Intervals (CWI) — cwi","title":"Curvewise Intervals (CWI) — cwi","text":"Compute Curvewise interval (CWI) (also called \"simultaneous interval\" \"joint interval\") posterior distributions using ggdist::curve_interval(). Whereas typical \"pointwise intervals\" contain xx% posterior single parameter, joint/curvewise intervals contain xx% posterior distribution parameters.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/cwi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Curvewise Intervals (CWI) — cwi","text":"","code":"cwi(x, ...)  # S3 method for data.frame cwi(x, ci = 0.95, ...)"},{"path":"https://easystats.github.io/bayestestR/reference/cwi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Curvewise Intervals (CWI) — cwi","text":"x Vector representing posterior distribution, data frame vectors. Can also Bayesian model. bayestestR supports wide range models (see, example, methods(\"hdi\")) documented 'Usage' section, methods classes mostly resemble arguments .numeric .data.framemethods. ... Currently used. ci Value vector probability (credible) interval - CI (0 1) estimated. Default .95 (95%).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/cwi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Curvewise Intervals (CWI) — cwi","text":"data frame following columns: Parameter model parameter(s), x model-object. x vector, column missing. CI probability credible interval. CI_low, CI_high lower upper credible interval limits parameters.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/cwi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Curvewise Intervals (CWI) — cwi","text":"Applied model predictions, pointwise intervals contain xx% predicted response values conditional specific predictor values. contrast, curvewise intervals contain xx% predicted response values across predictor values. Put another way, curvewise intervals contain xx% full prediction lines model. details, see ggdist documentation curvewise intervals.","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/reference/cwi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Curvewise Intervals (CWI) — cwi","text":"","code":"# \\donttest{ library(bayestestR)  if (require(\"ggplot2\") && require(\"rstanarm\") && require(\"ggdist\")) {   # Generate data =============================================   k <- 11 # number of curves (iterations)   n <- 201 # number of rows   data <- data.frame(x = seq(-15, 15, length.out = n))    # Simulate iterations as new columns   for (i in 1:k) {     data[paste0(\"iter_\", i)] <- dnorm(data$x, seq(-5, 5, length.out = k)[i], 3)   }    # Note: first, we need to transpose the data to have iters as rows   iters <- datawizard::data_transpose(data[paste0(\"iter_\", 1:k)])    # Compute Median   data$Median <- point_estimate(iters)[[\"Median\"]]    # Compute Credible Intervals ================================    # Compute ETI (default type of CI)   data[c(\"ETI_low\", \"ETI_high\")] <- eti(iters, ci = 0.5)[c(\"CI_low\", \"CI_high\")]    # Compute CWI   # ggdist::curve_interval(reshape_iterations(data), iter_value .width = c(.5))    # Visualization =============================================   ggplot(data, aes(x = x, y = Median)) +     geom_ribbon(aes(ymin = ETI_low, ymax = ETI_high), fill = \"red\", alpha = 0.3) +     geom_line(size = 1) +     geom_line(       data = reshape_iterations(data),       aes(y = iter_value, group = iter_group),       alpha = 0.3     ) } #> Loading required package: ggplot2 #> Loading required package: ggdist #>  #> Attaching package: ‘ggdist’ #> The following object is masked from ‘package:bayestestR’: #>  #>     hdi  # }"},{"path":"https://easystats.github.io/bayestestR/reference/density_at.html","id":null,"dir":"Reference","previous_headings":"","what":"Density Probability at a Given Value — density_at","title":"Density Probability at a Given Value — density_at","text":"Compute density value given point distribution (.e., value y axis value x distribution).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/density_at.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density Probability at a Given Value — density_at","text":"","code":"density_at(posterior, x, precision = 2^10, method = \"kernel\", ...)"},{"path":"https://easystats.github.io/bayestestR/reference/density_at.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density Probability at a Given Value — density_at","text":"posterior Vector representing posterior distribution. x value get approximate probability. precision Number points density data. See n parameter density. method Density estimation method. Can \"kernel\" (default), \"logspline\" \"KernSmooth\". ... Currently used.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/density_at.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density Probability at a Given Value — density_at","text":"","code":"library(bayestestR) posterior <- distribution_normal(n = 10) density_at(posterior, 0) #> [1] 0.3207106 density_at(posterior, c(0, 1)) #> [1] 0.3207106 0.2375008"},{"path":"https://easystats.github.io/bayestestR/reference/describe_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe Posterior Distributions — describe_posterior","title":"Describe Posterior Distributions — describe_posterior","text":"Compute indices relevant describe characterize posterior distributions.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/describe_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe Posterior Distributions — describe_posterior","text":"","code":"describe_posterior(posteriors, ...)  # S3 method for numeric describe_posterior(   posteriors,   centrality = \"median\",   dispersion = FALSE,   ci = 0.95,   ci_method = \"eti\",   test = c(\"p_direction\", \"rope\"),   rope_range = \"default\",   rope_ci = 0.95,   keep_iterations = FALSE,   bf_prior = NULL,   BF = 1,   ... )  # S3 method for stanreg describe_posterior(   posteriors,   centrality = \"median\",   dispersion = FALSE,   ci = 0.95,   ci_method = \"eti\",   test = c(\"p_direction\", \"rope\"),   rope_range = \"default\",   rope_ci = 0.95,   keep_iterations = FALSE,   bf_prior = NULL,   diagnostic = c(\"ESS\", \"Rhat\"),   priors = FALSE,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"location\", \"all\", \"conditional\", \"smooth_terms\", \"sigma\",     \"distributional\", \"auxiliary\"),   parameters = NULL,   BF = 1,   ... )  # S3 method for brmsfit describe_posterior(   posteriors,   centrality = \"median\",   dispersion = FALSE,   ci = 0.95,   ci_method = \"eti\",   test = c(\"p_direction\", \"rope\"),   rope_range = \"default\",   rope_ci = 0.95,   keep_iterations = FALSE,   bf_prior = NULL,   diagnostic = c(\"ESS\", \"Rhat\"),   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\", \"location\",     \"distributional\", \"auxiliary\"),   parameters = NULL,   BF = 1,   priors = FALSE,   ... )"},{"path":"https://easystats.github.io/bayestestR/reference/describe_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe Posterior Distributions — describe_posterior","text":"posteriors vector, data frame model posterior draws. bayestestR supports wide range models (see methods(\"describe_posterior\")) documented 'Usage' section, methods classes mostly resemble arguments .numeric method. ... Additional arguments passed methods. centrality point-estimates (centrality indices) compute.  Character (vector) list one options: \"median\", \"mean\", \"MAP\" \"\". dispersion Logical, TRUE, computes indices dispersion related estimate(s) (SD MAD mean median, respectively). ci Value vector probability CI (0 1) estimated. Default .95 (95%). ci_method type index used Credible Interval. Can \"ETI\" (default, see eti()), \"HDI\" (see hdi()), \"BCI\" (see bci()), \"SPI\" (see spi()), \"SI\" (see si()). test indices effect existence compute. Character (vector) list one options: \"p_direction\" (\"pd\"), \"rope\", \"p_map\", \"equivalence_test\" (\"equitest\"), \"bayesfactor\" (\"bf\") \"\" compute tests. \"test\", corresponding bayestestR function called (e.g. rope() p_direction()) results included summary output. rope_range ROPE's lower higher bounds. list two values (e.g., c(-0.1, 0.1)) \"default\". \"default\", bounds set x +- 0.1*SD(response). rope_ci Credible Interval (CI) probability, corresponding proportion HDI, use percentage ROPE. keep_iterations TRUE, keep iterations (draws) bootstrapped Bayesian models. added additional columns named iter_1, iter_2, .... can reshape long format running reshape_iterations(). bf_prior Distribution representing prior computation Bayes factors / SI. Used input posterior, otherwise (case models) ignored. BF amount support required included support interval. diagnostic Diagnostic metrics compute.  Character (vector) list one options: \"ESS\", \"Rhat\", \"MCSE\" \"\". priors Add prior used parameter. effects results fixed effects, random effects returned? applies mixed models. May abbreviated. component results parameters, parameters conditional model zero-inflated part model returned? May abbreviated. applies brms-models. parameters Regular expression pattern describes parameters returned. Meta-parameters (like lp__ prior_) filtered default, parameters typically appear summary() returned. Use parameters select specific parameters output.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/describe_posterior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Describe Posterior Distributions — describe_posterior","text":"One components point estimates (like posterior mean median), intervals tests can omitted summary output setting related argument NULL. example, test = NULL centrality = NULL return HDI (CI).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/describe_posterior.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Describe Posterior Distributions — describe_posterior","text":"Makowski, D., Ben-Shachar, M. S., Chen, S. H. ., Lüdecke, D. (2019). Indices Effect Existence Significance Bayesian Framework. Frontiers Psychology 2019;10:2767. doi:10.3389/fpsyg.2019.02767 Region Practical Equivalence (ROPE) Bayes factors","code":""},{"path":"https://easystats.github.io/bayestestR/reference/describe_posterior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe Posterior Distributions — describe_posterior","text":"","code":"library(bayestestR)  if (require(\"logspline\")) {   x <- rnorm(1000)   describe_posterior(x)   describe_posterior(x, centrality = \"all\", dispersion = TRUE, test = \"all\")   describe_posterior(x, ci = c(0.80, 0.90))    df <- data.frame(replicate(4, rnorm(100)))   describe_posterior(df)   describe_posterior(df, centrality = \"all\", dispersion = TRUE, test = \"all\")   describe_posterior(df, ci = c(0.80, 0.90))    df <- data.frame(replicate(4, rnorm(20)))   head(reshape_iterations(describe_posterior(df, keep_iterations = TRUE))) } #> Warning: Prior not specified! Please specify a prior (in the form 'prior = distribution_normal(1000, 0, 1)') to get meaningful results. #> Warning: Bayes factors might not be precise. #> For precise Bayes factors, sampling at least 40,000 posterior samples is recommended. #> Warning: Prior not specified! Please specify priors (with column order matching 'posterior') to get meaningful results. #> Warning: Bayes factors might not be precise. #> For precise Bayes factors, sampling at least 40,000 posterior samples is recommended. #>   Parameter      Median   CI    CI_low  CI_high   pd ROPE_CI ROPE_low ROPE_high #> 1        X1  0.03082071 0.95 -2.384514 2.056542 0.50    0.95     -0.1       0.1 #> 2        X2  0.05796759 0.95 -2.394085 1.203889 0.50    0.95     -0.1       0.1 #> 3        X3  0.24120419 0.95 -2.073809 2.015032 0.55    0.95     -0.1       0.1 #> 4        X4 -0.16551758 0.95 -1.857843 1.230706 0.70    0.95     -0.1       0.1 #> 5        X1  0.03082071 0.95 -2.384514 2.056542 0.50    0.95     -0.1       0.1 #> 6        X2  0.05796759 0.95 -2.394085 1.203889 0.50    0.95     -0.1       0.1 #>   ROPE_Percentage iter_index iter_group iter_value #> 1      0.05555556          1          1 -1.4905827 #> 2      0.05555556          2          1  0.9779056 #> 3      0.00000000          3          1 -0.5303282 #> 4      0.11111111          4          1 -0.4821490 #> 5      0.05555556          1          2 -1.2998224 #> 6      0.05555556          2          2 -0.7012259 if (FALSE) { # rstanarm models # ----------------------------------------------- if (require(\"rstanarm\") && require(\"emmeans\")) {   model <- stan_glm(mpg ~ wt + gear, data = mtcars, chains = 2, iter = 200, refresh = 0)   describe_posterior(model)   describe_posterior(model, centrality = \"all\", dispersion = TRUE, test = \"all\")   describe_posterior(model, ci = c(0.80, 0.90))    # emmeans estimates   # -----------------------------------------------   describe_posterior(emtrends(model, ~1, \"wt\")) }  # brms models # ----------------------------------------------- if (require(\"brms\")) {   model <- brms::brm(mpg ~ wt + cyl, data = mtcars)   describe_posterior(model)   describe_posterior(model, centrality = \"all\", dispersion = TRUE, test = \"all\")   describe_posterior(model, ci = c(0.80, 0.90)) }  # BayesFactor objects # ----------------------------------------------- if (require(\"BayesFactor\")) {   bf <- ttestBF(x = rnorm(100, 1, 1))   describe_posterior(bf)   describe_posterior(bf, centrality = \"all\", dispersion = TRUE, test = \"all\")   describe_posterior(bf, ci = c(0.80, 0.90)) } }"},{"path":"https://easystats.github.io/bayestestR/reference/describe_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe Priors — describe_prior","title":"Describe Priors — describe_prior","text":"Returns summary priors used model.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/describe_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe Priors — describe_prior","text":"","code":"describe_prior(model, ...)  # S3 method for brmsfit describe_prior(   model,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\", \"location\",     \"distributional\", \"auxiliary\"),   parameters = NULL,   ... )"},{"path":"https://easystats.github.io/bayestestR/reference/describe_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe Priors — describe_prior","text":"model Bayesian model. ... Currently used. effects results fixed effects, random effects returned? applies mixed models. May abbreviated. component results parameters, parameters conditional model zero-inflated part model returned? May abbreviated. applies brms-models. parameters Regular expression pattern describes parameters returned. Meta-parameters (like lp__ prior_) filtered default, parameters typically appear summary() returned. Use parameters select specific parameters output.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/describe_prior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe Priors — describe_prior","text":"","code":"if (FALSE) { library(bayestestR)  # rstanarm models # ----------------------------------------------- if (require(\"rstanarm\")) {   model <- rstanarm::stan_glm(mpg ~ wt + cyl, data = mtcars)   describe_prior(model) }  # brms models # ----------------------------------------------- if (require(\"brms\")) {   model <- brms::brm(mpg ~ wt + cyl, data = mtcars)   describe_prior(model) }  # BayesFactor objects # ----------------------------------------------- if (require(\"BayesFactor\")) {   bf <- ttestBF(x = rnorm(100, 1, 1))   describe_prior(bf) } }"},{"path":"https://easystats.github.io/bayestestR/reference/diagnostic_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnostic values for each iteration — diagnostic_draws","title":"Diagnostic values for each iteration — diagnostic_draws","text":"Returns accumulated log-posterior, average Metropolis acceptance rate, divergent transitions, treedepth rather terminated evolution normally.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/diagnostic_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnostic values for each iteration — diagnostic_draws","text":"","code":"diagnostic_draws(posteriors, ...)"},{"path":"https://easystats.github.io/bayestestR/reference/diagnostic_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnostic values for each iteration — diagnostic_draws","text":"posteriors stanreg, stanfit, brmsfit, blavaan object. ... Currently used.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/diagnostic_draws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diagnostic values for each iteration — diagnostic_draws","text":"","code":"if (FALSE) { set.seed(333)  if (require(\"brms\", quietly = TRUE)) {   model <- brm(mpg ~ wt * cyl * vs,     data = mtcars,     iter = 100, control = list(adapt_delta = 0.80),     refresh = 0   )   diagnostic_draws(model) } }"},{"path":"https://easystats.github.io/bayestestR/reference/diagnostic_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Posteriors Sampling Diagnostic — diagnostic_posterior","title":"Posteriors Sampling Diagnostic — diagnostic_posterior","text":"Extract diagnostic metrics (Effective Sample Size (ESS), Rhat Monte Carlo Standard Error MCSE).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/diagnostic_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posteriors Sampling Diagnostic — diagnostic_posterior","text":"","code":"diagnostic_posterior(posteriors, diagnostic = c(\"ESS\", \"Rhat\"), ...)  # S3 method for stanreg diagnostic_posterior(   posteriors,   diagnostic = \"all\",   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"location\", \"all\", \"conditional\", \"smooth_terms\", \"sigma\",     \"distributional\", \"auxiliary\"),   parameters = NULL,   ... )  # S3 method for brmsfit diagnostic_posterior(   posteriors,   diagnostic = \"all\",   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\"),   parameters = NULL,   ... )"},{"path":"https://easystats.github.io/bayestestR/reference/diagnostic_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posteriors Sampling Diagnostic — diagnostic_posterior","text":"posteriors stanreg, stanfit, brmsfit, blavaan object. diagnostic Diagnostic metrics compute.  Character (vector) list one options: \"ESS\", \"Rhat\", \"MCSE\" \"\". ... Currently used. effects parameters fixed effects, random effects returned? applies mixed models. May abbreviated. component type parameters return, parameters conditional model, zero-inflated part model, dispersion term, instrumental variables marginal effects returned? Applies models zero-inflated /dispersion formula, models instrumental variables (called fixed-effects regressions), models marginal effects mfx. May abbreviated. Note conditional component also called count mean component, depending model. three convenient shortcuts: component = \"\" returns possible parameters. component = \"location\", location parameters conditional, zero_inflated, smooth_terms, instruments returned (everything fixed random effects - depending effects argument - auxiliary parameters). component = \"distributional\" (\"auxiliary\"), components like sigma, dispersion, beta precision (auxiliary parameters) returned. parameters Regular expression pattern describes parameters returned.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/diagnostic_posterior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Posteriors Sampling Diagnostic — diagnostic_posterior","text":"Effective Sample (ESS) large possible, although applications, effective sample size greater 1000 sufficient stable estimates (Bürkner, 2017). ESS corresponds number independent samples estimation power N autocorrelated samples. measure “much independent information autocorrelated chains” (Kruschke 2015, p182-3). Rhat closest 1. larger 1.1 (Gelman Rubin, 1992) 1.01 (Vehtari et al., 2019). split Rhat statistic quantifies consistency ensemble Markov chains. Monte Carlo Standard Error (MCSE) another measure accuracy chains. defined standard deviation chains divided effective sample size (formula mcse() Kruschke 2015, p. 187). MCSE “provides quantitative suggestion big estimation noise ”.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/diagnostic_posterior.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Posteriors Sampling Diagnostic — diagnostic_posterior","text":"Gelman, ., & Rubin, D. B. (1992). Inference iterative simulation using multiple sequences. Statistical science, 7(4), 457-472. Vehtari, ., Gelman, ., Simpson, D., Carpenter, B., Bürkner, P. C. (2019). Rank-normalization, folding, localization: improved Rhat assessing convergence MCMC. arXiv preprint arXiv:1903.08008. Kruschke, J. (2014). Bayesian data analysis: tutorial R, JAGS, Stan. Academic Press.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/diagnostic_posterior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posteriors Sampling Diagnostic — diagnostic_posterior","text":"","code":"if (FALSE) { # rstanarm models # ----------------------------------------------- if (require(\"rstanarm\", quietly = TRUE)) {   model <- stan_glm(mpg ~ wt + gear, data = mtcars, chains = 2, iter = 200, refresh = 0)   diagnostic_posterior(model) }  # brms models # ----------------------------------------------- if (require(\"brms\", quietly = TRUE)) {   model <- brms::brm(mpg ~ wt + cyl, data = mtcars)   diagnostic_posterior(model) } }"},{"path":"https://easystats.github.io/bayestestR/reference/distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical Distributions — distribution","title":"Empirical Distributions — distribution","text":"Generate sequence n-quantiles, .e., sample size n near-perfect distribution.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical Distributions — distribution","text":"","code":"distribution(type = \"normal\", ...)  distribution_custom(n, type = \"norm\", ..., random = FALSE)  distribution_beta(n, shape1, shape2, ncp = 0, random = FALSE, ...)  distribution_binomial(n, size = 1, prob = 0.5, random = FALSE, ...)  distribution_binom(n, size = 1, prob = 0.5, random = FALSE, ...)  distribution_cauchy(n, location = 0, scale = 1, random = FALSE, ...)  distribution_chisquared(n, df, ncp = 0, random = FALSE, ...)  distribution_chisq(n, df, ncp = 0, random = FALSE, ...)  distribution_gamma(n, shape, scale = 1, random = FALSE, ...)  distribution_mixture_normal(n, mean = c(-3, 3), sd = 1, random = FALSE, ...)  distribution_normal(n, mean = 0, sd = 1, random = FALSE, ...)  distribution_gaussian(n, mean = 0, sd = 1, random = FALSE, ...)  distribution_nbinom(n, size, prob, mu, phi, random = FALSE, ...)  distribution_poisson(n, lambda = 1, random = FALSE, ...)  distribution_student(n, df, ncp, random = FALSE, ...)  distribution_t(n, df, ncp, random = FALSE, ...)  distribution_student_t(n, df, ncp, random = FALSE, ...)  distribution_tweedie(n, xi = NULL, mu, phi, power = NULL, random = FALSE, ...)  distribution_uniform(n, min = 0, max = 1, random = FALSE, ...)  rnorm_perfect(n, mean = 0, sd = 1)"},{"path":"https://easystats.github.io/bayestestR/reference/distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical Distributions — distribution","text":"type Can names base R's Distributions, like \"cauchy\", \"pois\" \"beta\". ... Arguments passed methods. n number observations random Generate near-perfect random (simple wrappers base R r* functions) distributions. shape1, shape2 non-negative parameters Beta distribution. ncp non-centrality parameter. size number trials (zero ). prob probability success trial. location, scale location scale parameters. df degrees freedom (non-negative, can non-integer). shape Shape parameter. mean vector means. sd vector standard deviations. mu mean phi Corresponding glmmTMB's implementation nbinom distribution, size=mu/phi. lambda vector (non-negative) means. xi tweedie distributions, value xi variance var(Y) = phi * mu^xi. power Alias xi. min, max lower upper limits distribution.  Must finite.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/distribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Empirical Distributions — distribution","text":"random = FALSE, function return q*(ppoints(n), ...).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical Distributions — distribution","text":"","code":"library(bayestestR) x <- distribution(n = 10) plot(density(x))   x <- distribution(type = \"gamma\", n = 100, shape = 2) plot(density(x))"},{"path":"https://easystats.github.io/bayestestR/reference/dot-extract_priors_rstanarm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and Returns the priors formatted for rstanarm — .extract_priors_rstanarm","title":"Extract and Returns the priors formatted for rstanarm — .extract_priors_rstanarm","text":"Extract Returns priors formatted rstanarm","code":""},{"path":"https://easystats.github.io/bayestestR/reference/dot-extract_priors_rstanarm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and Returns the priors formatted for rstanarm — .extract_priors_rstanarm","text":"","code":".extract_priors_rstanarm(model, ...)"},{"path":"https://easystats.github.io/bayestestR/reference/dot-prior_new_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a new location for a prior — .prior_new_location","title":"Set a new location for a prior — .prior_new_location","text":"Set new location prior","code":""},{"path":"https://easystats.github.io/bayestestR/reference/dot-prior_new_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a new location for a prior — .prior_new_location","text":"","code":".prior_new_location(prior, sign, magnitude = 10)"},{"path":"https://easystats.github.io/bayestestR/reference/dot-select_nums.html","id":null,"dir":"Reference","previous_headings":"","what":"select numerics columns — .select_nums","title":"select numerics columns — .select_nums","text":"select numerics columns","code":""},{"path":"https://easystats.github.io/bayestestR/reference/dot-select_nums.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"select numerics columns — .select_nums","text":"","code":".select_nums(x)"},{"path":"https://easystats.github.io/bayestestR/reference/effective_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Effective Sample Size (ESS) — effective_sample","title":"Effective Sample Size (ESS) — effective_sample","text":"function returns effective sample size (ESS).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/effective_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Effective Sample Size (ESS) — effective_sample","text":"","code":"effective_sample(model, ...)  # S3 method for brmsfit effective_sample(   model,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\"),   parameters = NULL,   ... )  # S3 method for stanreg effective_sample(   model,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"location\", \"all\", \"conditional\", \"smooth_terms\", \"sigma\",     \"distributional\", \"auxiliary\"),   parameters = NULL,   ... )"},{"path":"https://easystats.github.io/bayestestR/reference/effective_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Effective Sample Size (ESS) — effective_sample","text":"model stanreg, stanfit, brmsfit, blavaan, MCMCglmm object. ... Currently used. effects results fixed effects, random effects returned? applies mixed models. May abbreviated. component results parameters, parameters conditional model zero-inflated part model returned? May abbreviated. applies brms-models. parameters Regular expression pattern describes parameters returned. Meta-parameters (like lp__ prior_) filtered default, parameters typically appear summary() returned. Use parameters select specific parameters output.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/effective_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Effective Sample Size (ESS) — effective_sample","text":"data frame two columns: Parameter name effective sample size (ESS).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/effective_sample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Effective Sample Size (ESS) — effective_sample","text":"Effective Sample (ESS) large possible, altough applications, effective sample size greater 1,000 sufficient stable estimates (Bürkner, 2017). ESS corresponds number independent samples estimation power N autocorrelated samples. measure “much independent information autocorrelated chains” (Kruschke 2015, p182-3).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/effective_sample.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Effective Sample Size (ESS) — effective_sample","text":"Kruschke, J. (2014). Bayesian data analysis: tutorial R, JAGS, Stan. Academic Press. Bürkner, P. C. (2017). brms: R package Bayesian multilevel models using Stan. Journal Statistical Software, 80(1), 1-28","code":""},{"path":"https://easystats.github.io/bayestestR/reference/effective_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Effective Sample Size (ESS) — effective_sample","text":"","code":"if (FALSE) { library(rstanarm) model <- stan_glm(mpg ~ wt + gear, data = mtcars, chains = 2, iter = 200, refresh = 0) effective_sample(model) }"},{"path":"https://easystats.github.io/bayestestR/reference/equivalence_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for Practical Equivalence — equivalence_test","title":"Test for Practical Equivalence — equivalence_test","text":"Perform Test Practical Equivalence Bayesian frequentist models.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/equivalence_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for Practical Equivalence — equivalence_test","text":"","code":"equivalence_test(x, ...)  # S3 method for default equivalence_test(x, ...)  # S3 method for data.frame equivalence_test(x, range = \"default\", ci = 0.95, verbose = TRUE, ...)  # S3 method for stanreg equivalence_test(   x,   range = \"default\",   ci = 0.95,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"location\", \"all\", \"conditional\", \"smooth_terms\", \"sigma\",     \"distributional\", \"auxiliary\"),   parameters = NULL,   verbose = TRUE,   ... )  # S3 method for brmsfit equivalence_test(   x,   range = \"default\",   ci = 0.95,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\"),   parameters = NULL,   verbose = TRUE,   ... )"},{"path":"https://easystats.github.io/bayestestR/reference/equivalence_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for Practical Equivalence — equivalence_test","text":"x Vector representing posterior distribution. Can also stanreg brmsfit model. ... Currently used. range ROPE's lower higher bounds. \"default\" depending number outcome variables vector list. models one response, range vector length two (e.g., c(-0.1, 0.1)). multivariate models, range list numeric vectors response variable. Vector names correspond name response variables. \"default\" input vector, range set c(-0.1, 0.1). \"default\" input Bayesian model, rope_range() used. ci Credible Interval (CI) probability, corresponding proportion HDI, use percentage ROPE. verbose Toggle warnings. effects results fixed effects, random effects returned? applies mixed models. May abbreviated. component results parameters, parameters conditional model zero-inflated part model returned? May abbreviated. applies brms-models. parameters Regular expression pattern describes parameters returned. Meta-parameters (like lp__ prior_) filtered default, parameters typically appear summary() returned. Use parameters select specific parameters output.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/equivalence_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for Practical Equivalence — equivalence_test","text":"data frame following columns: Parameter model parameter(s), x model-object. x vector, column missing. CI probability HDI. ROPE_low, ROPE_high limits ROPE. values identical parameters. ROPE_Percentage proportion HDI lies inside ROPE. ROPE_Equivalence \"test result\", character. Either \"rejected\", \"accepted\" \"undecided\". HDI_low , HDI_high lower upper HDI limits parameters.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/equivalence_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test for Practical Equivalence — equivalence_test","text":"Documentation accessible : Bayesian models Frequentist models Bayesian models, Test Practical Equivalence based \"HDI+ROPE decision rule\" (Kruschke, 2014, 2018) check whether parameter values accepted rejected explicitly formulated \"null hypothesis\" (.e., ROPE). words, checks percentage 89% HDI null region (ROPE). percentage sufficiently low, null hypothesis rejected. percentage sufficiently high, null hypothesis accepted. Using ROPE HDI, Kruschke (2018) suggests using percentage 95% (89%, considered stable) HDI falls within ROPE decision rule. HDI completely outside ROPE, \"null hypothesis\" parameter \"rejected\". ROPE completely covers HDI, .e., credible values parameter inside region practical equivalence, null hypothesis accepted. Else, ’s undecided whether accept reject null hypothesis. full ROPE used (.e., 100% HDI), null hypothesis rejected accepted percentage posterior within ROPE smaller 2.5% greater 97.5%. Desirable results low proportions inside ROPE  (closer zero better).  attention required finding suitable values ROPE limits (argument range). See 'Details' rope_range() information. Multicollinearity: Non-independent covariates  parameters show strong correlations, .e. covariates independent, joint parameter distributions may shift towards away ROPE. cases, test practical equivalence may inappropriate results. Collinearity invalidates ROPE hypothesis testing based univariate marginals, probabilities conditional independence. problematic results \"undecided\" parameters, may either move towards \"rejection\" away (Kruschke 2014, 340f). equivalence_test() performs simple check pairwise correlations parameters, can collinearity two variables, first step check assumptions hypothesis testing look different pair plots. even sophisticated check projection predictive variable selection (Piironen Vehtari 2017).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/equivalence_test.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Test for Practical Equivalence — equivalence_test","text":"print()-method digits-argument control amount digits output, plot()-method visualize results equivalence-test (models ).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/equivalence_test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Test for Practical Equivalence — equivalence_test","text":"Kruschke, J. K. (2018). Rejecting accepting parameter values Bayesian estimation. Advances Methods Practices Psychological Science, 1(2), 270-280. doi:10.1177/2515245918771304 Kruschke, J. K. (2014). Bayesian data analysis: tutorial R, JAGS, Stan. Academic Press Piironen, J., & Vehtari, . (2017). Comparison Bayesian predictive methods model selection. Statistics Computing, 27(3), 711–735. doi:10.1007/s11222-016-9649-y","code":""},{"path":"https://easystats.github.io/bayestestR/reference/equivalence_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for Practical Equivalence — equivalence_test","text":"","code":"library(bayestestR)  equivalence_test(x = rnorm(1000, 0, 0.01), range = c(-0.1, 0.1)) #> # Test for Practical Equivalence #>  #>   ROPE: [-0.10 0.10] #>  #> H0       | inside ROPE |      95% HDI #> ------------------------------------- #> Accepted |    100.00 % | [-0.02 0.02] #>  #>  equivalence_test(x = rnorm(1000, 0, 1), range = c(-0.1, 0.1)) #> # Test for Practical Equivalence #>  #>   ROPE: [-0.10 0.10] #>  #> H0        | inside ROPE |      95% HDI #> -------------------------------------- #> Undecided |      9.16 % | [-1.98 1.90] #>  #>  equivalence_test(x = rnorm(1000, 1, 0.01), range = c(-0.1, 0.1)) #> # Test for Practical Equivalence #>  #>   ROPE: [-0.10 0.10] #>  #> H0       | inside ROPE |     95% HDI #> ------------------------------------ #> Rejected |      0.00 % | [0.98 1.02] #>  #>  equivalence_test(x = rnorm(1000, 1, 1), ci = c(.50, .99)) #> # Test for Practical Equivalence #>  #>   ROPE: [-0.10 0.10] #>  #> H0       | inside ROPE |      50% HDI #> ------------------------------------- #> Rejected |      0.00 % | [ 0.33 1.70] #>  #>  #> H0        | inside ROPE |      99% HDI #> -------------------------------------- #> Undecided |      5.15 % | [-1.38 3.68] #>  #>   # print more digits test <- equivalence_test(x = rnorm(1000, 1, 1), ci = c(.50, .99)) print(test, digits = 4) #> # Test for Practical Equivalence #>  #>   ROPE: [-0.1000 0.1000] #>  #> H0       | inside ROPE |          50% HDI #> ----------------------------------------- #> Rejected |    0.0000 % | [ 0.3349 1.6587] #>  #>  #> H0        | inside ROPE |          99% HDI #> ------------------------------------------ #> Undecided |    4.3434 % | [-1.5101 3.4100] #>  #>  if (FALSE) { library(rstanarm) model <- rstanarm::stan_glm(mpg ~ wt + cyl, data = mtcars) equivalence_test(model) equivalence_test(model, ci = c(.50, 1))  # plot result test <- equivalence_test(model) plot(test)  library(emmeans) equivalence_test(emtrends(model, ~1, \"wt\"))  library(brms) model <- brms::brm(mpg ~ wt + cyl, data = mtcars) equivalence_test(model) equivalence_test(model, ci = c(.50, .99))  library(BayesFactor) bf <- ttestBF(x = rnorm(100, 1, 1)) equivalence_test(bf) equivalence_test(bf, ci = c(.50, .99)) }"},{"path":"https://easystats.github.io/bayestestR/reference/estimate_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Density Estimation — estimate_density","title":"Density Estimation — estimate_density","text":"function wrapper different methods density estimation. default, uses base R density default uses different smoothing bandwidth (\"SJ\") legacy default implemented base R density function (\"nrd0\"). However, Deng Wickham suggest method = \"KernSmooth\" fastest accurate.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/estimate_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density Estimation — estimate_density","text":"","code":"estimate_density(x, ...)  # S3 method for data.frame estimate_density(   x,   method = \"kernel\",   precision = 2^10,   extend = FALSE,   extend_scale = 0.1,   bw = \"SJ\",   ci = NULL,   select = NULL,   at = NULL,   group_by = NULL,   ... )"},{"path":"https://easystats.github.io/bayestestR/reference/estimate_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density Estimation — estimate_density","text":"x Vector representing posterior distribution, data frame vectors. Can also Bayesian model. bayestestR supports wide range models (see, example, methods(\"hdi\")) documented 'Usage' section, methods classes mostly resemble arguments .numeric .data.framemethods. ... Currently used. method Density estimation method. Can \"kernel\" (default), \"logspline\" \"KernSmooth\". precision Number points density data. See n parameter density. extend Extend range x axis factor extend_scale. extend_scale Ratio range extend x axis. value 0.1 means x axis extended 1/10 range data. bw See eponymous argument density. , default changed \"SJ\", recommended. ci confidence interval threshold. used method = \"kernel\". feature experimental, use caution. select Character vector column names. NULL (default), numeric variables selected. arguments datawizard::find_columns() (exclude) can also used. Optional character vector. NULL input data frame, density estimation performed group (subsets) indicated . See examples. group_by Deprecated favour .","code":""},{"path":"https://easystats.github.io/bayestestR/reference/estimate_density.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Density Estimation — estimate_density","text":"also plot()-method implemented see-package.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/estimate_density.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Density Estimation — estimate_density","text":"Deng, H., & Wickham, H. (2011). Density estimation R. Electronic publication.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/estimate_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density Estimation — estimate_density","text":"","code":"library(bayestestR)  set.seed(1) x <- rnorm(250, mean = 1)  # Basic usage density_kernel <- estimate_density(x) # default method is \"kernel\"  hist(x, prob = TRUE) lines(density_kernel$x, density_kernel$y, col = \"black\", lwd = 2) lines(density_kernel$x, density_kernel$CI_low, col = \"gray\", lty = 2) lines(density_kernel$x, density_kernel$CI_high, col = \"gray\", lty = 2) legend(\"topright\",   legend = c(\"Estimate\", \"95% CI\"),   col = c(\"black\", \"gray\"), lwd = 2, lty = c(1, 2) )   # Other Methods density_logspline <- estimate_density(x, method = \"logspline\") density_KernSmooth <- estimate_density(x, method = \"KernSmooth\") density_mixture <- estimate_density(x, method = \"mixture\")   hist(x, prob = TRUE) lines(density_kernel$x, density_kernel$y, col = \"black\", lwd = 2) lines(density_logspline$x, density_logspline$y, col = \"red\", lwd = 2) lines(density_KernSmooth$x, density_KernSmooth$y, col = \"blue\", lwd = 2) lines(density_mixture$x, density_mixture$y, col = \"green\", lwd = 2)   # Extension density_extended <- estimate_density(x, extend = TRUE) density_default <- estimate_density(x, extend = FALSE)  hist(x, prob = TRUE) lines(density_extended$x, density_extended$y, col = \"red\", lwd = 3) lines(density_default$x, density_default$y, col = \"black\", lwd = 3)   # Multiple columns head(estimate_density(iris)) #>      Parameter        x          y #> 1 Sepal.Length 4.300000 0.09650527 #> 2 Sepal.Length 4.303519 0.09766644 #> 3 Sepal.Length 4.307038 0.09883222 #> 4 Sepal.Length 4.310557 0.10001063 #> 5 Sepal.Length 4.314076 0.10119336 #> 6 Sepal.Length 4.317595 0.10238484 head(estimate_density(iris, select = \"Sepal.Width\")) #>     Parameter        x          y #> 1 Sepal.Width 2.000000 0.04651972 #> 2 Sepal.Width 2.002346 0.04733324 #> 3 Sepal.Width 2.004692 0.04816144 #> 4 Sepal.Width 2.007038 0.04899919 #> 5 Sepal.Width 2.009384 0.04984690 #> 6 Sepal.Width 2.011730 0.05071174  # Grouped data head(estimate_density(iris, at = \"Species\")) #>      Parameter        x         y Species #> 1 Sepal.Length 4.300000 0.2355986  setosa #> 2 Sepal.Length 4.301466 0.2375879  setosa #> 3 Sepal.Length 4.302933 0.2395766  setosa #> 4 Sepal.Length 4.304399 0.2415640  setosa #> 5 Sepal.Length 4.305865 0.2435508  setosa #> 6 Sepal.Length 4.307331 0.2455353  setosa head(estimate_density(iris$Petal.Width, at = iris$Species)) #>           x        y  Group #> 1 0.1000000 9.011872 setosa #> 2 0.1004888 8.955399 setosa #> 3 0.1009775 8.792239 setosa #> 4 0.1014663 8.528268 setosa #> 5 0.1019550 8.172719 setosa #> 6 0.1024438 7.737660 setosa if (FALSE) { # rstanarm models # ----------------------------------------------- library(rstanarm) model <- stan_glm(mpg ~ wt + gear, data = mtcars, chains = 2, iter = 200, refresh = 0) head(estimate_density(model))  library(emmeans) head(estimate_density(emtrends(model, ~1, \"wt\")))  # brms models # ----------------------------------------------- library(brms) model <- brms::brm(mpg ~ wt + cyl, data = mtcars) estimate_density(model) }"},{"path":"https://easystats.github.io/bayestestR/reference/eti.html","id":null,"dir":"Reference","previous_headings":"","what":"Equal-Tailed Interval (ETI) — eti","title":"Equal-Tailed Interval (ETI) — eti","text":"Compute Equal-Tailed Interval (ETI) posterior distributions using quantiles method. probability interval equal probability . ETI can used context uncertainty characterisation posterior distributions Credible Interval (CI).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/eti.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Equal-Tailed Interval (ETI) — eti","text":"","code":"eti(x, ...)  # S3 method for numeric eti(x, ci = 0.95, verbose = TRUE, ...)  # S3 method for stanreg eti(   x,   ci = 0.95,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"location\", \"all\", \"conditional\", \"smooth_terms\", \"sigma\",     \"distributional\", \"auxiliary\"),   parameters = NULL,   verbose = TRUE,   ... )  # S3 method for brmsfit eti(   x,   ci = 0.95,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\"),   parameters = NULL,   verbose = TRUE,   ... )"},{"path":"https://easystats.github.io/bayestestR/reference/eti.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Equal-Tailed Interval (ETI) — eti","text":"x Vector representing posterior distribution, data frame vectors. Can also Bayesian model. bayestestR supports wide range models (see, example, methods(\"hdi\")) documented 'Usage' section, methods classes mostly resemble arguments .numeric .data.framemethods. ... Currently used. ci Value vector probability (credible) interval - CI (0 1) estimated. Default .95 (95%). verbose Toggle warnings. effects results fixed effects, random effects returned? applies mixed models. May abbreviated. component results parameters, parameters conditional model zero-inflated part model returned? May abbreviated. applies brms-models. parameters Regular expression pattern describes parameters returned. Meta-parameters (like lp__ prior_) filtered default, parameters typically appear summary() returned. Use parameters select specific parameters output.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/eti.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Equal-Tailed Interval (ETI) — eti","text":"data frame following columns: Parameter model parameter(s), x model-object. x vector, column missing. CI probability credible interval. CI_low, CI_high lower upper credible interval limits parameters.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/eti.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Equal-Tailed Interval (ETI) — eti","text":"Unlike equal-tailed intervals (see eti()) typically exclude 2.5% tail distribution always include median, HDI equal-tailed therefore always includes mode(s) posterior distributions. can useful better represent credibility mass distribution, HDI also limitations. See spi() details.  95% 89% Credible Intervals (CI) two reasonable ranges characterize uncertainty related estimation (see discussion differences two values).  89% intervals (ci = 0.89) deemed stable , instance, 95% intervals (Kruschke, 2014). effective sample size least 10.000 recommended one wants estimate 95% intervals high precision (Kruschke, 2014, p. 183ff). Unfortunately, default number posterior samples Bayes packages (e.g., rstanarm brms) 4.000 (thus, might want increase fitting model). Moreover, 89 indicates arbitrariness interval limits - remarkable property highest prime number exceed already unstable 95% threshold (McElreath, 2015).  However, 95% advantages . instance, shares (case normal posterior distribution) intuitive relationship standard deviation conveys accurate image (artificial) bounds distribution. Also, wider, makes analyses conservative (.e., probability covering 0 larger 95% CI lower ranges 89%), good thing context reproducibility crisis.  95% equal-tailed interval (ETI) 2.5% distribution either side limits. indicates 2.5th percentile 97.5h percentile. symmetric distributions, two methods computing credible intervals, ETI HDI, return similar results.  case skewed distributions. Indeed, possible parameter values ETI lower credibility (less probable) parameter values outside ETI. property seems undesirable summary credible values distribution.  hand, ETI range change transformations applied distribution (instance, log odds scale probabilities): lower higher bounds transformed distribution correspond transformed lower higher bounds original distribution. contrary, applying transformations distribution change resulting HDI.","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/reference/eti.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Equal-Tailed Interval (ETI) — eti","text":"","code":"library(bayestestR)  posterior <- rnorm(1000) eti(posterior) #> 95% ETI: [-2.13, 2.01] eti(posterior, ci = c(.80, .89, .95)) #> Equal-Tailed Interval #>  #> 80% ETI       |       89% ETI |       95% ETI #> --------------------------------------------- #> [-1.36, 1.31] | [-1.71, 1.70] | [-2.13, 2.01]  df <- data.frame(replicate(4, rnorm(100))) eti(df) #> Equal-Tailed Interval #>  #> Parameter |       95% ETI #> ------------------------- #> X1        | [-1.47, 2.12] #> X2        | [-1.68, 1.97] #> X3        | [-1.93, 1.86] #> X4        | [-2.08, 1.88] eti(df, ci = c(.80, .89, .95)) #> Equal-Tailed Interval #>  #> Parameter |       80% ETI |       89% ETI |       95% ETI #> --------------------------------------------------------- #> X1        | [-1.06, 1.35] | [-1.26, 1.66] | [-1.47, 2.12] #> X2        | [-1.25, 1.30] | [-1.42, 1.56] | [-1.68, 1.97] #> X3        | [-1.14, 1.33] | [-1.48, 1.66] | [-1.93, 1.86] #> X4        | [-1.37, 1.21] | [-1.86, 1.48] | [-2.08, 1.88] if (FALSE) { library(rstanarm) model <- stan_glm(mpg ~ wt + gear, data = mtcars, chains = 2, iter = 200, refresh = 0) eti(model) eti(model, ci = c(.80, .89, .95))  library(emmeans) eti(emtrends(model, ~1, \"wt\"))  library(brms) model <- brms::brm(mpg ~ wt + cyl, data = mtcars) eti(model) eti(model, ci = c(.80, .89, .95))  library(BayesFactor) bf <- ttestBF(x = rnorm(100, 1, 1)) eti(bf) eti(bf, ci = c(.80, .89, .95)) }"},{"path":"https://easystats.github.io/bayestestR/reference/hdi.html","id":null,"dir":"Reference","previous_headings":"","what":"Highest Density Interval (HDI) — hdi","title":"Highest Density Interval (HDI) — hdi","text":"Compute Highest Density Interval (HDI) posterior distributions. points within interval higher probability density points outside interval. HDI can used context uncertainty characterisation posterior distributions Credible Interval (CI).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/hdi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Highest Density Interval (HDI) — hdi","text":"","code":"hdi(x, ...)  # S3 method for numeric hdi(x, ci = 0.95, verbose = TRUE, ...)  # S3 method for data.frame hdi(x, ci = 0.95, verbose = TRUE, ...)  # S3 method for stanreg hdi(   x,   ci = 0.95,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"location\", \"all\", \"conditional\", \"smooth_terms\", \"sigma\",     \"distributional\", \"auxiliary\"),   parameters = NULL,   verbose = TRUE,   ... )  # S3 method for brmsfit hdi(   x,   ci = 0.95,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\"),   parameters = NULL,   verbose = TRUE,   ... )"},{"path":"https://easystats.github.io/bayestestR/reference/hdi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Highest Density Interval (HDI) — hdi","text":"x Vector representing posterior distribution, data frame vectors. Can also Bayesian model. bayestestR supports wide range models (see, example, methods(\"hdi\")) documented 'Usage' section, methods classes mostly resemble arguments .numeric .data.framemethods. ... Currently used. ci Value vector probability (credible) interval - CI (0 1) estimated. Default .95 (95%). verbose Toggle warnings. effects results fixed effects, random effects returned? applies mixed models. May abbreviated. component results parameters, parameters conditional model zero-inflated part model returned? May abbreviated. applies brms-models. parameters Regular expression pattern describes parameters returned. Meta-parameters (like lp__ prior_) filtered default, parameters typically appear summary() returned. Use parameters select specific parameters output.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/hdi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Highest Density Interval (HDI) — hdi","text":"data frame following columns: Parameter model parameter(s), x model-object. x vector, column missing. CI probability credible interval. CI_low, CI_high lower upper credible interval limits parameters.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/hdi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Highest Density Interval (HDI) — hdi","text":"Unlike equal-tailed intervals (see eti()) typically exclude 2.5% tail distribution always include median, HDI equal-tailed therefore always includes mode(s) posterior distributions. can useful better represent credibility mass distribution, HDI also limitations. See spi() details.  95% 89% Credible Intervals (CI) two reasonable ranges characterize uncertainty related estimation (see discussion differences two values).  89% intervals (ci = 0.89) deemed stable , instance, 95% intervals (Kruschke, 2014). effective sample size least 10.000 recommended one wants estimate 95% intervals high precision (Kruschke, 2014, p. 183ff). Unfortunately, default number posterior samples Bayes packages (e.g., rstanarm brms) 4.000 (thus, might want increase fitting model). Moreover, 89 indicates arbitrariness interval limits - remarkable property highest prime number exceed already unstable 95% threshold (McElreath, 2015).  However, 95% advantages . instance, shares (case normal posterior distribution) intuitive relationship standard deviation conveys accurate image (artificial) bounds distribution. Also, wider, makes analyses conservative (.e., probability covering 0 larger 95% CI lower ranges 89%), good thing context reproducibility crisis.  95% equal-tailed interval (ETI) 2.5% distribution either side limits. indicates 2.5th percentile 97.5h percentile. symmetric distributions, two methods computing credible intervals, ETI HDI, return similar results.  case skewed distributions. Indeed, possible parameter values ETI lower credibility (less probable) parameter values outside ETI. property seems undesirable summary credible values distribution.  hand, ETI range change transformations applied distribution (instance, log odds scale probabilities): lower higher bounds transformed distribution correspond transformed lower higher bounds original distribution. contrary, applying transformations distribution change resulting HDI.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/hdi.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Highest Density Interval (HDI) — hdi","text":"also plot()-method implemented see-package.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/hdi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Highest Density Interval (HDI) — hdi","text":"Kruschke, J. (2014). Bayesian data analysis: tutorial R, JAGS, Stan. Academic Press. McElreath, R. (2015). Statistical rethinking: Bayesian course examples R Stan. Chapman Hall/CRC.","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/reference/hdi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Highest Density Interval (HDI) — hdi","text":"Credits go ggdistribute HDInterval.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/hdi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Highest Density Interval (HDI) — hdi","text":"","code":"library(bayestestR)  posterior <- rnorm(1000) hdi(posterior, ci = .89) #>           [,1]     [,2] #> [1,] -1.992903 2.027739 hdi(posterior, ci = c(.80, .90, .95)) #>           [,1]     [,2] #> [1,] -1.992903 2.027739  df <- data.frame(replicate(4, rnorm(100))) hdi(df) #> Error in UseMethod(\"hdi_\"): no applicable method for 'hdi_' applied to an object of class \"data.frame\" hdi(df, ci = c(.80, .90, .95)) #> Error in UseMethod(\"hdi_\"): no applicable method for 'hdi_' applied to an object of class \"data.frame\" if (FALSE) { library(rstanarm) model <- stan_glm(mpg ~ wt + gear, data = mtcars, chains = 2, iter = 200, refresh = 0) hdi(model) hdi(model, ci = c(.80, .90, .95))  library(emmeans) hdi(emtrends(model, ~1, \"wt\"))  library(brms) model <- brms::brm(mpg ~ wt + cyl, data = mtcars) hdi(model) hdi(model, ci = c(.80, .90, .95))  library(BayesFactor) bf <- ttestBF(x = rnorm(100, 1, 1)) hdi(bf) hdi(bf, ci = c(.80, .90, .95)) }"},{"path":"https://easystats.github.io/bayestestR/reference/map_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum A Posteriori probability estimate (MAP) — map_estimate","title":"Maximum A Posteriori probability estimate (MAP) — map_estimate","text":"Find Highest Maximum Posteriori probability estimate (MAP) posterior, .e., value associated highest probability density (\"peak\" posterior distribution). words, estimation mode continuous parameters. Note function relies estimate_density, default uses different smoothing bandwidth (\"SJ\") compared legacy default implemented base R density function (\"nrd0\").","code":""},{"path":"https://easystats.github.io/bayestestR/reference/map_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum A Posteriori probability estimate (MAP) — map_estimate","text":"","code":"map_estimate(x, precision = 2^10, method = \"kernel\", ...)  # S3 method for numeric map_estimate(x, precision = 2^10, method = \"kernel\", ...)  # S3 method for stanreg map_estimate(   x,   precision = 2^10,   method = \"kernel\",   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"location\", \"all\", \"conditional\", \"smooth_terms\", \"sigma\",     \"distributional\", \"auxiliary\"),   parameters = NULL,   ... )  # S3 method for brmsfit map_estimate(   x,   precision = 2^10,   method = \"kernel\",   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\"),   parameters = NULL,   ... )  # S3 method for data.frame map_estimate(x, precision = 2^10, method = \"kernel\", ...)"},{"path":"https://easystats.github.io/bayestestR/reference/map_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum A Posteriori probability estimate (MAP) — map_estimate","text":"x Vector representing posterior distribution, data frame vectors. Can also Bayesian model. bayestestR supports wide range models (see, example, methods(\"hdi\")) documented 'Usage' section, methods classes mostly resemble arguments .numeric .data.framemethods. precision Number points density data. See n parameter density. method Density estimation method. Can \"kernel\" (default), \"logspline\" \"KernSmooth\". ... Currently used. effects results fixed effects, random effects returned? applies mixed models. May abbreviated. component results parameters, parameters conditional model zero-inflated part model returned? May abbreviated. applies brms-models. parameters Regular expression pattern describes parameters returned. Meta-parameters (like lp__ prior_) filtered default, parameters typically appear summary() returned. Use parameters select specific parameters output.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/map_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum A Posteriori probability estimate (MAP) — map_estimate","text":"numeric value x vector. x model-object, returns data frame following columns: Parameter model parameter(s), x model-object. x vector, column missing. MAP_Estimate MAP estimate posterior model parameter.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/map_estimate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum A Posteriori probability estimate (MAP) — map_estimate","text":"","code":"if (FALSE) { library(bayestestR)  posterior <- rnorm(10000) map_estimate(posterior)  plot(density(posterior)) abline(v = map_estimate(posterior), col = \"red\")  library(rstanarm) model <- rstanarm::stan_glm(mpg ~ wt + cyl, data = mtcars) map_estimate(model)  library(brms) model <- brms::brm(mpg ~ wt + cyl, data = mtcars) map_estimate(model) }"},{"path":"https://easystats.github.io/bayestestR/reference/mcse.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte-Carlo Standard Error (MCSE) — mcse","title":"Monte-Carlo Standard Error (MCSE) — mcse","text":"function returns Monte Carlo Standard Error (MCSE).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/mcse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte-Carlo Standard Error (MCSE) — mcse","text":"","code":"mcse(model, ...)  # S3 method for stanreg mcse(   model,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"location\", \"all\", \"conditional\", \"smooth_terms\", \"sigma\",     \"distributional\", \"auxiliary\"),   parameters = NULL,   ... )"},{"path":"https://easystats.github.io/bayestestR/reference/mcse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte-Carlo Standard Error (MCSE) — mcse","text":"model stanreg, stanfit, brmsfit, blavaan, MCMCglmm object. ... Currently used. effects results fixed effects, random effects returned? applies mixed models. May abbreviated. component results parameters, parameters conditional model zero-inflated part model returned? May abbreviated. applies brms-models. parameters Regular expression pattern describes parameters returned. Meta-parameters (like lp__ prior_) filtered default, parameters typically appear summary() returned. Use parameters select specific parameters output.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/mcse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Monte-Carlo Standard Error (MCSE) — mcse","text":"Monte Carlo Standard Error (MCSE) another measure accuracy chains. defined standard deviation chains divided effective sample size (formula mcse() Kruschke 2015, p. 187). MCSE “provides quantitative suggestion big estimation noise ”.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/mcse.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Monte-Carlo Standard Error (MCSE) — mcse","text":"Kruschke, J. (2014). Bayesian data analysis: tutorial R, JAGS, Stan. Academic Press.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/mcse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monte-Carlo Standard Error (MCSE) — mcse","text":"","code":"if (FALSE) { library(bayestestR) library(rstanarm)  model <- stan_glm(mpg ~ wt + am, data = mtcars, chains = 1, refresh = 0) mcse(model) }"},{"path":"https://easystats.github.io/bayestestR/reference/mediation.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of Bayesian multivariate-response mediation-models — mediation","title":"Summary of Bayesian multivariate-response mediation-models — mediation","text":"mediation() short summary multivariate-response mediation-models, .e. function computes average direct average causal mediation effects multivariate response models.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/mediation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of Bayesian multivariate-response mediation-models — mediation","text":"","code":"mediation(model, ...)  # S3 method for brmsfit mediation(   model,   treatment,   mediator,   response = NULL,   centrality = \"median\",   ci = 0.95,   method = \"ETI\",   ... )  # S3 method for stanmvreg mediation(   model,   treatment,   mediator,   response = NULL,   centrality = \"median\",   ci = 0.95,   method = \"ETI\",   ... )"},{"path":"https://easystats.github.io/bayestestR/reference/mediation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of Bayesian multivariate-response mediation-models — mediation","text":"model brmsfit stanmvreg object. ... used. treatment Character, name treatment variable (direct effect) (multivariate response) mediator-model. missing, mediation() tries find treatment variable automatically, however, may fail. mediator Character, name mediator variable (multivariate response) mediator-model. missing, mediation() tries find treatment variable automatically, however, may fail. response named character vector, indicating names response variables used mediation analysis. Usually can NULL, case variables retrieved automatically. NULL, names match names model formulas, names(insight::find_response(model, combine = TRUE)). can useful , instance, mediator variable used predictor different name mediator variable used response. might occur mediator transformed one model, used \"\" response variable model. Example: mediator m used response variable, centered version m_center used mediator variable. second response variable (treatment model, mediator additional predictor), y, transformed. use response like : mediation(model, response = c(m = \"m_center\", y = \"y\")). centrality point-estimates (centrality indices) compute.  Character (vector) list one options: \"median\", \"mean\", \"MAP\" \"\". ci Value vector probability CI (0 1) estimated. Default .95 (95%). method Can 'ETI' (default), 'HDI', 'BCI', 'SPI' 'SI'.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/mediation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of Bayesian multivariate-response mediation-models — mediation","text":"data frame direct, indirect, mediator total effect multivariate-response mediation-model, well proportion mediated. effect sizes median values posterior samples (use centrality centrality indices).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/mediation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary of Bayesian multivariate-response mediation-models — mediation","text":"mediation() returns data frame information direct effect (mean value posterior samples treatment outcome model), mediator effect (mean value posterior samples mediator outcome model), indirect effect (mean value multiplication posterior samples mediator outcome model posterior samples treatment mediation model) total effect (mean value sums posterior samples used direct indirect effect). proportion mediated indirect effect divided total effect.  values, 89% credible intervals calculated default. Use ci calculate different interval.  arguments treatment mediator necessarily need specified. missing, mediation() tries find treatment mediator variable automatically. work, specify variables.  direct effect also called average direct effect (ADE), indirect effect also called average causal mediation effects (ACME). See also Tingley et al. 2014 Imai et al. 2010.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/mediation.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Summary of Bayesian multivariate-response mediation-models — mediation","text":".data.frame() method returns posterior samples effects, can used processing different bayestestR package.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/mediation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Summary of Bayesian multivariate-response mediation-models — mediation","text":"Imai, K., Keele, L. Tingley, D. (2010) General Approach Causal Mediation Analysis, Psychological Methods, Vol. 15, . 4 (December), pp. 309-334. Tingley, D., Yamamoto, T., Hirose, K., Imai, K. Keele, L. (2014). mediation: R package Causal Mediation Analysis, Journal Statistical Software, Vol. 59, . 5, pp. 1-38.","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/reference/mediation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of Bayesian multivariate-response mediation-models — mediation","text":"","code":"if (FALSE) { library(mediation) library(brms) library(rstanarm)  # load sample data data(jobs) set.seed(123)  # linear models, for mediation analysis b1 <- lm(job_seek ~ treat + econ_hard + sex + age, data = jobs) b2 <- lm(depress2 ~ treat + job_seek + econ_hard + sex + age, data = jobs) # mediation analysis, for comparison with Stan models m1 <- mediate(b1, b2, sims = 1000, treat = \"treat\", mediator = \"job_seek\")  # Fit Bayesian mediation model in brms f1 <- bf(job_seek ~ treat + econ_hard + sex + age) f2 <- bf(depress2 ~ treat + job_seek + econ_hard + sex + age) m2 <- brm(f1 + f2 + set_rescor(FALSE), data = jobs, cores = 4, refresh = 0)  # Fit Bayesian mediation model in rstanarm m3 <- stan_mvmer(   list(     job_seek ~ treat + econ_hard + sex + age + (1 | occp),     depress2 ~ treat + job_seek + econ_hard + sex + age + (1 | occp)   ),   data = jobs,   cores = 4,   refresh = 0 )  summary(m1) mediation(m2, centrality = \"mean\", ci = .95) mediation(m3, centrality = \"mean\", ci = .95) }"},{"path":"https://easystats.github.io/bayestestR/reference/model_to_priors.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert model's posteriors to priors (EXPERIMENTAL) — model_to_priors","title":"Convert model's posteriors to priors (EXPERIMENTAL) — model_to_priors","text":"Convert model's posteriors (normal) priors.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/model_to_priors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert model's posteriors to priors (EXPERIMENTAL) — model_to_priors","text":"","code":"model_to_priors(model, scale_multiply = 3, ...)"},{"path":"https://easystats.github.io/bayestestR/reference/model_to_priors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert model's posteriors to priors (EXPERIMENTAL) — model_to_priors","text":"model Bayesian model. scale_multiply SD posterior multiplied amount set prior avoid overly narrow priors. ... arguments insight::get_prior() describe_posterior.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/model_to_priors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert model's posteriors to priors (EXPERIMENTAL) — model_to_priors","text":"","code":"if (FALSE) { # brms models # ----------------------------------------------- if (require(\"brms\")) {   formula <- brms::brmsformula(mpg ~ wt + cyl, center = FALSE)    model <- brms::brm(formula, data = mtcars, refresh = 0)   priors <- model_to_priors(model)   priors <- brms::validate_prior(priors, formula, data = mtcars)   priors    model2 <- brms::brm(formula, data = mtcars, prior = priors, refresh = 0) } }"},{"path":"https://easystats.github.io/bayestestR/reference/overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Overlap Coefficient — overlap","title":"Overlap Coefficient — overlap","text":"method calculate overlap coefficient two empirical distributions (can used measure similarity two samples).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Overlap Coefficient — overlap","text":"","code":"overlap(   x,   y,   method_density = \"kernel\",   method_auc = \"trapezoid\",   precision = 2^10,   extend = TRUE,   extend_scale = 0.1,   ... )"},{"path":"https://easystats.github.io/bayestestR/reference/overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Overlap Coefficient — overlap","text":"x Vector x values. y Vector x values. method_density Density estimation method. See estimate_density(). method_auc Area Curve (AUC) estimation method. See area_under_curve(). precision Number points density data. See n parameter density. extend Extend range x axis factor extend_scale. extend_scale Ratio range extend x axis. value 0.1 means x axis extended 1/10 range data. ... Currently used.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/overlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Overlap Coefficient — overlap","text":"","code":"library(bayestestR)  x <- distribution_normal(1000, 2, 0.5) y <- distribution_normal(1000, 0, 1)  overlap(x, y) #> # Overlap #>  #> 0.19 plot(overlap(x, y))"},{"path":"https://easystats.github.io/bayestestR/reference/p_direction.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of Direction (pd) — p_direction","title":"Probability of Direction (pd) — p_direction","text":"Compute Probability Direction (pd, also known Maximum Probability Effect - MPE). varies 50% 100% (.e., 0.5 1) can interpreted probability (expressed percentage) parameter (described posterior distribution) strictly positive negative (whichever probable). mathematically defined proportion posterior distribution median's sign. Although differently expressed, index fairly similar (.e., strongly correlated) frequentist p-value.  Note (rare) cases, especially used model averaged posteriors (see weighted_posteriors() brms::posterior_average), pd can smaller 0.5, reflecting high credibility 0.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/p_direction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of Direction (pd) — p_direction","text":"","code":"p_direction(x, ...)  pd(x, ...)  # S3 method for numeric p_direction(x, method = \"direct\", null = 0, ...)  # S3 method for data.frame p_direction(x, method = \"direct\", null = 0, ...)  # S3 method for MCMCglmm p_direction(x, method = \"direct\", null = 0, ...)  # S3 method for emmGrid p_direction(x, method = \"direct\", null = 0, ...)  # S3 method for stanreg p_direction(   x,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"location\", \"all\", \"conditional\", \"smooth_terms\", \"sigma\",     \"distributional\", \"auxiliary\"),   parameters = NULL,   method = \"direct\",   null = 0,   ... )  # S3 method for brmsfit p_direction(   x,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\"),   parameters = NULL,   method = \"direct\",   null = 0,   ... )  # S3 method for BFBayesFactor p_direction(x, method = \"direct\", null = 0, ...)"},{"path":"https://easystats.github.io/bayestestR/reference/p_direction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of Direction (pd) — p_direction","text":"x Vector representing posterior distribution. Can also Bayesian model (stanreg, brmsfit BayesFactor). ... Currently used. method Can \"direct\" one methods density estimation, \"kernel\", \"logspline\" \"KernSmooth\". \"direct\" (default), computation based raw ratio samples superior inferior 0. Else, result based Area Curve (AUC) estimated density function. null value considered \"null\" effect. Traditionally 0, also 1 case ratios. effects results fixed effects, random effects returned? applies mixed models. May abbreviated. component results parameters, parameters conditional model zero-inflated part model returned? May abbreviated. applies brms-models. parameters Regular expression pattern describes parameters returned. Meta-parameters (like lp__ prior_) filtered default, parameters typically appear summary() returned. Use parameters select specific parameters output.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/p_direction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of Direction (pd) — p_direction","text":"Values 0.5 1 corresponding probability direction (pd). Note (rare) cases, especially used model averaged posteriors (see weighted_posteriors() brms::posterior_average), pd can smaller 0.5, reflecting high credibility 0. detect cases, method = \"direct\" must used.","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/reference/p_direction.html","id":"what-is-the-pd-","dir":"Reference","previous_headings":"","what":"What is the pd?","title":"Probability of Direction (pd) — p_direction","text":"Probability Direction (pd) index effect existence, ranging 50% 100%, representing certainty effect goes particular direction (.e., positive negative). Beyond simplicity interpretation, understanding computation, index also presents interesting properties: independent model: solely based posterior distributions require additional information data model. robust scale response variable predictors. strongly correlated frequentist p-value, can thus used draw parallels give reference readers non-familiar Bayesian statistics.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/p_direction.html","id":"relationship-with-the-p-value","dir":"Reference","previous_headings":"","what":"Relationship with the p-value","title":"Probability of Direction (pd) — p_direction","text":"cases, seems pd direct correspondence frequentist one-sided p-value formula pone sided = 1 - p(d)/100 two-sided p-value (commonly reported one) formula ptwo sided = 2 * (1 - p(d)/100). Thus, two-sided p-value respectively .1, .05, .01 .001 correspond approximately pd 95%, 97.5%, 99.5% 99.95%. See also pd_to_p().","code":""},{"path":"https://easystats.github.io/bayestestR/reference/p_direction.html","id":"methods-of-computation","dir":"Reference","previous_headings":"","what":"Methods of computation","title":"Probability of Direction (pd) — p_direction","text":"simple direct way compute pd 1) look median's sign, 2) select portion posterior sign 3) compute percentage portion represents. \"simple\" method straightforward, precision directly tied number posterior draws. second approach relies density estimation. starts estimating density function (many methods available), computing area curve (AUC) density curve side 0.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/p_direction.html","id":"strengths-and-limitations","dir":"Reference","previous_headings":"","what":"Strengths and Limitations","title":"Probability of Direction (pd) — p_direction","text":"Strengths: Straightforward computation interpretation. Objective property posterior distribution. 1:1 correspondence frequentist p-value. Limitations: Limited information favoring null hypothesis.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/p_direction.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Probability of Direction (pd) — p_direction","text":"also plot()-method implemented see-package.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/p_direction.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Probability of Direction (pd) — p_direction","text":"Makowski D, Ben-Shachar MS, Chen SHA, Lüdecke D (2019) Indices Effect Existence Significance Bayesian Framework. Frontiers Psychology 2019;10:2767. doi:10.3389/fpsyg.2019.02767","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/reference/p_direction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability of Direction (pd) — p_direction","text":"","code":"library(bayestestR)  # Simulate a posterior distribution of mean 1 and SD 1 # ---------------------------------------------------- posterior <- rnorm(1000, mean = 1, sd = 1) p_direction(posterior) #> Probability of Direction: 0.84 p_direction(posterior, method = \"kernel\") #> Probability of Direction: 0.83  # Simulate a dataframe of posterior distributions # ----------------------------------------------- df <- data.frame(replicate(4, rnorm(100))) p_direction(df) #> Probability of Direction #>  #> Parameter |     pd #> ------------------ #> X1        | 51.00% #> X2        | 53.00% #> X3        | 54.00% #> X4        | 57.00% p_direction(df, method = \"kernel\") #> Probability of Direction #>  #> Parameter |     pd #> ------------------ #> X1        | 49.94% #> X2        | 52.30% #> X3        | 52.30% #> X4        | 54.80% if (FALSE) { # rstanarm models # ----------------------------------------------- if (require(\"rstanarm\")) {   model <- rstanarm::stan_glm(mpg ~ wt + cyl,     data = mtcars,     chains = 2, refresh = 0   )   p_direction(model)   p_direction(model, method = \"kernel\") }  # emmeans # ----------------------------------------------- if (require(\"emmeans\")) {   p_direction(emtrends(model, ~1, \"wt\")) }  # brms models # ----------------------------------------------- if (require(\"brms\")) {   model <- brms::brm(mpg ~ wt + cyl, data = mtcars)   p_direction(model)   p_direction(model, method = \"kernel\") }  # BayesFactor objects # ----------------------------------------------- if (require(\"BayesFactor\")) {   bf <- ttestBF(x = rnorm(100, 1, 1))   p_direction(bf)   p_direction(bf, method = \"kernel\") } }"},{"path":"https://easystats.github.io/bayestestR/reference/p_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian p-value based on the density at the Maximum A Posteriori (MAP) — p_map","title":"Bayesian p-value based on the density at the Maximum A Posteriori (MAP) — p_map","text":"Compute Bayesian equivalent p-value, related odds parameter (described posterior distribution) null hypothesis (h0) using Mills' (2014, 2017) Objective Bayesian Hypothesis Testing framework. corresponds density value 0 divided density Maximum Posteriori (MAP).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/p_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian p-value based on the density at the Maximum A Posteriori (MAP) — p_map","text":"","code":"p_map(x, precision = 2^10, method = \"kernel\", ...)  p_pointnull(x, precision = 2^10, method = \"kernel\", ...)  # S3 method for stanreg p_map(   x,   precision = 2^10,   method = \"kernel\",   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"location\", \"all\", \"conditional\", \"smooth_terms\", \"sigma\",     \"distributional\", \"auxiliary\"),   parameters = NULL,   ... )  # S3 method for brmsfit p_map(   x,   precision = 2^10,   method = \"kernel\",   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\"),   parameters = NULL,   ... )"},{"path":"https://easystats.github.io/bayestestR/reference/p_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian p-value based on the density at the Maximum A Posteriori (MAP) — p_map","text":"x Vector representing posterior distribution, data frame vectors. Can also Bayesian model. bayestestR supports wide range models (see, example, methods(\"hdi\")) documented 'Usage' section, methods classes mostly resemble arguments .numeric .data.framemethods. precision Number points density data. See n parameter density. method Density estimation method. Can \"kernel\" (default), \"logspline\" \"KernSmooth\". ... Currently used. effects results fixed effects, random effects returned? applies mixed models. May abbreviated. component results parameters, parameters conditional model zero-inflated part model returned? May abbreviated. applies brms-models. parameters Regular expression pattern describes parameters returned. Meta-parameters (like lp__ prior_) filtered default, parameters typically appear summary() returned. Use parameters select specific parameters output.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/p_map.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian p-value based on the density at the Maximum A Posteriori (MAP) — p_map","text":"Note method sensitive density estimation method (see section examples ).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/p_map.html","id":"strengths-and-limitations","dir":"Reference","previous_headings":"","what":"Strengths and Limitations","title":"Bayesian p-value based on the density at the Maximum A Posteriori (MAP) — p_map","text":"Strengths: Straightforward computation. Objective property posterior distribution. Limitations: Limited information favoring null hypothesis. Relates density approximation. Indirect relationship mathematical definition interpretation. suitable weak / diffused priors.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/p_map.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian p-value based on the density at the Maximum A Posteriori (MAP) — p_map","text":"Makowski D, Ben-Shachar MS, Chen SHA, Lüdecke D (2019) Indices Effect Existence Significance Bayesian Framework. Frontiers Psychology 2019;10:2767. doi:10.3389/fpsyg.2019.02767 Mills, J. . (2018). Objective Bayesian Precise Hypothesis Testing. University Cincinnati.","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/reference/p_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian p-value based on the density at the Maximum A Posteriori (MAP) — p_map","text":"","code":"library(bayestestR)  p_map(rnorm(1000, 0, 1)) #> MAP-based p-value: 1.00 p_map(rnorm(1000, 10, 1)) #> MAP-based p-value: 0.00 if (FALSE) { library(rstanarm) model <- stan_glm(mpg ~ wt + gear, data = mtcars, chains = 2, iter = 200, refresh = 0) p_map(model)  library(emmeans) p_map(emtrends(model, ~1, \"wt\"))  library(brms) model <- brms::brm(mpg ~ wt + cyl, data = mtcars) p_map(model)  library(BayesFactor) bf <- ttestBF(x = rnorm(100, 1, 1)) p_map(bf)  # --------------------------------------- # Robustness to density estimation method set.seed(333) data <- data.frame() for (iteration in 1:250) {   x <- rnorm(1000, 1, 1)   result <- data.frame(     \"Kernel\" = p_map(x, method = \"kernel\"),     \"KernSmooth\" = p_map(x, method = \"KernSmooth\"),     \"logspline\" = p_map(x, method = \"logspline\")   )   data <- rbind(data, result) } data$KernSmooth <- data$Kernel - data$KernSmooth data$logspline <- data$Kernel - data$logspline  summary(data$KernSmooth) summary(data$logspline) boxplot(data[c(\"KernSmooth\", \"logspline\")]) }"},{"path":"https://easystats.github.io/bayestestR/reference/p_rope.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of being in the ROPE — p_rope","title":"Probability of being in the ROPE — p_rope","text":"Compute proportion whole posterior distribution lie within region practical equivalence (ROPE). equivalent running rope(..., ci = 1).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/p_rope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of being in the ROPE — p_rope","text":"","code":"p_rope(x, ...)  # S3 method for numeric p_rope(x, range = \"default\", ...)  # S3 method for stanreg p_rope(   x,   range = \"default\",   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"location\", \"all\", \"conditional\", \"smooth_terms\", \"sigma\",     \"distributional\", \"auxiliary\"),   parameters = NULL,   ... )  # S3 method for brmsfit p_rope(   x,   range = \"default\",   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\"),   parameters = NULL,   ... )"},{"path":"https://easystats.github.io/bayestestR/reference/p_rope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of being in the ROPE — p_rope","text":"x Vector representing posterior distribution. Can also stanreg brmsfit model. ... Currently used. range ROPE's lower higher bounds. \"default\" depending number outcome variables vector list. models one response, range vector length two (e.g., c(-0.1, 0.1)). multivariate models, range list numeric vectors response variable. Vector names correspond name response variables. \"default\" input vector, range set c(-0.1, 0.1). \"default\" input Bayesian model, rope_range() used. effects results fixed effects, random effects returned? applies mixed models. May abbreviated. component results parameters, parameters conditional model zero-inflated part model returned? May abbreviated. applies brms-models. parameters Regular expression pattern describes parameters returned. Meta-parameters (like lp__ prior_) filtered default, parameters typically appear summary() returned. Use parameters select specific parameters output.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/p_rope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability of being in the ROPE — p_rope","text":"","code":"library(bayestestR)  p_rope(x = rnorm(1000, 0, 0.01), range = c(-0.1, 0.1)) #> Proportion of samples inside the ROPE [-0.10, 0.10]: > .999 p_rope(x = mtcars, range = c(-0.1, 0.1)) #> Proportion of samples inside the ROPE [-0.10, 0.10] #>  #> Parameter | p (ROPE) #> -------------------- #> mpg       |   < .001 #> cyl       |   < .001 #> disp      |   < .001 #> hp        |   < .001 #> drat      |   < .001 #> wt        |   < .001 #> qsec      |   < .001 #> vs        |   0.562  #> am        |   0.594  #> gear      |   < .001 #> carb      |   < .001"},{"path":"https://easystats.github.io/bayestestR/reference/p_significance.html","id":null,"dir":"Reference","previous_headings":"","what":"Practical Significance (ps) — p_significance","title":"Practical Significance (ps) — p_significance","text":"Compute probability Practical Significance (ps), can conceptualized unidirectional equivalence test. returns probability effect given threshold corresponding negligible effect median's direction. Mathematically, defined proportion posterior distribution median sign threshold.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/p_significance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Practical Significance (ps) — p_significance","text":"","code":"p_significance(x, ...)  # S3 method for numeric p_significance(x, threshold = \"default\", ...)  # S3 method for stanreg p_significance(   x,   threshold = \"default\",   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"location\", \"all\", \"conditional\", \"smooth_terms\", \"sigma\",     \"distributional\", \"auxiliary\"),   parameters = NULL,   verbose = TRUE,   ... )  # S3 method for brmsfit p_significance(   x,   threshold = \"default\",   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\"),   parameters = NULL,   verbose = TRUE,   ... )"},{"path":"https://easystats.github.io/bayestestR/reference/p_significance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Practical Significance (ps) — p_significance","text":"x Vector representing posterior distribution. Can also stanreg brmsfit model. ... Currently used. threshold threshold value separates significant negligible effect. \"default\", range set 0.1 input vector, based rope_range() Bayesian model provided. effects results fixed effects, random effects returned? applies mixed models. May abbreviated. component results parameters, parameters conditional model zero-inflated part model returned? May abbreviated. applies brms-models. parameters Regular expression pattern describes parameters returned. Meta-parameters (like lp__ prior_) filtered default, parameters typically appear summary() returned. Use parameters select specific parameters output. verbose Toggle warnings.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/p_significance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Practical Significance (ps) — p_significance","text":"Values 0 1 corresponding probability practical significance (ps).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/p_significance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Practical Significance (ps) — p_significance","text":"p_significance() returns proportion probability distribution (x) outside certain range (negligible effect, ROPE, see argument threshold). values distribution ROPE, p_significance() returns higher probability value outside ROPE. Typically, value larger 0.5 indicate practical significance. However, range negligible effect rather large compared range probability distribution x, p_significance() less 0.5, indicates clear practical significance.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/p_significance.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Practical Significance (ps) — p_significance","text":"also plot()-method implemented see-package.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/p_significance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Practical Significance (ps) — p_significance","text":"","code":"library(bayestestR)  # Simulate a posterior distribution of mean 1 and SD 1 # ---------------------------------------------------- posterior <- rnorm(1000, mean = 1, sd = 1) p_significance(posterior) #> Practical Significance (threshold: 0.10): 0.82  # Simulate a dataframe of posterior distributions # ----------------------------------------------- df <- data.frame(replicate(4, rnorm(100))) p_significance(df) #> Practical Significance (threshold: 0.10) #>  #> Parameter |   ps #> ---------------- #> X1        | 0.57 #> X2        | 0.53 #> X3        | 0.53 #> X4        | 0.50 if (FALSE) { # rstanarm models # ----------------------------------------------- if (require(\"rstanarm\")) {   model <- rstanarm::stan_glm(mpg ~ wt + cyl,     data = mtcars,     chains = 2, refresh = 0   )   p_significance(model) } }"},{"path":"https://easystats.github.io/bayestestR/reference/pd_to_p.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert between Probability of Direction (pd) and p-value. — pd_to_p","title":"Convert between Probability of Direction (pd) and p-value. — pd_to_p","text":"Enables conversion Probability Direction (pd) p-value.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/pd_to_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert between Probability of Direction (pd) and p-value. — pd_to_p","text":"","code":"pd_to_p(pd, direction = \"two-sided\", ...)  p_to_pd(p, direction = \"two-sided\", ...)  convert_p_to_pd(p, direction = \"two-sided\", ...)  convert_pd_to_p(pd, direction = \"two-sided\", ...)"},{"path":"https://easystats.github.io/bayestestR/reference/pd_to_p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert between Probability of Direction (pd) and p-value. — pd_to_p","text":"pd Probability Direction (pd) value (0 1). direction type p-value requested provided. Can \"two-sided\" (default, two tailed) \"one-sided\" (one tailed). ... Arguments passed methods. p p-value.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/pd_to_p.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert between Probability of Direction (pd) and p-value. — pd_to_p","text":"","code":"pd_to_p(pd = 0.95) #> [1] 0.1 pd_to_p(pd = 0.95, direction = \"one-sided\") #> [1] 0.05"},{"path":"https://easystats.github.io/bayestestR/reference/point_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Point-estimates of posterior distributions — point_estimate","title":"Point-estimates of posterior distributions — point_estimate","text":"Compute various point-estimates, mean, median MAP, describe posterior distributions.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/point_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Point-estimates of posterior distributions — point_estimate","text":"","code":"point_estimate(x, ...)  # S3 method for numeric point_estimate(x, centrality = \"all\", dispersion = FALSE, threshold = 0.1, ...)  # S3 method for stanreg point_estimate(   x,   centrality = \"all\",   dispersion = FALSE,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"location\", \"all\", \"conditional\", \"smooth_terms\", \"sigma\",     \"distributional\", \"auxiliary\"),   parameters = NULL,   ... )  # S3 method for brmsfit point_estimate(   x,   centrality = \"all\",   dispersion = FALSE,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\"),   parameters = NULL,   ... )  # S3 method for BFBayesFactor point_estimate(x, centrality = \"all\", dispersion = FALSE, ...)"},{"path":"https://easystats.github.io/bayestestR/reference/point_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Point-estimates of posterior distributions — point_estimate","text":"x Vector representing posterior distribution, data frame vectors. Can also Bayesian model. bayestestR supports wide range models (see, example, methods(\"hdi\")) documented 'Usage' section, methods classes mostly resemble arguments .numeric .data.framemethods. ... Additional arguments passed methods. centrality point-estimates (centrality indices) compute.  Character (vector) list one options: \"median\", \"mean\", \"MAP\" \"\". dispersion Logical, TRUE, computes indices dispersion related estimate(s) (SD MAD mean median, respectively). threshold centrality = \"trimmed\" (.e. trimmed mean), indicates fraction (0 0.5) observations trimmed end vector mean computed. effects results fixed effects, random effects returned? applies mixed models. May abbreviated. component results parameters, parameters conditional model zero-inflated part model returned? May abbreviated. applies brms-models. parameters Regular expression pattern describes parameters returned. Meta-parameters (like lp__ prior_) filtered default, parameters typically appear summary() returned. Use parameters select specific parameters output.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/point_estimate.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Point-estimates of posterior distributions — point_estimate","text":"also plot()-method implemented see-package.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/point_estimate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Point-estimates of posterior distributions — point_estimate","text":"Makowski, D., Ben-Shachar, M. S., Chen, S. H. ., Lüdecke, D. (2019). Indices Effect Existence Significance Bayesian Framework. Frontiers Psychology 2019;10:2767. doi:10.3389/fpsyg.2019.02767","code":""},{"path":"https://easystats.github.io/bayestestR/reference/point_estimate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Point-estimates of posterior distributions — point_estimate","text":"","code":"library(bayestestR)  point_estimate(rnorm(1000)) #> Point Estimate #>  #> Median | Mean |  MAP #> -------------------- #> 0.05   | 0.03 | 0.14 point_estimate(rnorm(1000), centrality = \"all\", dispersion = TRUE) #> Point Estimate #>  #> Median |  MAD |      Mean |   SD |   MAP #> ---------------------------------------- #> -0.04  | 0.96 | -4.90e-03 | 0.94 | -0.16 point_estimate(rnorm(1000), centrality = c(\"median\", \"MAP\")) #> Point Estimate #>  #> Median |   MAP #> -------------- #> -0.04  | -0.17  df <- data.frame(replicate(4, rnorm(100))) point_estimate(df, centrality = \"all\", dispersion = TRUE) #> Point Estimate #>  #> Parameter | Median |  MAD |  Mean |   SD |   MAP #> ------------------------------------------------ #> X1        |  -0.07 | 1.06 | -0.07 | 0.99 | -0.09 #> X2        |   0.06 | 0.98 |  0.09 | 0.97 |  0.02 #> X3        |   0.02 | 1.03 | -0.07 | 1.01 | -0.53 #> X4        |  -0.21 | 0.84 | -0.12 | 0.90 | -0.42 point_estimate(df, centrality = c(\"median\", \"MAP\")) #> Point Estimate #>  #> Parameter | Median |   MAP #> -------------------------- #> X1        |  -0.07 | -0.09 #> X2        |   0.06 |  0.02 #> X3        |   0.02 | -0.53 #> X4        |  -0.21 | -0.42 if (FALSE) { # rstanarm models # ----------------------------------------------- library(rstanarm) model <- rstanarm::stan_glm(mpg ~ wt + cyl, data = mtcars) point_estimate(model, centrality = \"all\", dispersion = TRUE) point_estimate(model, centrality = c(\"median\", \"MAP\"))   # emmeans estimates # ----------------------------------------------- library(emmeans) point_estimate(emtrends(model, ~1, \"wt\"), centrality = c(\"median\", \"MAP\"))  # brms models # ----------------------------------------------- library(brms) model <- brms::brm(mpg ~ wt + cyl, data = mtcars) point_estimate(model, centrality = \"all\", dispersion = TRUE) point_estimate(model, centrality = c(\"median\", \"MAP\"))  # BayesFactor objects # ----------------------------------------------- library(BayesFactor) bf <- ttestBF(x = rnorm(100, 1, 1)) point_estimate(bf, centrality = \"all\", dispersion = TRUE) point_estimate(bf, centrality = c(\"median\", \"MAP\")) }"},{"path":"https://easystats.github.io/bayestestR/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. datawizard reshape_ci insight print_html, print_md","code":""},{"path":"https://easystats.github.io/bayestestR/reference/reshape_iterations.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshape estimations with multiple iterations (draws) to long format — reshape_iterations","title":"Reshape estimations with multiple iterations (draws) to long format — reshape_iterations","text":"Reshape wide data.frame iterations (posterior draws bootsrapped samples) columns long format. Instead iterations columns (e.g., iter_1, iter_2, ...), return 3 columns \\*_index (previous index row), \\*_group (iteration number) \\*_value (value said iteration).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/reshape_iterations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshape estimations with multiple iterations (draws) to long format — reshape_iterations","text":"","code":"reshape_iterations(x, prefix = c(\"draw\", \"iter\", \"iteration\", \"sim\"))  reshape_draws(x, prefix = c(\"draw\", \"iter\", \"iteration\", \"sim\"))"},{"path":"https://easystats.github.io/bayestestR/reference/reshape_iterations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshape estimations with multiple iterations (draws) to long format — reshape_iterations","text":"x data.frame containing posterior draws obtained estimate_response estimate_link. prefix prefix draws (instance, \"iter_\" columns named iter_1, iter_2, iter_3). one provided, search first one matches.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/reshape_iterations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reshape estimations with multiple iterations (draws) to long format — reshape_iterations","text":"Data frame reshaped draws long format.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/reshape_iterations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reshape estimations with multiple iterations (draws) to long format — reshape_iterations","text":"","code":"# \\donttest{ if (require(\"rstanarm\")) {   model <- stan_glm(mpg ~ am, data = mtcars, refresh = 0)   draws <- insight::get_predicted(model)   long_format <- reshape_iterations(draws)   head(long_format) } #>   Predicted iter_index iter_group iter_value #> 1  24.38543          1          1   23.82276 #> 2  24.38543          2          1   23.82276 #> 3  24.38543          3          1   23.82276 #> 4  17.15954          4          1   17.38650 #> 5  17.15954          5          1   17.38650 #> 6  17.15954          6          1   17.38650 # }"},{"path":"https://easystats.github.io/bayestestR/reference/rope.html","id":null,"dir":"Reference","previous_headings":"","what":"Region of Practical Equivalence (ROPE) — rope","title":"Region of Practical Equivalence (ROPE) — rope","text":"Compute proportion HDI (default 89% HDI) posterior distribution lies within region practical equivalence.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/rope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Region of Practical Equivalence (ROPE) — rope","text":"","code":"rope(x, ...)  # S3 method for numeric rope(x, range = \"default\", ci = 0.95, ci_method = \"ETI\", verbose = TRUE, ...)  # S3 method for stanreg rope(   x,   range = \"default\",   ci = 0.95,   ci_method = \"ETI\",   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"location\", \"all\", \"conditional\", \"smooth_terms\", \"sigma\",     \"distributional\", \"auxiliary\"),   parameters = NULL,   verbose = TRUE,   ... )  # S3 method for brmsfit rope(   x,   range = \"default\",   ci = 0.95,   ci_method = \"ETI\",   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\"),   parameters = NULL,   verbose = TRUE,   ... )"},{"path":"https://easystats.github.io/bayestestR/reference/rope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Region of Practical Equivalence (ROPE) — rope","text":"x Vector representing posterior distribution. Can also stanreg brmsfit model. ... Currently used. range ROPE's lower higher bounds. \"default\" depending number outcome variables vector list. models one response, range vector length two (e.g., c(-0.1, 0.1)). multivariate models, range list numeric vectors response variable. Vector names correspond name response variables. \"default\" input vector, range set c(-0.1, 0.1). \"default\" input Bayesian model, rope_range() used. ci Credible Interval (CI) probability, corresponding proportion HDI, use percentage ROPE. ci_method type interval use quantify percentage ROPE. Can 'HDI' (default) 'ETI'. See ci(). verbose Toggle warnings. effects results fixed effects, random effects returned? applies mixed models. May abbreviated. component results parameters, parameters conditional model zero-inflated part model returned? May abbreviated. applies brms-models. parameters Regular expression pattern describes parameters returned. Meta-parameters (like lp__ prior_) filtered default, parameters typically appear summary() returned. Use parameters select specific parameters output.","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/reference/rope.html","id":"rope","dir":"Reference","previous_headings":"","what":"ROPE","title":"Region of Practical Equivalence (ROPE) — rope","text":"Statistically, probability posterior distribution different 0 make much sense (probability single value null hypothesis continuous distribution 0). Therefore, idea underlining ROPE let user define area around null value enclosing values equivalent null value practical purposes (Kruschke 2010, 2011, 2014).  Kruschke (2018) suggests null value set, default, -0.1 0.1 range standardized parameter (negligible effect size according Cohen, 1988). generalized: instance, linear models, ROPE set 0 +/- .1 * sd(y). ROPE range can automatically computed models using rope_range function.  Kruschke (2010, 2011, 2014) suggests using proportion  95% (89%, considered stable) HDI falls within ROPE index \"null-hypothesis\" testing (understood Bayesian framework, see equivalence_test()).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/rope.html","id":"sensitivity-to-parameter-s-scale","dir":"Reference","previous_headings":"","what":"Sensitivity to parameter's scale","title":"Region of Practical Equivalence (ROPE) — rope","text":"important consider unit (.e., scale) predictors using index based ROPE, correct interpretation ROPE representing region practical equivalence zero dependent scale predictors. Indeed, percentage ROPE depend unit parameter. words, ROPE represents fixed portion response's scale, proximity coefficient depends scale coefficient .","code":""},{"path":"https://easystats.github.io/bayestestR/reference/rope.html","id":"multicollinearity-non-independent-covariates","dir":"Reference","previous_headings":"","what":"Multicollinearity: Non-independent covariates","title":"Region of Practical Equivalence (ROPE) — rope","text":"parameters show strong correlations, .e. covariates independent, joint parameter distributions may shift towards away ROPE. Collinearity invalidates ROPE hypothesis testing based univariate marginals, probabilities conditional independence. problematic parameters partial overlap ROPE region. case collinearity, (joint) distributions parameters may either get increased decreased ROPE, means inferences based rope() inappropriate (Kruschke 2014, 340f). rope() performs simple check pairwise correlations parameters, can collinearity two variables, first step check assumptions hypothesis testing look different pair plots. even sophisticated check projection predictive variable selection (Piironen Vehtari 2017).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/rope.html","id":"strengths-and-limitations","dir":"Reference","previous_headings":"","what":"Strengths and Limitations","title":"Region of Practical Equivalence (ROPE) — rope","text":"Strengths: Provides information related practical relevance effects. Limitations: ROPE range needs arbitrarily defined. Sensitive scale (unit) predictors. sensitive highly significant effects.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/rope.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Region of Practical Equivalence (ROPE) — rope","text":"also plot()-method implemented see-package.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/rope.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Region of Practical Equivalence (ROPE) — rope","text":"Cohen, J. (1988). Statistical power analysis behavioural sciences. Kruschke, J. K. (2010). believe: Bayesian methods data analysis. Trends cognitive sciences, 14(7), 293-300. doi:10.1016/j.tics.2010.05.001 . Kruschke, J. K. (2011). Bayesian assessment null values via parameter estimation model comparison. Perspectives Psychological Science, 6(3), 299-312. doi:10.1177/1745691611406925 . Kruschke, J. K. (2014). Bayesian data analysis: tutorial R, JAGS, Stan. Academic Press. doi:10.1177/2515245918771304 . Kruschke, J. K. (2018). Rejecting accepting parameter values Bayesian estimation. Advances Methods Practices Psychological Science, 1(2), 270-280. doi:10.1177/2515245918771304 . Makowski D, Ben-Shachar MS, Chen SHA, Lüdecke D (2019) Indices Effect Existence Significance Bayesian Framework. Frontiers Psychology 2019;10:2767. doi:10.3389/fpsyg.2019.02767 Piironen, J., & Vehtari, . (2017). Comparison Bayesian predictive methods model selection. Statistics Computing, 27(3), 711–735. doi:10.1007/s11222-016-9649-y","code":""},{"path":"https://easystats.github.io/bayestestR/reference/rope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Region of Practical Equivalence (ROPE) — rope","text":"","code":"library(bayestestR)  rope(x = rnorm(1000, 0, 0.01), range = c(-0.1, 0.1)) #> # Proportion of samples inside the ROPE [-0.10, 0.10]: #>  #> inside ROPE #> ----------- #> 100.00 %    #>  rope(x = rnorm(1000, 0, 1), range = c(-0.1, 0.1)) #> # Proportion of samples inside the ROPE [-0.10, 0.10]: #>  #> inside ROPE #> ----------- #> 10.32 %     #>  rope(x = rnorm(1000, 1, 0.01), range = c(-0.1, 0.1)) #> # Proportion of samples inside the ROPE [-0.10, 0.10]: #>  #> inside ROPE #> ----------- #> 0.00 %      #>  rope(x = rnorm(1000, 1, 1), ci = c(.90, .95)) #> # Proportions of samples inside the ROPE [-0.10, 0.10]: #>  #> ROPE for the 90% HDI: #>  #> inside ROPE #> ----------- #> 6.22 %      #>  #>  #> ROPE for the 95% HDI: #>  #> inside ROPE #> ----------- #> 5.89 %      #>  #>  if (FALSE) { library(rstanarm) model <- stan_glm(mpg ~ wt + gear, data = mtcars, chains = 2, iter = 200, refresh = 0) rope(model) rope(model, ci = c(.90, .95))  library(emmeans) rope(emtrends(model, ~1, \"wt\"), ci = c(.90, .95))  library(brms) model <- brms::brm(mpg ~ wt + cyl, data = mtcars) rope(model) rope(model, ci = c(.90, .95))  library(brms) model <- brms::brm(brms::mvbind(mpg, disp) ~ wt + cyl, data = mtcars) rope(model) rope(model, ci = c(.90, .95))  library(BayesFactor) bf <- ttestBF(x = rnorm(100, 1, 1)) rope(bf) rope(bf, ci = c(.90, .95)) }"},{"path":"https://easystats.github.io/bayestestR/reference/rope_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Default Equivalence (ROPE) Region Bounds — rope_range","title":"Find Default Equivalence (ROPE) Region Bounds — rope_range","text":"function attempts automatically finding suitable \"default\" values Region Practical Equivalence (ROPE).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/rope_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Default Equivalence (ROPE) Region Bounds — rope_range","text":"","code":"rope_range(x, ...)  # S3 method for default rope_range(x, verbose = TRUE, ...)"},{"path":"https://easystats.github.io/bayestestR/reference/rope_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Default Equivalence (ROPE) Region Bounds — rope_range","text":"x stanreg, brmsfit BFBayesFactor object. ... Currently used. verbose Toggle warnings.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/rope_range.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find Default Equivalence (ROPE) Region Bounds — rope_range","text":"Kruschke (2018) suggests region practical equivalence set, default, range -0.1 0.1 standardized parameter (negligible effect size according Cohen, 1988). linear models (lm), can generalised -0.1 * SDy, 0.1 *     SDy.","code":"\\item For **logistic models**, the parameters expressed in log odds ratio can be converted to standardized difference through the formula \\ifelse{html}{\\out{&pi;/&radic;(3)}}{\\eqn{\\pi/\\sqrt{3}}}, resulting in a range of `-0.18` to `0.18`.  \\item For other models with **binary outcome**, it is strongly recommended to manually specify the rope argument. Currently, the same default is applied that for logistic models.  \\item For models from **count data**, the residual variance is used. This is a rather experimental threshold and is probably often similar to `-0.1, 0.1`, but should be used with care!  \\item For **t-tests**, the standard deviation of the response is used, similarly to linear models (see above).  \\item For **correlations**, `-0.05, 0.05` is used, i.e., half the value of a negligible correlation as suggested by Cohen's (1988) rules of thumb.  \\item For all other models, `-0.1, 0.1` is used to determine the ROPE limits, but it is strongly advised to specify it manually."},{"path":"https://easystats.github.io/bayestestR/reference/rope_range.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find Default Equivalence (ROPE) Region Bounds — rope_range","text":"Kruschke, J. K. (2018). Rejecting accepting parameter values Bayesian estimation. Advances Methods Practices Psychological Science, 1(2), 270-280. doi:10.1177/2515245918771304 .","code":""},{"path":"https://easystats.github.io/bayestestR/reference/rope_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Default Equivalence (ROPE) Region Bounds — rope_range","text":"","code":"if (FALSE) { if (require(\"rstanarm\")) {   model <- stan_glm(     mpg ~ wt + gear,     data = mtcars,     chains = 2,     iter = 200,     refresh = 0   )   rope_range(model)    model <- stan_glm(vs ~ mpg, data = mtcars, family = \"binomial\", refresh = 0)   rope_range(model) }  if (require(\"brms\")) {   model <- brm(mpg ~ wt + cyl, data = mtcars)   rope_range(model) }  if (require(\"BayesFactor\")) {   model <- ttestBF(mtcars[mtcars$vs == 1, \"mpg\"], mtcars[mtcars$vs == 0, \"mpg\"])   rope_range(model)    model <- lmBF(mpg ~ vs, data = mtcars)   rope_range(model) } }"},{"path":"https://easystats.github.io/bayestestR/reference/sensitivity_to_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Sensitivity to Prior — sensitivity_to_prior","title":"Sensitivity to Prior — sensitivity_to_prior","text":"Computes sensitivity priors specification. represents proportion change indices model fitted antagonistic prior (prior shape located opposite effect).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/sensitivity_to_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sensitivity to Prior — sensitivity_to_prior","text":"","code":"sensitivity_to_prior(model, index = \"Median\", magnitude = 10, ...)"},{"path":"https://easystats.github.io/bayestestR/reference/sensitivity_to_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sensitivity to Prior — sensitivity_to_prior","text":"model Bayesian model (stanreg brmsfit). index indices compute sensitivity. Can one multiple names columns returned describe_posterior. case important (e.g., write 'Median' instead 'median'). magnitude represent magnitude shift antagonistic prior (test sensitivity). instance, magnitude 10 (default) means mode wil updated prior located 10 standard deviations original location. ... Arguments passed methods.","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/reference/sensitivity_to_prior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sensitivity to Prior — sensitivity_to_prior","text":"","code":"if (FALSE) { library(bayestestR)  # rstanarm models # ----------------------------------------------- if (require(\"rstanarm\")) {   model <- rstanarm::stan_glm(mpg ~ wt, data = mtcars)   sensitivity_to_prior(model)    model <- rstanarm::stan_glm(mpg ~ wt + cyl, data = mtcars)   sensitivity_to_prior(model, index = c(\"Median\", \"MAP\")) }  # brms models # ----------------------------------------------- if (require(\"brms\")) {   model <- brms::brm(mpg ~ wt + cyl, data = mtcars)   # sensitivity_to_prior(model) } }"},{"path":"https://easystats.github.io/bayestestR/reference/sexit.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential Effect eXistence and sIgnificance Testing (SEXIT) — sexit","title":"Sequential Effect eXistence and sIgnificance Testing (SEXIT) — sexit","text":"SEXIT new framework describe Bayesian effects, guiding indices use. Accordingly, sexit() function returns minimal (optimal) required information describe models' parameters Bayesian framework. includes following indices: Centrality: median posterior distribution. probabilistic terms, 50% probability effect higher lower. See point_estimate(). Uncertainty: 95% Highest Density Interval (HDI). probabilistic terms, 95% probability effect within confidence interval. See ci(). Existence: probability direction allows quantify certainty effect positive negative. critical index show effect manipulation harmful (instance clinical studies) assess direction link. See p_direction(). Significance: existence demonstrated high certainty, can assess whether effect sufficient size considered significant (.e., negligible). useful index determine effects actually important worthy discussion given process. See p_significance(). Size: Finally, index gives idea strength effect. However, beware, studies shown big effect size can also suggestive low statistical power (see details section).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/sexit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential Effect eXistence and sIgnificance Testing (SEXIT) — sexit","text":"","code":"sexit(x, significant = \"default\", large = \"default\", ci = 0.95, ...)"},{"path":"https://easystats.github.io/bayestestR/reference/sexit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential Effect eXistence and sIgnificance Testing (SEXIT) — sexit","text":"x Vector representing posterior distribution. Can also Bayesian model (stanreg, brmsfit BayesFactor). significant, large threshold values use significant large probabilities. left 'default', selected sexit_thresholds(). See details section . ci Value vector probability (credible) interval - CI (0 1) estimated. Default .95 (95%). ... Currently used.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/sexit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential Effect eXistence and sIgnificance Testing (SEXIT) — sexit","text":"dataframe text attribute.","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/reference/sexit.html","id":"rationale","dir":"Reference","previous_headings":"","what":"Rationale","title":"Sequential Effect eXistence and sIgnificance Testing (SEXIT) — sexit","text":"assessment \"significance\" (broadest meaning) pervasive issue science, historical index, p-value, strongly criticized deemed played important role replicability crisis. reaction, scientists tuned Bayesian methods, offering alternative set tools answer questions. However, Bayesian framework offers wide variety possible indices related \"significance\", debate raging index best, one report. situation can lead mindless reporting possible indices (hopes reader satisfied), often without writer understanding interpreting . indeed complicated juggle many indices complicated definitions subtle differences. SEXIT aims offering practical framework Bayesian effects reporting, focus put intuitiveness, explicitness usefulness indices' interpretation. end, suggest system description parameters intuitive, easy learn apply, mathematically accurate useful taking decision. thresholds significance (.e., ROPE) one \"large\" effect explicitly defined, SEXIT framework make interpretation, .e., label effects, just sequentially gives 3 probabilities (direction, significance large, respectively) -top characteristics posterior (using median HDI centrality uncertainty description). Thus, provides lot information posterior distribution (mass different 'sections' posterior) clear meaningful way.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/sexit.html","id":"threshold-selection","dir":"Reference","previous_headings":"","what":"Threshold selection","title":"Sequential Effect eXistence and sIgnificance Testing (SEXIT) — sexit","text":"One important thing SEXIT framework relies two \"arbitrary\" thresholds (.e., absolute meaning). ones related effect size (inherently subjective notion), namely thresholds significant large effects. set, default, 0.05 0.3 standard deviation outcome variable (tiny large effect sizes correlations according Funder Ozer, 2019). However, defaults chosen lack better option, might adapted case. Thus, handled care, chosen thresholds always explicitly reported justified. linear models (lm), can generalised 0.05 * SDy 0.3 * SDy significant large effects, respectively. logistic models, parameters expressed log odds ratio can converted standardized difference formula π/√(3), resulting threshold 0.09 0.54. models binary outcome, strongly recommended manually specify rope argument. Currently, default applied logistic models. models count data, residual variance used. rather experimental threshold probably often similar 0.05 0.3, used care! t-tests, standard deviation response used, similarly linear models (see ). correlations,0.05 0.3 used. models, 0.05 0.3 used, strongly advised specify manually.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/sexit.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequential Effect eXistence and sIgnificance Testing (SEXIT) — sexit","text":"three values existence, significance size provide useful description posterior distribution effects. possible scenarios include: probability existence low, probability large high: suggests posterior wide (covering large territories side 0). statistical power might low, warrant confident conclusion. probability existence significance high, probability large small: suggests effect , high confidence, large (posterior mostly contained significance large thresholds). 3 indices low: suggests effect null high confidence (posterior closely centred around 0).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/sexit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sequential Effect eXistence and sIgnificance Testing (SEXIT) — sexit","text":"Makowski, D., Ben-Shachar, M. S., & Lüdecke, D. (2019). bayestestR: Describing Effects Uncertainty, Existence Significance within Bayesian Framework. Journal Open Source Software, 4(40), 1541. doi:10.21105/joss.01541 Makowski D, Ben-Shachar MS, Chen SHA, Lüdecke D (2019) Indices Effect Existence Significance Bayesian Framework. Frontiers Psychology 2019;10:2767. doi:10.3389/fpsyg.2019.02767","code":""},{"path":"https://easystats.github.io/bayestestR/reference/sexit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequential Effect eXistence and sIgnificance Testing (SEXIT) — sexit","text":"","code":"if (FALSE) { library(bayestestR)  s <- sexit(rnorm(1000, -1, 1)) s print(s, summary = TRUE)  s <- sexit(iris) s print(s, summary = TRUE)  if (require(\"rstanarm\")) {   model <- rstanarm::stan_glm(mpg ~ wt * cyl,     data = mtcars,     iter = 400, refresh = 0   )   s <- sexit(model)   s   print(s, summary = TRUE) } }"},{"path":"https://easystats.github.io/bayestestR/reference/sexit_thresholds.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Effect Size Thresholds — sexit_thresholds","title":"Find Effect Size Thresholds — sexit_thresholds","text":"function attempts automatically finding suitable default values \"significant\" (.e., non-negligible) \"large\" effect. used care, chosen threshold always explicitly reported justified. See detail section sexit() information.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/sexit_thresholds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Effect Size Thresholds — sexit_thresholds","text":"","code":"sexit_thresholds(x, ...)"},{"path":"https://easystats.github.io/bayestestR/reference/sexit_thresholds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Effect Size Thresholds — sexit_thresholds","text":"x Vector representing posterior distribution. Can also stanreg brmsfit model. ... Currently used.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/sexit_thresholds.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find Effect Size Thresholds — sexit_thresholds","text":"Kruschke, J. K. (2018). Rejecting accepting parameter values Bayesian estimation. Advances Methods Practices Psychological Science, 1(2), 270-280. doi:10.1177/2515245918771304 .","code":""},{"path":"https://easystats.github.io/bayestestR/reference/sexit_thresholds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Effect Size Thresholds — sexit_thresholds","text":"","code":"sexit_thresholds(rnorm(1000)) #> [1] 0.05 0.30 if (FALSE) { if (require(\"rstanarm\")) {   model <- stan_glm(     mpg ~ wt + gear,     data = mtcars,     chains = 2,     iter = 200,     refresh = 0   )   sexit_thresholds(model)    model <- stan_glm(vs ~ mpg, data = mtcars, family = \"binomial\", refresh = 0)   sexit_thresholds(model) }  if (require(\"brms\")) {   model <- brm(mpg ~ wt + cyl, data = mtcars)   sexit_thresholds(model) }  if (require(\"BayesFactor\")) {   bf <- ttestBF(x = rnorm(100, 1, 1))   sexit_thresholds(bf) } }"},{"path":"https://easystats.github.io/bayestestR/reference/si.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Support Intervals — si","title":"Compute Support Intervals — si","text":"support interval contains values parameter predict observed data better average, degree k; values parameter associated updating factor greater equal k. perspective Savage-Dickey Bayes factor, testing point null hypothesis value within support interval yield Bayes factor smaller 1/k. info, particular specifying correct priors factors 2 levels, see Bayes factors vignette.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/si.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Support Intervals — si","text":"","code":"si(posterior, prior = NULL, BF = 1, verbose = TRUE, ...)  # S3 method for numeric si(posterior, prior = NULL, BF = 1, verbose = TRUE, ...)  # S3 method for stanreg si(   posterior,   prior = NULL,   BF = 1,   verbose = TRUE,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"location\", \"zi\", \"zero_inflated\", \"all\", \"smooth_terms\",     \"sigma\", \"distributional\", \"auxiliary\"),   parameters = NULL,   ... )  # S3 method for brmsfit si(   posterior,   prior = NULL,   BF = 1,   verbose = TRUE,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"location\", \"zi\", \"zero_inflated\", \"all\", \"smooth_terms\",     \"sigma\", \"distributional\", \"auxiliary\"),   parameters = NULL,   ... )  # S3 method for blavaan si(   posterior,   prior = NULL,   BF = 1,   verbose = TRUE,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"location\", \"zi\", \"zero_inflated\", \"all\", \"smooth_terms\",     \"sigma\", \"distributional\", \"auxiliary\"),   parameters = NULL,   ... )  # S3 method for emmGrid si(posterior, prior = NULL, BF = 1, verbose = TRUE, ...)  # S3 method for data.frame si(posterior, prior = NULL, BF = 1, verbose = TRUE, ...)"},{"path":"https://easystats.github.io/bayestestR/reference/si.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Support Intervals — si","text":"posterior numerical vector, stanreg / brmsfit object, emmGrid data frame - representing posterior distribution(s) (see 'Details'). prior object representing prior distribution (see 'Details'). BF amount support required included support interval. verbose Toggle warnings. ... Arguments passed methods. (Can used pass arguments internal logspline::logspline().) effects results fixed effects, random effects returned? applies mixed models. May abbreviated. component results parameters, parameters conditional model zero-inflated part model returned? May abbreviated. applies brms-models. parameters Regular expression pattern describes parameters returned. Meta-parameters (like lp__ prior_) filtered default, parameters typically appear summary() returned. Use parameters select specific parameters output.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/si.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Support Intervals — si","text":"data frame containing lower upper bounds SI. Note level requested support higher observed data, interval [NA,NA].","code":""},{"path":"https://easystats.github.io/bayestestR/reference/si.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Support Intervals — si","text":"method used compute support intervals based prior posterior distributions. computation support intervals, model priors must proper priors (least flat, preferable informative - note default, brms::brm() uses flat priors fixed-effects; see example ).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/si.html","id":"choosing-a-value-of-bf","dir":"Reference","previous_headings":"","what":"Choosing a value of BF","title":"Compute Support Intervals — si","text":"choice BF (level support) depends want interval represent: BF = 1 contains values whose credibility decreased observing data. BF > 1 contains values received impressive support data. BF < 1 contains values whose credibility impressively decreased observing data. Testing values outside interval produce Bayes factor larger 1/BF support alternative. E.g., SI (BF = 1/3) excludes 0, Bayes factor point-null larger 3.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/si.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute Support Intervals — si","text":"also plot()-method implemented see-package.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/si.html","id":"setting-the-correct-prior","dir":"Reference","previous_headings":"","what":"Setting the correct prior","title":"Compute Support Intervals — si","text":"computation Bayes factors, model priors must proper priors (least flat, preferable informative); priors alternative get wider, likelihood null value(s) increases, extreme completely flat priors null infinitely favorable alternative (called Jeffreys-Lindley-Bartlett paradox). Thus, ever try (want) compute Bayes factor informed prior.  (Note default, brms::brm() uses flat priors fixed-effects; See example .)  important provide correct prior meaningful results. posterior numerical vector, prior also numerical vector. posterior data.frame, prior also data.frame, matching column order. posterior stanreg, brmsfit supported Bayesian model: prior can set NULL, case prior samples drawn internally. prior can also model equivalent posterior samples priors . See unupdate(). Note: posterior brmsfit_multiple model, prior must provided. posterior emmGrid / emm_list object: prior also emmGrid / emm_list object equivalent posterior created model priors samples . See unupdate(). prior can also original (posterior) model. , function try update emmGrid / emm_list use unupdate()d prior-model. (done brmsfit models.) Note: emmGrid undergone transformations (\"log\", \"response\", etc.), regriding, prior must emmGrid object, stated .","code":""},{"path":"https://easystats.github.io/bayestestR/reference/si.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Support Intervals — si","text":"Wagenmakers, E., Gronau, Q. F., Dablander, F., & Etz, . (2018, November 22). Support Interval. doi:10.31234/osf.io/zwnxb","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/reference/si.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Support Intervals — si","text":"","code":"library(bayestestR)  prior <- distribution_normal(1000, mean = 0, sd = 1) posterior <- distribution_normal(1000, mean = .5, sd = .3)  si(posterior, prior) #> Warning: Support intervals might not be precise. #> For precise support intervals, sampling at least 40,000 posterior samples is recommended. #> BF = 1 SI: [0.04, 1.04] if (FALSE) { # rstanarm models # --------------- library(rstanarm) contrasts(sleep$group) <- contr.orthonorm # see vingette stan_model <- stan_lmer(extra ~ group + (1 | ID), data = sleep) si(stan_model) si(stan_model, BF = 3)  # emmGrid objects # --------------- library(emmeans) group_diff <- pairs(emmeans(stan_model, ~group)) si(group_diff, prior = stan_model)  # brms models # ----------- library(brms) contrasts(sleep$group) <- contr.orthonorm # see vingette my_custom_priors <-   set_prior(\"student_t(3, 0, 1)\", class = \"b\") +   set_prior(\"student_t(3, 0, 1)\", class = \"sd\", group = \"ID\")  brms_model <- brm(extra ~ group + (1 | ID),   data = sleep,   prior = my_custom_priors ) si(brms_model) }"},{"path":"https://easystats.github.io/bayestestR/reference/simulate_correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Simulation — simulate_correlation","title":"Data Simulation — simulate_correlation","text":"Simulate data specific characteristics.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/simulate_correlation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Simulation — simulate_correlation","text":"","code":"simulate_correlation(n = 100, r = 0.5, mean = 0, sd = 1, names = NULL, ...)  simulate_ttest(n = 100, d = 0.5, names = NULL, ...)  simulate_difference(n = 100, d = 0.5, names = NULL, ...)"},{"path":"https://easystats.github.io/bayestestR/reference/simulate_correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Simulation — simulate_correlation","text":"n number observations generated. r value vector corresponding desired correlation coefficients. mean value vector corresponding mean variables. sd value vector corresponding SD variables. names character vector desired variable names. ... Arguments passed methods. d value vector corresponding desired difference groups.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/simulate_correlation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data Simulation — simulate_correlation","text":"","code":"# Correlation -------------------------------- data <- simulate_correlation(r = 0.5) plot(data$V1, data$V2)  cor.test(data$V1, data$V2) #>  #> \tPearson's product-moment correlation #>  #> data:  data$V1 and data$V2 #> t = 5.7155, df = 98, p-value = 1.18e-07 #> alternative hypothesis: true correlation is not equal to 0 #> 95 percent confidence interval: #>  0.3366433 0.6341398 #> sample estimates: #> cor  #> 0.5  #>  summary(lm(V2 ~ V1, data = data)) #>  #> Call: #> lm(formula = V2 ~ V1, data = data) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.94526 -0.58306 -0.01274  0.58380  2.18030  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  0.00000    0.08704   0.000        1     #> V1           0.50000    0.08748   5.715 1.18e-07 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.8704 on 98 degrees of freedom #> Multiple R-squared:   0.25,\tAdjusted R-squared:  0.2423  #> F-statistic: 32.67 on 1 and 98 DF,  p-value: 1.18e-07 #>   # Specify mean and SD data <- simulate_correlation(r = 0.5, n = 50, mean = c(0, 1), sd = c(0.7, 1.7)) cor.test(data$V1, data$V2) #>  #> \tPearson's product-moment correlation #>  #> data:  data$V1 and data$V2 #> t = 4, df = 48, p-value = 0.000218 #> alternative hypothesis: true correlation is not equal to 0 #> 95 percent confidence interval: #>  0.2574879 0.6832563 #> sample estimates: #> cor  #> 0.5  #>  round(c(mean(data$V1), sd(data$V1)), 1) #> [1] 0.0 0.7 round(c(mean(data$V2), sd(data$V2)), 1) #> [1] 1.0 1.7 summary(lm(V2 ~ V1, data = data)) #>  #> Call: #> lm(formula = V2 ~ V1, data = data) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -3.4171 -0.5559  0.0277  0.9316  3.6164  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)   1.0000     0.2104   4.754 1.86e-05 *** #> V1            1.2143     0.3036   4.000 0.000218 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 1.487 on 48 degrees of freedom #> Multiple R-squared:   0.25,\tAdjusted R-squared:  0.2344  #> F-statistic:    16 on 1 and 48 DF,  p-value: 0.000218 #>   # Generate multiple variables cor_matrix <- matrix(c(   1.0, 0.2, 0.4,   0.2, 1.0, 0.3,   0.4, 0.3, 1.0 ), nrow = 3 )  data <- simulate_correlation(r = cor_matrix, names = c(\"y\", \"x1\", \"x2\")) cor(data) #>      y  x1  x2 #> y  1.0 0.2 0.4 #> x1 0.2 1.0 0.3 #> x2 0.4 0.3 1.0 summary(lm(y ~ x1, data = data)) #>  #> Call: #> lm(formula = y ~ x1, data = data) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -2.51808 -0.53538 -0.02381  0.70861  2.87107  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)   #> (Intercept) 8.216e-17  9.848e-02   0.000    1.000   #> x1          2.000e-01  9.897e-02   2.021    0.046 * #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.9848 on 98 degrees of freedom #> Multiple R-squared:   0.04,\tAdjusted R-squared:  0.0302  #> F-statistic: 4.083 on 1 and 98 DF,  p-value: 0.04604 #>   # t-test -------------------------------- data <- simulate_ttest(n = 30, d = 0.3) plot(data$V1, data$V0)  round(c(mean(data$V1), sd(data$V1)), 1) #> [1] 0 1 diff(t.test(data$V1 ~ data$V0)$estimate) #> mean in group 1  #>       0.1358166  summary(lm(V1 ~ V0, data = data)) #>  #> Call: #> lm(formula = V1 ~ V0, data = data) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -2.06466 -0.72154 -0.00453  0.69239  2.05561  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|) #> (Intercept) -0.06338    0.25276  -0.251    0.804 #> V01          0.13582    0.37000   0.367    0.716 #>  #> Residual standard error: 1.011 on 28 degrees of freedom #> Multiple R-squared:  0.004789,\tAdjusted R-squared:  -0.03075  #> F-statistic: 0.1347 on 1 and 28 DF,  p-value: 0.7163 #>  summary(glm(V0 ~ V1, data = data, family = \"binomial\")) #>  #> Call: #> glm(formula = V0 ~ V1, family = \"binomial\", data = data) #>  #> Deviance Residuals:  #>    Min      1Q  Median      3Q     Max   #> -1.220  -1.134  -1.012   1.231   1.309   #>  #> Coefficients: #>             Estimate Std. Error z value Pr(>|z|) #> (Intercept)  -0.1342     0.3669  -0.366    0.715 #> V1            0.1423     0.3761   0.378    0.705 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 41.455  on 29  degrees of freedom #> Residual deviance: 41.311  on 28  degrees of freedom #> AIC: 45.311 #>  #> Number of Fisher Scoring iterations: 3 #>   # Difference -------------------------------- data <- simulate_difference(n = 30, d = 0.3) plot(data$V1, data$V0)  round(c(mean(data$V1), sd(data$V1)), 1) #> [1] 0 1 diff(t.test(data$V1 ~ data$V0)$estimate) #> mean in group 1  #>             0.3  summary(lm(V1 ~ V0, data = data)) #>  #> Call: #> lm(formula = V1 ~ V0, data = data) #>  #> Residuals: #>    Min     1Q Median     3Q    Max  #> -1.834 -0.677  0.000  0.677  1.834  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|) #> (Intercept)  -0.1500     0.2562  -0.586    0.563 #> V01           0.3000     0.3623   0.828    0.415 #>  #> Residual standard error: 0.9922 on 28 degrees of freedom #> Multiple R-squared:  0.0239,\tAdjusted R-squared:  -0.01096  #> F-statistic: 0.6857 on 1 and 28 DF,  p-value: 0.4146 #>  summary(glm(V0 ~ V1, data = data, family = \"binomial\")) #>  #> Call: #> glm(formula = V0 ~ V1, family = \"binomial\", data = data) #>  #> Deviance Residuals:  #>    Min      1Q  Median      3Q     Max   #> -1.417  -1.151   0.000   1.151   1.417   #>  #> Coefficients: #>              Estimate Std. Error z value Pr(>|z|) #> (Intercept) 8.207e-17  3.696e-01   0.000    1.000 #> V1          3.251e-01  3.877e-01   0.839    0.402 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 41.589  on 29  degrees of freedom #> Residual deviance: 40.865  on 28  degrees of freedom #> AIC: 44.865 #>  #> Number of Fisher Scoring iterations: 4 #>"},{"path":"https://easystats.github.io/bayestestR/reference/simulate_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns Priors of a Model as Empirical Distributions — simulate_prior","title":"Returns Priors of a Model as Empirical Distributions — simulate_prior","text":"Transforms priors information actual distributions.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/simulate_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns Priors of a Model as Empirical Distributions — simulate_prior","text":"","code":"simulate_prior(model, n = 1000, ...)"},{"path":"https://easystats.github.io/bayestestR/reference/simulate_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns Priors of a Model as Empirical Distributions — simulate_prior","text":"model stanreg, stanfit, brmsfit, blavaan, MCMCglmm object. n Size simulated prior distributions. ... Currently used.","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/reference/simulate_prior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns Priors of a Model as Empirical Distributions — simulate_prior","text":"","code":"if (FALSE) { library(bayestestR) if (require(\"rstanarm\")) {   model <- stan_glm(mpg ~ wt + am, data = mtcars, chains = 1, refresh = 0)   simulate_prior(model) } }"},{"path":"https://easystats.github.io/bayestestR/reference/simulate_simpson.html","id":null,"dir":"Reference","previous_headings":"","what":"Simpson's paradox dataset simulation — simulate_simpson","title":"Simpson's paradox dataset simulation — simulate_simpson","text":"Simpson's paradox, Yule-Simpson effect, phenomenon probability statistics, trend appears several different groups data disappears reverses groups combined.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/simulate_simpson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simpson's paradox dataset simulation — simulate_simpson","text":"","code":"simulate_simpson(   n = 100,   r = 0.5,   groups = 3,   difference = 1,   group_prefix = \"G_\" )"},{"path":"https://easystats.github.io/bayestestR/reference/simulate_simpson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simpson's paradox dataset simulation — simulate_simpson","text":"n number observations group generated (minimum 4). r value vector corresponding desired correlation coefficients. groups Number groups (groups can participants, clusters, anything). difference Difference groups. group_prefix prefix group name (e.g., \"G_1\", \"G_2\", \"G_3\", ...).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/simulate_simpson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simpson's paradox dataset simulation — simulate_simpson","text":"dataset.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/simulate_simpson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simpson's paradox dataset simulation — simulate_simpson","text":"","code":"data <- simulate_simpson(n = 10, groups = 5, r = 0.5)  if (require(\"ggplot2\")) {   ggplot(data, aes(x = V1, y = V2)) +     geom_point(aes(color = Group)) +     geom_smooth(aes(color = Group), method = \"lm\") +     geom_smooth(method = \"lm\") } #> `geom_smooth()` using formula 'y ~ x' #> `geom_smooth()` using formula 'y ~ x'"},{"path":"https://easystats.github.io/bayestestR/reference/spi.html","id":null,"dir":"Reference","previous_headings":"","what":"Shortest Probability Interval (SPI) — spi","title":"Shortest Probability Interval (SPI) — spi","text":"Compute Shortest Probability Interval (SPI) posterior distributions. SPI computationally stable HDI. implementation based algorithm SPIn package.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/spi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shortest Probability Interval (SPI) — spi","text":"","code":"spi(x, ...)  # S3 method for numeric spi(x, ci = 0.95, verbose = TRUE, ...)  # S3 method for stanreg spi(   x,   ci = 0.95,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"location\", \"all\", \"conditional\", \"smooth_terms\", \"sigma\",     \"distributional\", \"auxiliary\"),   parameters = NULL,   verbose = TRUE,   ... )  # S3 method for brmsfit spi(   x,   ci = 0.95,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\"),   parameters = NULL,   verbose = TRUE,   ... )"},{"path":"https://easystats.github.io/bayestestR/reference/spi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shortest Probability Interval (SPI) — spi","text":"x Vector representing posterior distribution, data frame vectors. Can also Bayesian model. bayestestR supports wide range models (see, example, methods(\"hdi\")) documented 'Usage' section, methods classes mostly resemble arguments .numeric .data.framemethods. ... Currently used. ci Value vector probability (credible) interval - CI (0 1) estimated. Default .95 (95%). verbose Toggle warnings. effects results fixed effects, random effects returned? applies mixed models. May abbreviated. component results parameters, parameters conditional model zero-inflated part model returned? May abbreviated. applies brms-models. parameters Regular expression pattern describes parameters returned. Meta-parameters (like lp__ prior_) filtered default, parameters typically appear summary() returned. Use parameters select specific parameters output.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/spi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shortest Probability Interval (SPI) — spi","text":"data frame following columns: Parameter model parameter(s), x model-object. x vector, column missing. CI probability credible interval. CI_low, CI_high lower upper credible interval limits parameters.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/spi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shortest Probability Interval (SPI) — spi","text":"SPI alternative method HDI (hdi()) quantify uncertainty (posterior) distributions. SPI said stable HDI, , \"HDI can noisy (, high Monte Carlo error)\" (Liu et al. 2015). Furthermore, HDI sensitive additional assumptions, particular assumptions related different estimation methods, can make HDI less accurate reliable (see also discussion ).","code":""},{"path":"https://easystats.github.io/bayestestR/reference/spi.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Shortest Probability Interval (SPI) — spi","text":"code compute SPI adapted SPIn package, slightly modified robust Stan models. Thus, credits go Ying Liu original SPI algorithm R implementation.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/spi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Shortest Probability Interval (SPI) — spi","text":"Liu, Y., Gelman, ., & Zheng, T. (2015). Simulation-efficient shortest probability intervals. Statistics Computing, 25(4), 809–819. https://doi.org/10.1007/s11222-015-9563-8","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/reference/spi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shortest Probability Interval (SPI) — spi","text":"","code":"library(bayestestR)  posterior <- rnorm(1000) spi(posterior) #> 95% SPI: [-1.99, 1.88] spi(posterior, ci = c(.80, .89, .95)) #> Shortest Probability Interval #>  #> 80% SPI       |       89% SPI |       95% SPI #> --------------------------------------------- #> [-1.33, 1.20] | [-1.52, 1.64] | [-1.99, 1.88]  df <- data.frame(replicate(4, rnorm(100))) spi(df) #> Shortest Probability Interval #>  #> Parameter |       95% SPI #> ------------------------- #> X1        | [-2.05, 1.50] #> X2        | [-1.93, 2.30] #> X3        | [-1.60, 2.00] #> X4        | [-1.99, 1.72] spi(df, ci = c(.80, .89, .95)) #> Shortest Probability Interval #>  #> Parameter |       80% SPI |       89% SPI |       95% SPI #> --------------------------------------------------------- #> X1        | [-1.68, 0.84] | [-1.68, 1.43] | [-2.05, 1.50] #> X2        | [-1.58, 1.28] | [-1.75, 1.92] | [-1.93, 2.30] #> X3        | [-1.32, 0.93] | [-1.06, 2.00] | [-1.60, 2.00] #> X4        | [-1.34, 0.76] | [-1.65, 1.04] | [-1.99, 1.72] if (FALSE) { library(rstanarm) model <- stan_glm(mpg ~ wt + gear, data = mtcars, chains = 2, iter = 200, refresh = 0) spi(model) }"},{"path":"https://easystats.github.io/bayestestR/reference/unupdate.html","id":null,"dir":"Reference","previous_headings":"","what":"Un-update Bayesian models to their prior-to-data state — unupdate","title":"Un-update Bayesian models to their prior-to-data state — unupdate","text":"posteriors priors updated observing data, goal function un-update posteriors obtain models representing priors. models can used examine prior predictive distribution, compare priors posteriors.  function used internally compute Bayes factors.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/unupdate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Un-update Bayesian models to their prior-to-data state — unupdate","text":"","code":"unupdate(model, verbose = TRUE, ...)  # S3 method for stanreg unupdate(model, verbose = TRUE, ...)  # S3 method for brmsfit unupdate(model, verbose = TRUE, ...)  # S3 method for brmsfit_multiple unupdate(model, verbose = TRUE, newdata = NULL, ...)  # S3 method for blavaan unupdate(model, verbose = TRUE, ...)"},{"path":"https://easystats.github.io/bayestestR/reference/unupdate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Un-update Bayesian models to their prior-to-data state — unupdate","text":"model fitted Bayesian model. verbose Toggle warnings. ... used newdata List data.frames update model new data. Required even original data used.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/unupdate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Un-update Bayesian models to their prior-to-data state — unupdate","text":"model un-fitted data, representing prior model.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/weighted_posteriors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate posterior distributions weighted across models — weighted_posteriors","title":"Generate posterior distributions weighted across models — weighted_posteriors","text":"Extract posterior samples parameters, weighted across models. Weighting done comparing posterior model probabilities, via bayesfactor_models().","code":""},{"path":"https://easystats.github.io/bayestestR/reference/weighted_posteriors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate posterior distributions weighted across models — weighted_posteriors","text":"","code":"weighted_posteriors(..., prior_odds = NULL, missing = 0, verbose = TRUE)  # S3 method for data.frame weighted_posteriors(..., prior_odds = NULL, missing = 0, verbose = TRUE)  # S3 method for stanreg weighted_posteriors(   ...,   prior_odds = NULL,   missing = 0,   verbose = TRUE,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\"),   parameters = NULL )  # S3 method for brmsfit weighted_posteriors(   ...,   prior_odds = NULL,   missing = 0,   verbose = TRUE,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\"),   parameters = NULL )  # S3 method for blavaan weighted_posteriors(   ...,   prior_odds = NULL,   missing = 0,   verbose = TRUE,   effects = c(\"fixed\", \"random\", \"all\"),   component = c(\"conditional\", \"zi\", \"zero_inflated\", \"all\"),   parameters = NULL )  # S3 method for BFBayesFactor weighted_posteriors(   ...,   prior_odds = NULL,   missing = 0,   verbose = TRUE,   iterations = 4000 )"},{"path":"https://easystats.github.io/bayestestR/reference/weighted_posteriors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate posterior distributions weighted across models — weighted_posteriors","text":"... Fitted models (see details), fit data, single BFBayesFactor object. prior_odds Optional vector prior odds models compared first model (denominator, BFBayesFactor objects). data.frames, used basis weighting. missing optional numeric value use model contain parameter appears models. Defaults 0. verbose Toggle warnings. effects results fixed effects, random effects returned? applies mixed models. May abbreviated. component results parameters, parameters conditional model zero-inflated part model returned? May abbreviated. applies brms-models. parameters Regular expression pattern describes parameters returned. Meta-parameters (like lp__ prior_) filtered default, parameters typically appear summary() returned. Use parameters select specific parameters output. iterations BayesFactor models, many posterior samples draw.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/weighted_posteriors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate posterior distributions weighted across models — weighted_posteriors","text":"data frame posterior distributions (weighted across models) .","code":""},{"path":"https://easystats.github.io/bayestestR/reference/weighted_posteriors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate posterior distributions weighted across models — weighted_posteriors","text":"Note across models parameters might play different roles. example, parameter plays different role model Y ~ + B (main effect) model Y ~ + B + :B (simple effect). many cases centering predictors (mean subtracting continuous variables, effects coding via contr.sum orthonormal coding via contr.orthonorm() factors) can reduce issue. case mindful issue.  See bayesfactor_models() details info passed models.  Note BayesFactor models, posterior samples generated intercept models.  function similar function brms::posterior_average.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/weighted_posteriors.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Generate posterior distributions weighted across models — weighted_posteriors","text":"BayesFactor < 0.9.12-4.3, instances might problems duplicate columns random effects resulting data frame.","code":""},{"path":"https://easystats.github.io/bayestestR/reference/weighted_posteriors.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate posterior distributions weighted across models — weighted_posteriors","text":"Clyde, M., Desimone, H., & Parmigiani, G. (1996). Prediction via orthogonalized model mixing. Journal American Statistical Association, 91(435), 1197-1208. Hinne, M., Gronau, Q. F., van den Bergh, D., Wagenmakers, E. (2019, March 25). conceptual introduction Bayesian Model Averaging. doi:10.31234/osf.io/wgb64 Rouder, J. N., Haaf, J. M., & Vandekerckhove, J. (2018). Bayesian inference psychology, part IV: Parameter estimation Bayes factors. Psychonomic bulletin & review, 25(1), 102-113. van den Bergh, D., Haaf, J. M., Ly, ., Rouder, J. N., & Wagenmakers, E. J. (2019). cautionary note estimating effect size.","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/reference/weighted_posteriors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate posterior distributions weighted across models — weighted_posteriors","text":"","code":"# \\donttest{ if (require(\"rstanarm\") && require(\"see\")) {   stan_m0 <- stan_glm(extra ~ 1,     data = sleep,     family = gaussian(),     refresh = 0,     diagnostic_file = file.path(tempdir(), \"df0.csv\")   )    stan_m1 <- stan_glm(extra ~ group,     data = sleep,     family = gaussian(),     refresh = 0,     diagnostic_file = file.path(tempdir(), \"df1.csv\")   )     res <- weighted_posteriors(stan_m0, stan_m1)    plot(eti(res)) } #> Warning: Bayes factors might not be precise. #> For precise Bayes factors, sampling at least 40,000 posterior samples is recommended. #> Computation of Bayes factors: estimating marginal likelihood, please wait... #> Error: Failed at retrieving data :( Please provide original model or data through the `data` argument  ## With BayesFactor if (require(\"BayesFactor\")) {   extra_sleep <- ttestBF(formula = extra ~ group, data = sleep)    wp <- weighted_posteriors(extra_sleep)    describe_posterior(extra_sleep, test = NULL)   describe_posterior(wp$delta, test = NULL) # also considers the null } #> Loading required package: BayesFactor #> Loading required package: coda #> Loading required package: Matrix #> ************ #> Welcome to BayesFactor 0.9.12-4.4. If you have questions, please contact Richard Morey (richarddmorey@gmail.com). #>  #> Type BFManual() to open the manual. #> ************ #> Summary of Posterior Distribution #>  #> Parameter | Median |        95% CI #> ---------------------------------- #> Posterior |  -0.11 | [-1.36, 0.02]   ## weighted prediction distributions via data.frames if (require(\"rstanarm\")) {   m0 <- stan_glm(     mpg ~ 1,     data = mtcars,     family = gaussian(),     diagnostic_file = file.path(tempdir(), \"df0.csv\"),     refresh = 0   )    m1 <- stan_glm(     mpg ~ carb,     data = mtcars,     family = gaussian(),     diagnostic_file = file.path(tempdir(), \"df1.csv\"),     refresh = 0   )    # Predictions:   pred_m0 <- data.frame(posterior_predict(m0))   pred_m1 <- data.frame(posterior_predict(m1))    BFmods <- bayesfactor_models(m0, m1)    wp <- weighted_posteriors(pred_m0, pred_m1,     prior_odds = as.numeric(BFmods)[2]   )    # look at first 5 prediction intervals   hdi(pred_m0[1:5])   hdi(pred_m1[1:5])   hdi(wp[1:5]) # between, but closer to pred_m1 } #> Warning: Bayes factors might not be precise. #> For precise Bayes factors, sampling at least 40,000 posterior samples is recommended. #> Computation of Bayes factors: estimating marginal likelihood, please wait... #> Error in UseMethod(\"hdi_\"): no applicable method for 'hdi_' applied to an object of class \"data.frame\" # }"},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bayestestr-0121","dir":"Changelog","previous_headings":"","what":"bayestestR 0.12.1","title":"bayestestR 0.12.1","text":"CRAN release: 2022-05-02","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"breaking-0-12-1","dir":"Changelog","previous_headings":"","what":"Breaking","title":"bayestestR 0.12.1","text":"Bayesfactor_models() frequentist models now relies updated insight::get_loglikelihood(). might change results REML based models. See documentation. estimate_density() argument group_by renamed . distribution_*(random = FALSE) functions now rely ppoints(), result slightly different results, especially small ns. Uncertainty estimation now defaults \"eti\" (formerly \"hdi\").","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"changes-0-12-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"bayestestR 0.12.1","text":"bayestestR functions now support draws objects package posterior. rope_range() now handles log(normal)-families models log-transformed outcomes. New function spi(), compute shortest probability intervals. Furthermore, \"spi\" option added new method compute uncertainty intervals.","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bug-fixes-0-12-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bayestestR 0.12.1","text":"bci() objects incorrectly returned equal-tailed intervals.","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bayestestr-0115","dir":"Changelog","previous_headings":"","what":"bayestestR 0.11.5","title":"bayestestR 0.11.5","text":"CRAN release: 2021-10-30 Fixes failing tests CRAN checks.","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"new-functions-0-11-1","dir":"Changelog","previous_headings":"","what":"New functions","title":"bayestestR 0.11.1","text":"describe_posterior() gains plot() method, short cut plot(estimate_density(describe_posterior())).","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bug-fixes-0-11","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bayestestR 0.11","text":"Fixed issues related last brms update. Fixed bug describe_posterior.BFBayesFactor() Bayes factors missing put ( #442 ).","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bayestestr-0100","dir":"Changelog","previous_headings":"","what":"bayestestR 0.10.0","title":"bayestestR 0.10.0","text":"CRAN release: 2021-05-31","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"breaking-0-10-0","dir":"Changelog","previous_headings":"","what":"Breaking","title":"bayestestR 0.10.0","text":"Bayes factors now returned log(BF) (column name log_BF). Printing unaffected. retrieve raw BFs, can run exp(result$log_BF).","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"new-functions-0-10-0","dir":"Changelog","previous_headings":"","what":"New functions","title":"bayestestR 0.10.0","text":"bci() (alias bcai()) compute bias-corrected accelerated bootstrap intervals. Along new function, ci() describe_posterior() gain new ci_method type, \"bci\".","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"changes-0-10-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"bayestestR 0.10.0","text":"contr.bayes renamed contr.orthonorm explicit function.","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bayestestr-090","dir":"Changelog","previous_headings":"","what":"bayestestR 0.9.0","title":"bayestestR 0.9.0","text":"CRAN release: 2021-04-08","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"breaking-0-9-0","dir":"Changelog","previous_headings":"","what":"Breaking","title":"bayestestR 0.9.0","text":"default ci width changed 0.95 instead 0.89 (see ). come surprise long-time users bayestestR warning impending change now :) Column names bayesfactor_restricted() now p_prior p_posterior (Prior_prob Posterior_prob), consistent bayesfactor_inclusion() output. Removed experimental function mhdior.","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"general-0-9-0","dir":"Changelog","previous_headings":"","what":"General","title":"bayestestR 0.9.0","text":"Support blavaan models. Support blrm models (rmsb). Support BGGM models (BGGM). check_prior() describe_prior() now also work ways prior definition models rstanarm brms.","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bug-fixes-0-9-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bayestestR 0.9.0","text":"Fixed bug print() method mediation() function. Fixed remaining inconsistencies CI values, reported fraction rope(). Fixed issues special prior definitions check_prior(), describe_prior() simulate_prior().","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bayestestr-082","dir":"Changelog","previous_headings":"","what":"bayestestR 0.8.2","title":"bayestestR 0.8.2","text":"CRAN release: 2021-01-26","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"general-0-8-2","dir":"Changelog","previous_headings":"","what":"General","title":"bayestestR 0.8.2","text":"Support bamlss models. Roll-back R dependency R >= 3.4.","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"changes-to-functions-0-8-2","dir":"Changelog","previous_headings":"","what":"Changes to functions","title":"bayestestR 0.8.2","text":".stanreg methods gain component argument, also include auxiliary parameters.","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bug-fixes-0-8-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bayestestR 0.8.2","text":"bayesfactor_parameters() longer errors reason computing extremely un/likely direction hypotheses. bayesfactor_pointull() / bf_pointull() now bayesfactor_pointnull() / bf_pointnull() (can spot difference? #363 ).","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bayestestr-080","dir":"Changelog","previous_headings":"","what":"bayestestR 0.8.0","title":"bayestestR 0.8.0","text":"CRAN release: 2020-12-05","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"new-functions-0-8-0","dir":"Changelog","previous_headings":"","what":"New functions","title":"bayestestR 0.8.0","text":"sexit(), function sequential effect existence significance testing (SEXIT).","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"general-0-8-0","dir":"Changelog","previous_headings":"","what":"General","title":"bayestestR 0.8.0","text":"Added startup-message warn users default ci-width might change future update. Added support mcmc.list objects.","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bug-fixes-0-8-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bayestestR 0.8.0","text":"unupdate() gains newdata argument work brmsfit_multiple models. Fixed issue Bayes factor vignette (don’t evaluate code chunks packages available).","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bayestestr-075","dir":"Changelog","previous_headings":"","what":"bayestestR 0.7.5","title":"bayestestR 0.7.5","text":"CRAN release: 2020-10-22","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"new-functions-0-7-5","dir":"Changelog","previous_headings":"","what":"New functions","title":"bayestestR 0.7.5","text":"Added .matrix() function bayesfactor_model arrays. unupdate(), utility function get Bayesian models un-fitted data, representing priors .","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"changes-to-functions-0-7-5","dir":"Changelog","previous_headings":"","what":"Changes to functions","title":"bayestestR 0.7.5","text":"ci() supports emmeans - Bayesian frequentist ( #312 - cross fix parameters)","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bug-fixes-0-7-5","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bayestestR 0.7.5","text":"Fixed issue default rope range BayesFactor models. Fixed issue collinearity-check rope() models less two parameters. Fixed issue print-method mediation() stanmvreg-models, displays wrong name response-value. Fixed issue effective_sample() models one parameter. rope_range() BayesFactor models returns non-NA values ( #343 )","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bayestestr-072","dir":"Changelog","previous_headings":"","what":"bayestestR 0.7.2","title":"bayestestR 0.7.2","text":"CRAN release: 2020-07-20","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"new-functions-0-7-2","dir":"Changelog","previous_headings":"","what":"New functions","title":"bayestestR 0.7.2","text":"mediation(), compute average direct average causal mediation effects multivariate response models (brmsfit, stanmvreg).","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bug-fixes-0-7-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bayestestR 0.7.2","text":"bayesfactor_parameters() works R<3.6.0.","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bayestestr-070","dir":"Changelog","previous_headings":"","what":"bayestestR 0.7.0","title":"bayestestR 0.7.0","text":"CRAN release: 2020-06-19","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"general-0-7-0","dir":"Changelog","previous_headings":"","what":"General","title":"bayestestR 0.7.0","text":"Preliminary support stanfit objects. Added support bayesQR objects.","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"changes-to-functions-0-7-0","dir":"Changelog","previous_headings":"","what":"Changes to functions","title":"bayestestR 0.7.0","text":"weighted_posteriors() can now used data frames. Revised print() describe_posterior(). Improved value formatting Bayesfactor functions.","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bug-fixes-0-7-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bayestestR 0.7.0","text":"Link transformation now taken account emmeans objets. E.g., describe_posterior(). Fix diagnostic_posterior() algorithm “sampling”. Minor revisions documentations. Fix CRAN check issues win-old-release.","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bayestestr-060","dir":"Changelog","previous_headings":"","what":"bayestestR 0.6.0","title":"bayestestR 0.6.0","text":"CRAN release: 2020-04-20","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"changes-to-functions-0-6-0","dir":"Changelog","previous_headings":"","what":"Changes to functions","title":"bayestestR 0.6.0","text":"describe_posterior() now also works effectsize::standardize_posteriors(). p_significance() now also works parameters::simulate_model(). rope_range() supports (frequentis) models.","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bug-fixes-0-6-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bayestestR 0.6.0","text":"Fixed issue plot() data.frame-methods p_direction() equivalence_test(). Fix check issues forthcoming insight-update.","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bayestestr-053","dir":"Changelog","previous_headings":"","what":"bayestestR 0.5.3","title":"bayestestR 0.5.3","text":"CRAN release: 2020-03-26","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"general-0-5-3","dir":"Changelog","previous_headings":"","what":"General","title":"bayestestR 0.5.3","text":"Support bcplm objects (package cplm)","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"changes-to-functions-0-5-3","dir":"Changelog","previous_headings":"","what":"Changes to functions","title":"bayestestR 0.5.3","text":"estimate_density() now also works grouped data frames.","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bug-fixes-0-5-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bayestestR 0.5.3","text":"Fixed bug weighted_posteriors() properly weight Intercept-BFBayesFactor models. Fixed bug weighted_posteriors() models low posterior probability ( #286 ). Fixed bug describe_posterior(), rope() equivalence_test() brmsfit models monotonic effect. Fixed issues related latest changes .data.frame.brmsfit() brms package.","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bayestestr-050","dir":"Changelog","previous_headings":"","what":"bayestestR 0.5.0","title":"bayestestR 0.5.0","text":"CRAN release: 2020-01-18","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"general-0-5-0","dir":"Changelog","previous_headings":"","what":"General","title":"bayestestR 0.5.0","text":"Added p_pointnull() alias p_MAP(). Added si() function compute support intervals. Added weighted_posteriors() generating posterior samples averaged across models. Added plot()-method p_significance(). p_significance() now also works brmsfit-objects. estimate_density() now also works MCMCglmm-objects. equivalence_test() gets effects component arguments stanreg brmsfit models, print specific model components. Support mcmc objects (package coda) Provide distributions via distribution(). Added distribution_tweedie(). Better handling stanmvreg models describe_posterior(), diagnostic_posterior() describe_prior().","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"breaking-changes-0-5-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"bayestestR 0.5.0","text":"point_estimate(): argument centrality default value changed ‘median’ ‘’. p_rope(), previously exploratory index, renamed mhdior() (Max HDI inside/outside ROPE), p_rope() refer rope(..., ci =   1) ( #258 )","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bug-fixes-0-5-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bayestestR 0.5.0","text":"Fixed mistake description p_significance(). Fixed error computing BFs emmGrid based non-linear models ( #260 ). Fixed wrong output percentage-values print.equivalence_test(). Fixed issue describe_posterior() BFBayesFactor-objects one model.","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bayestestr-040","dir":"Changelog","previous_headings":"","what":"bayestestR 0.4.0","title":"bayestestR 0.4.0","text":"CRAN release: 2019-10-20","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"new-functions--features-0-4-0","dir":"Changelog","previous_headings":"","what":"New functions / features","title":"bayestestR 0.4.0","text":"convert_bayesian_to_frequentist() Convert (refit) Bayesian model frequentist distribution_binomial() perfect binomial distributions simulate_ttest() Simulate data mean difference simulate_correlation() Simulate correlated datasets p_significance() Compute probability Practical Significance (ps) overlap() Compute overlap two empirical distributions estimate_density(): method = \"mixture\" argument added mixture density estimation","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bug-fixes-0-4-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bayestestR 0.4.0","text":"Fixed bug simulate_prior() stanreg-models autoscale set FALSE","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bayestestr-030","dir":"Changelog","previous_headings":"","what":"bayestestR 0.3.0","title":"bayestestR 0.3.0","text":"CRAN release: 2019-09-22","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"general-0-3-0","dir":"Changelog","previous_headings":"","what":"General","title":"bayestestR 0.3.0","text":"revised print()-methods functions like rope(), p_direction(), describe_posterior() etc., particular model objects random effects /zero-inflation component","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"new-functions--features-0-3-0","dir":"Changelog","previous_headings":"","what":"New functions / features","title":"bayestestR 0.3.0","text":"check_prior() check prior informative simulate_prior() simulate model’s priors distributions distribution_gamma() generate (near-perfect random) Gamma distribution contr.bayes function orthogonal factor coding (implementation Singmann & Gronau’s bfrms, used proper prior estimation factor 3 levels . See Bayes factor vignette ## Changes functions Added support sim, sim.merMod (arm::sim()) MCMCglmm-objects many functions (like hdi(), ci(), eti(), rope(), p_direction(), point_estimate(), …) describe_posterior() gets effects component argument, include description posterior samples random effects /zero-inflation component. user-friendly warning non-supported models bayesfactor()-methods","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bayestestR 0.3.0","text":"Fixed bug bayesfactor_inclusion() interaction sometimes appeared (#223) Fixed bug describe_posterior() stanreg models fitted fullrank-algorithm","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bayestestr-025","dir":"Changelog","previous_headings":"","what":"bayestestR 0.2.5","title":"bayestestR 0.2.5","text":"CRAN release: 2019-08-06","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"breaking-changes-0-2-5","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"bayestestR 0.2.5","text":"rope_range() binomial model now different default (-.18; .18 ; instead -.055; .055) rope(): returns proportion (0 1) instead value 0 100 p_direction(): returns proportion (0.5 1) instead value 50 100 (#168) bayesfactor_savagedickey(): hypothesis argument replaced null part new bayesfactor_parameters() function","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"new-functions--features-0-2-5","dir":"Changelog","previous_headings":"","what":"New functions / features","title":"bayestestR 0.2.5","text":"density_at(), p_map() map_estimate(): method argument added rope(): ci_method argument added eti(): Computes equal-tailed intervals reshape_ci(): Reshape CIs wide/long bayesfactor_parameters(): New function, replacing bayesfactor_savagedickey(), allows computing Bayes factors point-null interval-null bayesfactor_restricted(): Function computing Bayes factors order restricted models","code":""},{"path":[]},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bug-fixes-0-2-5","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bayestestR 0.2.5","text":"bayesfactor_inclusion() now works R < 3.6.","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bayestestr-022","dir":"Changelog","previous_headings":"","what":"bayestestR 0.2.2","title":"bayestestR 0.2.2","text":"CRAN release: 2019-06-20","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"breaking-changes-0-2-2","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"bayestestR 0.2.2","text":"equivalence_test(): returns capitalized output (e.g., Rejected instead rejected) describe_posterior.numeric(): dispersion defaults FALSE consistency methods","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"new-functions--features-0-2-2","dir":"Changelog","previous_headings":"","what":"New functions / features","title":"bayestestR 0.2.2","text":"pd_to_p() p_to_pd(): Functions convert probability direction (pd) p-value Support emmGrid objects: ci(), rope(), bayesfactor_savagedickey(), describe_posterior(), …","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"minor-changes-0-2-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"bayestestR 0.2.2","text":"Improved tutorial 2","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bug-fixes-0-2-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bayestestR 0.2.2","text":"describe_posterior(): Fixed column order restoration bayesfactor_inclusion(): Inclusion BFs matched models inline JASP results.","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bayestestr-020","dir":"Changelog","previous_headings":"","what":"bayestestR 0.2.0","title":"bayestestR 0.2.0","text":"CRAN release: 2019-05-29","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"breaking-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"bayestestR 0.2.0","text":"plotting functions now require installation see package estimate argument name describe_posterior() point_estimate() changed centrality hdi(), ci(), rope() equivalence_test() default ci 0.89 rnorm_perfect() deprecated favour distribution_normal() map_estimate() now returns single value instead dataframe density parameter removed. MAP density value now accessible via attributes(map_output)$MAP_density","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"new-functions--features-0-2-0","dir":"Changelog","previous_headings":"","what":"New functions / features","title":"bayestestR 0.2.0","text":"describe_posterior(), describe_prior(), diagnostic_posterior(): added wrapper function point_estimate() added function compute point estimates p_direction(): new argument method compute pd based AUC area_under_curve(): compute AUC distribution() functions added bayesfactor_savagedickey(), bayesfactor_models() bayesfactor_inclusion() functions added Started adding plotting methods (currently see package) p_direction() hdi() probability_at() alias density_at() effective_sample() return effective sample size Stan-models mcse() return Monte Carlo standard error Stan-models","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"minor-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"bayestestR 0.2.0","text":"Improved documentation Improved testing p_direction(): improved printing rope() model-objects now returns HDI values parameters attribute consistent way Changes legend-labels plot.equivalence_test() align plots output print()-method (#78)","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bayestestR 0.2.0","text":"hdi() returned multiple class attributes (#72) Printing results hdi() failed ci-argument fractional parts percentage values (e.g. ci = .995). plot.equivalence_test() work properly brms-models (#76).","code":""},{"path":"https://easystats.github.io/bayestestR/news/index.html","id":"bayestestr-010","dir":"Changelog","previous_headings":"","what":"bayestestR 0.1.0","title":"bayestestR 0.1.0","text":"CRAN release: 2019-04-08 CRAN initial publication 0.1.0 release Added NEWS.md file track changes package","code":""}]
